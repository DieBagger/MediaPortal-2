<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mediaportal.TV.Server.TVLibrary</name>
    </assembly>
    <members>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming">
            <summary>
            Hamming class
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.Decode">
            <summary>
            Hamming 8/4 Decoding table with error correction based on http://pdc.ro.nu/hamming.html
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.Encode">
            <summary>
            Hamming 8/4 Encoding table with error correction based on http://pdc.ro.nu/hamming.html
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.GetPacketNumber(System.Int32,System.Byte[]@)">
            <summary>
            Extracts the packetnumber from the teletext header
            </summary>
            <param name="offset">Offset in the data stream</param>
            <param name="rowData">Teletext data</param>
            <returns>PacketNumber of the teletext page row</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.GetPageNumber(System.Int32,System.Byte[]@)">
            <summary>
            Extracts the pagenumber from the teletext header
            </summary>
            <param name="offset">Offset in the data stream</param>
            <param name="rowData">Teletext data</param>
            <returns>PageNumber of the teletext page</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.GetSubPageNumber(System.Int32,System.Byte[]@)">
            <summary>
            Extracts the subpagenumber from the teletext header
            </summary>
            <param name="offset">Offset in the data stream</param>
            <param name="rowData">Teletext data</param>
            <returns>SubPageNumber of the teletext page</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.IsEraseBitSet(System.Int32,System.Byte[]@)">
            <summary>
            Check if the erase bit (C4) is set in the teletext page header
            </summary>
            <param name="offset">Offset in the data stream</param>
            <param name="rowData">Teletext data</param>
            <returns>true, if erase bit is set</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.IsUpdateBitSet(System.Int32,System.Byte[]@)">
            <summary>
            Check if the erase bit (C8) is set in the teletext page header
            </summary>
            <param name="offset">Offset in the data stream</param>
            <param name="rowData">Teletext data</param>
            <returns>true, if erase bit is set</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.IsNewsflash(System.Int32,System.Byte[]@)">
            <summary>
            Check if the newsflash bit (C7) is set in the teletext page header
            </summary>
            <param name="offset">Offset in the data stream</param>
            <param name="rowData">Teletext data</param>
            <returns>true, if newsflash bit is set</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.IsSubtitleBitSet(System.Int32,System.Byte[]@)">
            <summary>
            Check if the subtitle bit (C6) is set in the teletext page header
            </summary>
            <param name="offset">Offset in the data stream</param>
            <param name="rowData">Teletext data</param>
            <returns>true, if subtitle bit is set</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.IsSerial(System.Int32,System.Byte[]@)">
            <summary>
            Check if the magazin serial bit (C11) is set in the teletext page header
            </summary>
            <param name="offset">Offset in the data stream</param>
            <param name="rowData">Teletext data</param>
            <returns>true, if magazin serial is set</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.SetSubPageNumber(System.Int32,System.Byte[]@,System.Int32)">
            <summary>
            Sets a page number in teletext header into the given data stream
            </summary>
            <param name="offset">Offset in the data stream</param>
            <param name="rowData">Teletext data</param>
            <param name="hexSubPageNr">PageNumber (Hex representation)</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.SetHeader(System.Int32,System.Byte[]@,System.Int32,System.Int32)">
            <summary>
            Sets a page header into the given data stream
            </summary>
            <param name="offset">Offset in the data stream</param>
            <param name="byData">Teletext data</param>
            <param name="pagenr">PageNumber</param>
            <param name="subnr">SubPageNumber</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.Hamming.SetPacketNumber(System.Int32,System.Byte[]@,System.Int32,System.Int32)">
            <summary>
            Sets a packet number in teletext header into the given data stream
            </summary>
            <param name="offset">Offset in the data stream</param>
            <param name="byData">Teletext data</param>
            <param name="pageNumber">PageNumber (needed for magazin number)</param>
            <param name="packetNumber">PacketNumber</param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools">
            <summary>
            A collection of methods to do common DirectShow tasks.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.AddFilterFromClsid(DirectShowLib.IGraphBuilder,System.Guid,System.String)">
            <summary>
            Add a filter to a DirectShow Graph using its CLSID
            </summary>
            <param name="graphBuilder">the IGraphBuilder interface of the graph</param>
            <param name="clsid">a valid CLSID. This object must implement IBaseFilter</param>
            <param name="name">the name used in the graph (may be null)</param>
            <returns>an instance of the filter if the method successfully created it, null if not</returns>
            <remarks>
            You can use <see cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.IsThisComObjectInstalled(System.Guid)">IsThisComObjectInstalled</see> to check is the CLSID is valid before calling this method
            </remarks>
            <example>This sample shows how to programmatically add a NVIDIA Video decoder filter to a graph
            <code>
            Guid nvidiaVideoDecClsid = new Guid("71E4616A-DB5E-452B-8CA5-71D9CC7805E9");
            
            if (FilterGraphTools.IsThisComObjectInstalled(nvidiaVideoDecClsid))
            {
              filter = FilterGraphTools.AddFilterFromClsid(graphBuilder, nvidiaVideoDecClsid, "NVIDIA Video Decoder");
            }
            else
            {
              // use another filter...
            }
            </code>
            </example>
            <seealso cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.IsThisComObjectInstalled(System.Guid)"/>
            <exception cref="T:System.ArgumentNullException">Thrown if graphBuilder is null</exception>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if errors occur when the filter is add to the graph</exception>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.AddFilterByName(DirectShowLib.IGraphBuilder,System.Guid,System.String)">
            <summary>
            Add a filter to a DirectShow Graph using its name
            </summary>
            <param name="graphBuilder">the IGraphBuilder interface of the graph</param>
            <param name="deviceCategory">the filter category (see DirectShowLib.FilterCategory)</param>
            <param name="friendlyName">the filter name (case-sensitive)</param>
            <returns>an instance of the filter if the method successfully created it, null if not</returns>
            <example>This sample shows how to programmatically add a NVIDIA Video decoder filter to a graph
            <code>
            filter = FilterGraphTools.AddFilterByName(graphBuilder, FilterCategory.LegacyAmFilterCategory, "NVIDIA Video Decoder");
            </code>
            </example>
            <exception cref="T:System.ArgumentNullException">Thrown if graphBuilder is null</exception>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if errors occur when the filter is add to the graph</exception>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.AddFilterByDevicePath(DirectShowLib.IGraphBuilder,System.String,System.String)">
            <summary>
            Add a filter to a DirectShow Graph using its Moniker's device path
            </summary>
            <param name="graphBuilder">the IGraphBuilder interface of the graph</param>
            <param name="devicePath">a moniker path</param>
            <param name="name">the name to use for the filter in the graph</param>
            <returns>an instance of the filter if the method successfully creates it, null if not</returns>
            <example>This sample shows how to programmatically add a NVIDIA Video decoder filter to a graph
            <code>
            string devicePath = @"@device:sw:{083863F1-70DE-11D0-BD40-00A0C911CE86}\{71E4616A-DB5E-452B-8CA5-71D9CC7805E9}";
            filter = FilterGraphTools.AddFilterByDevicePath(graphBuilder, devicePath, "NVIDIA Video Decoder");
            </code>
            </example>
            <exception cref="T:System.ArgumentNullException">Thrown if graphBuilder is null</exception>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if errors occur when the filter is add to the graph</exception>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.FindFilterByName(DirectShowLib.IGraphBuilder,System.String)">
            <summary>
            Find a filter in a DirectShow Graph using its name
            </summary>
            <param name="graphBuilder">the IGraphBuilder interface of the graph</param>
            <param name="filterName">the filter name to find (case-sensitive)</param>
            <returns>an instance of the filter if found, null if not</returns>
            <seealso cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.FindFilterByClsid(DirectShowLib.IGraphBuilder,System.Guid)"/>
            <exception cref="T:System.ArgumentNullException">Thrown if graphBuilder is null</exception>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.FindFilterByClsid(DirectShowLib.IGraphBuilder,System.Guid)">
            <summary>
            Find a filter in a DirectShow Graph using its CLSID
            </summary>
            <param name="graphBuilder">the IGraphBuilder interface of the graph</param>
            <param name="filterClsid">the CLSID to find</param>
            <returns>an instance of the filter if found, null if not</returns>
            <seealso cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.FindFilterByName(DirectShowLib.IGraphBuilder,System.String)"/>
            <exception cref="T:System.ArgumentNullException">Thrown if graphBuilder is null</exception>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.RenderPin(DirectShowLib.IGraphBuilder,DirectShowLib.IBaseFilter,System.String)">
            <summary>
            Render a filter's pin in a DirectShow Graph
            </summary>
            <param name="graphBuilder">the IGraphBuilder interface of the graph</param>
            <param name="source">the filter containing the pin to render</param>
            <param name="pinName">the pin name</param>
            <returns>true if rendering is a success, false if not</returns>
            <example>
            <code>
            hr = graphBuilder.AddSourceFilter(@"foo.avi", "Source Filter", out filter);
            DsError.ThrowExceptionForHR(hr);
            
            if (!FilterGraphTools.RenderPin(graphBuilder, filter, "Output"))
            {
              // Something went wrong...
            }
            </code>
            </example>
            <exception cref="T:System.ArgumentNullException">Thrown if graphBuilder or source is null</exception>
            <remarks>This method assumes that the filter is part of the given graph</remarks>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.FindMediaPin(DirectShowLib.IBaseFilter,System.Guid,System.Guid,DirectShowLib.PinDirection,System.Int32@)">
            <summary>
            Find a pin on the filter specified
            which can supplies the mediatype and mediasubtype specified
            if found the pin is returned
            </summary>
            <param name="filter">The filter to find the pin on.</param>
            <param name="mediaType">Type of the media.</param>
            <param name="mediaSubtype">The media subtype.</param>
            <param name="direction">The direction of the pin</param>
            <param name="index">Index of the pin</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetPinByName(DirectShowLib.IBaseFilter,System.String,DirectShowLib.PinDirection,System.Int32@)">
            <summary>
            Scans a filter's pins looking for a pin with the specified name
            </summary>
            <param name="vSource">The filter to scan</param>
            <param name="vPinName">The pin name to find</param>
            <param name="vDir">The direction of the pin</param>
            <param name="pinIndex">The index of the pin</param>
            <returns>The matching pin, or null if not found</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetAllNextFilters(DirectShowLib.IBaseFilter,System.Guid,DirectShowLib.PinDirection)">
            <summary>
             Enumerates and DirectShow graph starting with vSource into specific direction. It takes only Pins into account,
             that match a given PinCategory.
            </summary>
            <param name="vSource">Starting IBaseFilter</param>
            <param name="pinCategory">PinCategory</param>
            <param name="vDir">Direction</param>
            <returns>List of next IBaseFilters</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetPinByCategoryAndDirection(DirectShowLib.IBaseFilter,System.Guid,System.Int32,DirectShowLib.PinDirection,System.Int32@)">
            <summary>
            Scan's a filter's pins looking for a pin with the specified category and direction
            </summary>
            <param name="vSource">The filter to scan</param>
            <param name="PinCategory">The guid from PinCategory to scan for</param>
            <param name="iIndex">Zero based index (ie 2 will return the third pin of the specified category)</param>
            <param name="vDir">The direction of the pin</param>
            <param name="pinIndex">The index of the pin</param>
            <returns>The matching pin, or null if not found</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.DisconnectPins(DirectShowLib.IBaseFilter)">
            <summary>
            Disconnect all pins on a given filter
            </summary>
            <param name="filter">the filter on which to disconnect all the pins</param>
            <exception cref="T:System.ArgumentNullException">Thrown if filter is null</exception>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if errors occured during the disconnection process</exception>
            <remarks>Both input and output pins are disconnected</remarks>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.DisconnectAllPins(DirectShowLib.IGraphBuilder)">
            <summary>
            Disconnect pins of all the filters in a DirectShow Graph
            </summary>
            <param name="graphBuilder">the IGraphBuilder interface of the graph</param>
            <exception cref="T:System.ArgumentNullException">Thrown if graphBuilder is null</exception>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if the method can't enumerate its filters</exception>
            <remarks>This method doesn't throw an exception if an error occurs during pin disconnections</remarks>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.RemoveAllFilters(DirectShowLib.IGraphBuilder)">
            <summary>
            Remove and release all filters from a DirectShow Graph
            </summary>
            <param name="graphBuilder">the IGraphBuilder interface of the graph</param>
            <exception cref="T:System.ArgumentNullException">Thrown if graphBuilder is null</exception>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if the method can't enumerate its filters</exception>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.SaveGraphFile(DirectShowLib.IGraphBuilder,System.String)">
            <summary>
            Save a DirectShow Graph to a GRF file
            </summary>
            <param name="graphBuilder">the IGraphBuilder interface of the graph</param>
            <param name="fileName">the file to be saved</param>
            <exception cref="T:System.ArgumentNullException">Thrown if graphBuilder is null</exception>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if errors occur during the file creation</exception>
            <seealso cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.LoadGraphFile(DirectShowLib.IGraphBuilder,System.String)"/>
            <remarks>This method overwrites any existing file</remarks>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.LoadGraphFile(DirectShowLib.IGraphBuilder,System.String)">
            <summary>
            Load a DirectShow Graph from a file
            </summary>
            <param name="graphBuilder">the IGraphBuilder interface of the graph</param>
            <param name="fileName">the file to be loaded</param>
            <exception cref="T:System.ArgumentNullException">Thrown if graphBuilder is null</exception>
            <exception cref="T:System.ArgumentException">Thrown if the given file is not a valid graph file</exception>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if errors occur during loading</exception>
            <seealso cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.SaveGraphFile(DirectShowLib.IGraphBuilder,System.String)"/>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.HasPropertyPages(DirectShowLib.IBaseFilter)">
            <summary>
            Check if a DirectShow filter can display Property Pages
            </summary>
            <param name="filter">A DirectShow Filter</param>
            <exception cref="T:System.ArgumentNullException">Thrown if filter is null</exception>
            <seealso cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.ShowFilterPropertyPage(DirectShowLib.IBaseFilter,System.IntPtr)"/>
            <returns>true if the filter has Property Pages, false if not</returns>
            <remarks>
            This method is intended to be used with <see cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.ShowFilterPropertyPage(DirectShowLib.IBaseFilter,System.IntPtr)">ShowFilterPropertyPage</see>
            </remarks>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.ShowFilterPropertyPage(DirectShowLib.IBaseFilter,System.IntPtr)">
            <summary>
            Display Property Pages of a given DirectShow filter
            </summary>
            <param name="filter">A DirectShow Filter</param>
            <param name="parent">A hwnd handle of a window to contain the pages</param>
            <exception cref="T:System.ArgumentNullException">Thrown if filter is null</exception>
            <seealso cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.HasPropertyPages(DirectShowLib.IBaseFilter)"/>
            <remarks>
            You can check if a filter supports Property Pages with the <see cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.HasPropertyPages(DirectShowLib.IBaseFilter)">HasPropertyPages</see> method.<br/>
            <strong>Warning</strong> : This method is blocking. It only returns when the Property Pages are closed.
            </remarks>
            <example>This sample shows how to check if a filter supports Property Pages and displays them
            <code>
            if (FilterGraphTools.HasPropertyPages(myFilter))
            {
              FilterGraphTools.ShowFilterPropertyPage(myFilter, myForm.Handle);
            }
            </code>
            </example>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.IsThisComObjectInstalled(System.Guid)">
            <summary>
            Check if a COM Object is available
            </summary>
            <param name="clsid">The CLSID of this object</param>
            <example>This sample shows how to check if the MPEG-2 Demultiplexer filter is available
            <code>
            if (FilterGraphTools.IsThisComObjectInstalled(typeof(MPEG2Demultiplexer).GUID))
            {
              // Use it...
            }
            </code>
            </example>
            <returns>true if the object is available, false if not</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.IsVMR9Present">
            <summary>
            Check if the Video Mixing Renderer 9 Filter is available
            <seealso cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.IsThisComObjectInstalled(System.Guid)"/>
            </summary>
            <remarks>
            This method uses <see cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.IsThisComObjectInstalled(System.Guid)">IsThisComObjectInstalled</see> internally
            </remarks>
            <returns>true if VMR9 is present, false if not</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.IsVMR7Present">
            <summary>
            Check if the Video Mixing Renderer 7 Filter is available
            <seealso cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.IsThisComObjectInstalled(System.Guid)"/>
            </summary>
            <remarks>
            This method uses <see cref="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.IsThisComObjectInstalled(System.Guid)">IsThisComObjectInstalled</see> internally
            </remarks>
            <returns>true if VMR7 is present, false if not</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.ConnectFilters(DirectShowLib.IGraphBuilder,DirectShowLib.IBaseFilter,System.String,DirectShowLib.IBaseFilter,System.String,System.Boolean)">
            <summary>
            Connect pins from two filters
            </summary>
            <param name="graphBuilder">the IGraphBuilder interface of the graph</param>
            <param name="upFilter">the upstream filter</param>
            <param name="sourcePinName">the upstream filter pin name</param>
            <param name="downFilter">the downstream filter</param>
            <param name="destPinName">the downstream filter pin name</param>
            <param name="useIntelligentConnect">indicate if the method should use DirectShow's Intelligent Connect</param>
            <exception cref="T:System.ArgumentNullException">Thrown if graphBuilder, upFilter or downFilter are null</exception>
            <exception cref="T:System.ArgumentException">Thrown if pin names are not found in filters</exception>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if pins can't connect</exception>
            <remarks>
            If useIntelligentConnect is true, this method can add missing filters between the two pins.<br/>
            If useIntelligentConnect is false, this method works only if the two media types are compatible.
            </remarks>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.ConnectFilters(DirectShowLib.IGraphBuilder,DirectShowLib.IPin,DirectShowLib.IPin,System.Boolean)">
            <summary>
            Connect pins from two filters
            </summary>
            <param name="graphBuilder">the IGraphBuilder interface of the graph</param>
            <param name="sourcePin">the source (upstream / output) pin</param>
            <param name="destPin">the destination (downstream / input) pin</param>
            <param name="useIntelligentConnect">indicates if the method should use DirectShow's Intelligent Connect</param>
            <exception cref="T:System.ArgumentNullException">Thrown if graphBuilder, sourcePin or destPin are null</exception>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if pins can't connect</exception>
            <remarks>
            If useIntelligentConnect is true, this method can add missing filters between the two pins.<br/>
            If useIntelligentConnect is false, this method works only if the two media types are compatible.
            </remarks>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.ConnectPin(DirectShowLib.IGraphBuilder,DirectShowLib.IPin,DirectShowLib.IBaseFilter,System.Int32)">
            <summary>
            helper function to connect 2 filters
            </summary>
            <param name="graphBuilder">graph builder interface</param>
            <param name="pinSource">souce pin</param>
            <param name="filterDest">destination filter</param>
            <param name="destPinIndex">input pin index</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.ConnectFilter(DirectShowLib.IGraphBuilder,DirectShowLib.IPin,DirectShowLib.IBaseFilter)">
            <summary>
            helper function to connect 2 filters
            </summary>
            <param name="graphBuilder">The graph builder.</param>
            <param name="pinSource">The ping source.</param>
            <param name="destinationFilter">The destination filter.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.ConnectFilter(DirectShowLib.IGraphBuilder,DirectShowLib.IPin,DirectShowLib.IBaseFilter,System.Int32@)">
            <summary>
            helper function to connect 2 filters
            </summary>
            <param name="graphBuilder">The graph builder.</param>
            <param name="pinSource">The ping source.</param>
            <param name="destinationFilter">The destination filter.</param>
            <param name="destinationPinIndex">The index of the destination pin</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.ConnectFilter(DirectShowLib.IGraphBuilder,DirectShowLib.IBaseFilter,DirectShowLib.IPin)">
            <summary>
            helper function to connect 2 filters
            </summary>
            <param name="graphBuilder">The graph builder.</param>
            <param name="sourceFilter">The source filter.</param>
            <param name="pinDestination">The pin destination.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.ConnectFilter(DirectShowLib.IGraphBuilder,DirectShowLib.IBaseFilter,DirectShowLib.IPin,System.Int32@)">
            <summary>
            helper function to connect 2 filters
            </summary>
            <param name="graphBuilder">The graph builder.</param>
            <param name="sourceFilter">The source filter.</param>
            <param name="pinDestination">The pin destination.</param>
            <param name="sourcePinIndex">The determined output index of the source filter</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.ConnectFilter(DirectShowLib.IGraphBuilder,DirectShowLib.IBaseFilter,DirectShowLib.IBaseFilter)">
            <summary>
            helper function to connect 2 filters
            </summary>
            <param name="graphBuilder">The graph builder.</param>
            <param name="sourceFilter">The source filter.</param>
            <param name="destinationFilter">The destination filter.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.ConnectFilter(DirectShowLib.IGraphBuilder,DirectShowLib.IBaseFilter,DirectShowLib.IBaseFilter,System.String)">
            <summary>
            Connects two filters to one another
            </summary>
            <param name="graphBuilder">current graph reference</param>
            <param name="sourceFilter">source filter</param>
            <param name="destinationFilter">destination filetr</param>
            <param name="deviceName">filter name</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.incRefCountCOM(System.Object)">
            <summary>
            increment the ComObject referencecount of the object.
            </summary>
            <param name="o">The object.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.getRefCount(System.Object)">
            <summary>
            get the referencecount of the object.
            </summary>
            <param name="o">The object.</param>
            <returns>referencecount</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.getRefCountCOM(System.Object)">
            <summary>
            get the ComObject referencecount of the filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns>referencecount</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.LogPinInfo(DirectShowLib.IPin)">
            <summary>
            Logs the pin info.
            </summary>
            <param name="pin">The pin.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.LogFilterInfo(DirectShowLib.IBaseFilter)">
            <summary>
            Logs the filter info.
            </summary>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetFilterName(DirectShowLib.IBaseFilter)">
            <summary>
            Gets the filter name.
            </summary>
            <param name="filter">The filter.</param>
            <returns>FilterName</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetPinName(DirectShowLib.IPin)">
            <summary>
            Gets the pin name.
            </summary>
            <param name="pin">The pin.</param>
            <returns>PinName</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetAudioMpg2Media">
            <summary>
            Gets the audio MPG2 media.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetAudioMpg1Media">
            <summary>
            Gets the audio MPG1 media.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetVideoMpg2Media">
            <summary>
            Gets the video MPG2 media.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetAudioAc3">
            <summary>
            Gets the audio ac3 media type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetAudioAAC">
            <summary>
            Gets the audio AAC media type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetAudioLATMAAC">
            <summary>
            Gets the audio LATM AAC media type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetAudioLPCMMedia">
            <summary>
            Gets the audio LPCM media type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FilterGraphTools.GetTransportStreamMedia">
            <summary>
            Gets the transport stream media type
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.DVBSScanning">
            <summary>
            Class which implements scanning for tv/radio channels for DVB-S BDA cards
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning">
            <summary>
            base class for scanning DVB tv/radio channels
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IHardwarePidFiltering">
            <summary>
            Interface for h/w pid filtering 
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IHardwarePidFiltering.FilterPids(System.Int16,System.IntPtr)">
            <summary>
            Sets the pids to filter.
            </summary>
            <param name="count">The count.</param>
            <param name="pids">The pids.</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IChannelScanCallback">
            <summary>
             Channel scanning callback
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IChannelScanCallback.OnScannerDone">
            <summary>
            Called when the channel scanning is done
            </summary>
            <returns></returns>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning._enableWaitForVCT">
            <summary>
            Enable wait for VCT indicator
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.#ctor(Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning"/> class.
            </summary>
            <param name="card">The card.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.CreateNewChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo)">
            <summary>
            Creates the new channel.
            </summary>
            <param name="channel">The high level tuning detail.</param>
            <param name="info">The subchannel detail.</param>
            <returns>The new channel.</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.GetAnalyzer">
            <summary>
            Gets the analyzer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.SetHwPids(System.Collections.Generic.List{System.UInt16})">
            <summary>
            Sets the hw pids.
            </summary>
            <param name="pids">The pids.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.ResetSignalUpdate">
            <summary>
            Resets the signal update.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.Dispose">
            <summary>
            Disposes this instance.
            </summary>    
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.Scan(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters)">
            <summary>
            Scans the specified transponder.
            </summary>
            <param name="channel">The channel.</param>
            <param name="settings">The settings.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.FilterPids(System.Int16,System.IntPtr)">
            <summary>
            Filters the pids.
            </summary>
            <param name="count">The count.</param>
            <param name="pids">The pids.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.OnScannerDone">
            <summary>
            Called when [scanner done].
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.ScanNIT(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters)">
            <summary>
             Scan NIT channel
            </summary>
            <param name="channel">Channel</param>
            <param name="settings">Scan Parameters</param>
            <returns>Found channels</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.IsRadioService(System.Int32)">
            <summary>
            Determines whether a DVB service type is a radio service.
            </summary>
            <param name="serviceType">the service</param>
            <returns><c>true</c> if the service type is a radio service type, otherwise <c>false</c></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.IsTvService(System.Int32)">
            <summary>
            Determines whether a DVB service type is a television service.
            </summary>
            <param name="serviceType">the service</param>
            <returns><c>true</c> if the service type is a television service type, otherwise <c>false</c></returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.TvCard">
            <summary>
            returns the tv card used
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.PinAnalyzerSI">
            <summary>
            Gets the pin analyzer SI.
            </summary>
            <value>The pin analyzer SI.</value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType">
            <summary>
            DVB service types - see ETSI EN 300 468
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.DigitalTelevision">
            <summary>
            digital television service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.DigitalRadio">
            <summary>
            digital radio sound service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.Teletext">
            <summary>
            teletext service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.NvodReference">
            <summary>
            Near Video On Demand reference service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.NvodTimeShifted">
            <summary>
            Near Video On Demand time-shifted service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.Mosaic">
            <summary>
            mosaic service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.FmRadio">
            <summary>
            FM radio service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.DvbSrm">
            <summary>
            DVB System Renewability Messages service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.AdvancedCodecDigitalRadio">
            <summary>
            advanced codec digital radio sound service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.AdvancedCodecMosaic">
            <summary>
            advanced codec mosaic service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.DataBroadcast">
            <summary>
            data broadcast service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.RcsMap">
            <summary>
            Return Channel via Satellite map
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.RcsFls">
            <summary>
            Return Channel via Satellite Forward Link Signalling
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.DvbMhp">
            <summary>
            DVB Multimedia Home Platform service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.Mpeg2HdDigitalTelevision">
            <summary>
            MPEG 2 HD digital television service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.AdvancedCodecSdDigitalTelevision">
            <summary>
            advanced codec SD digital television service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.AdvancedCodecSdNvodTimeShifted">
            <summary>
            advanced codec SD Near Video On Demand time-shifted service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.AdvancedCodecSdNvodReference">
            <summary>
            advanced codec SD Near Video On Demand reference service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.AdvancedCodecHdDigitalTelevision">
            <summary>
            advanced codec HD digital television
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.AdvancedCodecHdNvodTimeShifted">
            <summary>
            advanced codec HD Near Video On Demand time-shifted service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.AdvancedCodecHdNvodReference">
            <summary>
            advanced codec HD Near Video On Demand reference service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DvbBaseScanning.DvbServiceType.SkyGermanyOptionChannel">
            <summary>
            sky germany linked channels (option channels)
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.DVBSScanning.#ctor(Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.DVBSScanning"/> class.
            </summary>
            <param name="card">The card.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.DVBSScanning.CreateNewChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo)">
            <summary>
            Creates the new channel.
            </summary>
            <param name="channel">The high level tuning detail.</param>
            <param name="info">The subchannel detail.</param>
            <returns>The new channel.</returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.ATSCScanning">
            <summary>
            Class which implements scanning for tv/radio channels for ATSC BDA cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.ATSCScanning.#ctor(Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.ATSCScanning"/> class.
            </summary>
            <param name="card">The card.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.ATSCScanning.CreateNewChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo)">
            <summary>
            Creates the new channel.
            </summary>
            <param name="channel">The high level tuning detail.</param>
            <param name="info">The subchannel detail.</param>
            <returns>The new channel.</returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.ATSCScanning.AtscServiceType">
            <summary>
            ATSC service types - see A/53 part 1
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.ATSCScanning.AtscServiceType.AnalogTelevision">
            <summary>
            Analog Television (See A/65 [9])
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.ATSCScanning.AtscServiceType.DigitalTelevision">
            <summary>
            ATSC Digital Television (See A/53-3 [2])
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.ATSCScanning.AtscServiceType.Audio">
            <summary>
            ATSC Audio (See A/53-3 [2])
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.Hauppauge">
            <summary>
             Hauppauge quality control
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.Hauppauge.#ctor(DirectShowLib.IBaseFilter,System.String)">
            <summary>
            Constructor: Require the Hauppauge capture filter, and the deviceid for the card to be passed in
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.Hauppauge.SetDNR(System.Boolean)">
            <summary>
            Toggles Dynamic Noise Reduction on/off
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.Hauppauge.GetVideoBitRate(System.Int32@,System.Int32@,System.Boolean@)">
            <summary>
            Get the video bit rate
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.Hauppauge.SetVideoBitRate(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the video bit rate
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.Hauppauge.GetAudioBitRate(System.Int32@)">
            <summary>
            Get the audio bit rate
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.Hauppauge.SetAudioBitRate(System.Int32)">
            <summary>
            Set the audio bit rate
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.Hauppauge.GetStream(System.Int32@)">
            <summary>
            Get the stream type
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.Hauppauge.SetStream(System.Int32)">
            <summary>
            Set the stream type
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.Hauppauge.Dispose">
            <summary>
            Deallocate Hauppauge class
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.Hauppauge.Dispose(System.Boolean)">
            <summary>
            Deallocate Hauppauge class
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.Hauppauge.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP">
            <summary>
            Constructor if TvCardDVBIP
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase">
            <summary>
            base class for DVB cards
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase">
            <summary>
            Base class for all tv cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.OnAfterTuneEvent">
            <summary>
            Handles the after tune observer event.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.#ctor(DirectShowLib.DsDevice)">
            <summary>
             Base constructor
            </summary>
            <param name="device">Base DS device</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.GraphRunning">
            <summary>
            Checks if the graph is running
            </summary>
            <returns>true, if the graph is running; false otherwise</returns>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._preloadCard">
            <summary>
            Indicates, if the card should be preloaded
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._stopGraph">
            <summary>
            Indicates, if the card supports pausegraph, otherwise stopgraph will be used when card is idle.
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._parameters">
            <summary>
            Scanning Paramters
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._conditionalAccess">
            <summary>
            Instance of the conditional access
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._mapSubChannels">
            <summary>
            Dictionary of the corresponding sub channels
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._isHybrid">
            <summary>
            Indicates, if the card is a hybrid one
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.m_context">
            <summary>
            Context reference
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._tunerLocked">
            <summary>
            Indicates, if the tuner is locked
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._signalLevel">
            <summary>
            Value of the signal level
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._signalQuality">
            <summary>
            Value of the signal quality
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._devicePath">
            <summary>
            Device Path of the tv card
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._epgGrabbing">
            <summary>
            Indicates, if the card is grabbing epg
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._name">
            <summary>
            Name of the tv card
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._isScanning">
            <summary>
            Indicates, if the card is scanning
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._graphState">
            <summary>
            State of the graph
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._graphBuilder">
            <summary>
            The graph builder
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._camType">
            <summary>
            Type of the cam
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._supportsSubChannels">
            <summary>
            Indicates, if the card sub channels
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._minChannel">
            <summary>
            Minimum analog channel number
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._maxChannel">
            <summary>
            Maximum analog channel number
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._cardType">
            <summary>
            Type of the card
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._lastSignalUpdate">
            <summary>
            Date and time of the last signal update
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._subChannelId">
            <summary>
            Last subchannel id
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._signalPresent">
            <summary>
            Indicates, if the signal is present
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._cardPresent">
            <summary>
            Indicates, if the card is present
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._tunerDevice">
            <summary>
            The tuner device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._device">
            <summary>
            Main device of the card
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase._cardId">
            <summary>
            The db card id
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.ResetSignalUpdate">
            <summary>
            Resets the signal update.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.GetPreloadBitAndCardId">
            <summary>
            Reads the preload bit and card id from the db
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.BuildGraph">
            <summary>
            Builds the graph.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.LockInOnSignal">
            <summary>
             Checks if the tuner is locked in and a sginal is present
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.UpdateSignalQuality">
            <summary>
            A derrived class should update the signal informations of the tv cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.UpdateSignalQuality(System.Boolean)">
            <summary>
            A derrived class should update the signal informations of the tv cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.StopGraph">
            <summary>
            Stops the current graph
            </summary>
                
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.PauseGraph">
            <summary>
            Pauses the current graph
            </summary>
                
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.RunGraph(System.Int32)">
            <summary>
            Starts the graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.UpdateEpgGrabber(System.Boolean)">
            <summary>
            A derrived class should activate / deactivate the epg grabber
            </summary>
            <param name="value">Mode</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.OnScanning">
            <summary>
            A derrived class should activate / deactivate the scanning
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.FreeSubChannel(System.Int32)">
            <summary>
            Frees the sub channel.
            </summary>
            <param name="id">Handle to the subchannel.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.FreeAllSubChannels">
            <summary>
            Frees all sub channels.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.GetFirstSubChannel">
            <summary>
            Gets the first sub channel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.GetSubChannel(System.Int32)">
            <summary>
            Gets the sub channel.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="E:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.AfterTuneEvent">
            <summary>
            After tune observer event.
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.ConditionalAccess">
            <summary>
            Instance of the conditional access
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.SupportsPauseGraph">
            <summary>
            Gets wether or not card supports pausing the graph.
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.CardId">
            <summary>
            Gets or sets the unique id of this card
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.PreloadCard">
            <summary>
            returns true if card should be preloaded
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.SupportsSubChannels">
            <summary>
            Gets a value indicating whether card supports subchannels
            </summary>
            <value><c>true</c> if card supports sub channels; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.Name">
            <summary>
            Gets/sets the card name
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.CardPresent">
            <summary>
            returns true if card is currently present
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.DevicePath">
            <summary>
            Gets/sets the card device
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.MinChannel">
            <summary>
            returns the min/max channel numbers for analog cards
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.MaxChannel">
            <summary>
            Gets the max channel.
            </summary>
            <value>The max channel.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.CamType">
            <summary>
            Gets or sets the type of the cam.
            </summary>
            <value>The type of the cam.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.CardType">
            <summary>
            Gets/sets the card cardType
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.HasCA">
            <summary>
            Does the card have a CA module.
            </summary>
            <value>Does the card have a CA module..</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.DecryptLimit">
            <summary>
            CA decryption limit, 0 for disable CA
            </summary>
            <value>The number of channels decrypting that are able to decrypt.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.NumberOfChannelsDecrypting">
            <summary>
            Gets the number of channels the card is currently decrypting.
            </summary>
            <value>The number of channels decrypting.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.DiSEqCMotor">
            <summary>
            Gets the interface for controlling the diseqc motor
            </summary>
            <value>Theinterface for controlling the diseqc motor.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.IsHybrid">
            <summary>
            Gets or sets a value indicating whether this instance is hybrid.
            </summary>
            <value><c>true</c> if this instance is hybrid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.IsTunerLocked">
            <summary>
            boolean indicating if tuner is locked to a signal
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.SignalQuality">
            <summary>
            returns the signal quality
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.SignalLevel">
            <summary>
            returns the signal level
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.IsEpgGrabbing">
            <summary>
            returns true if card is currently grabbing the epg
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.IsScanning">
            <summary>
            returns true if card is currently scanning
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.FirstSubchannel">
            <summary>
            Gets the first subchannel being used.
            </summary>
            <value>The current channel.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.CurrentChannel">
            <summary>
            Gets or sets the current channel.
            </summary>
            <value>The current channel.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.SubChannels">
            <summary>
            Gets the sub channels.
            </summary>
            <value>The sub channels.</value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase.OnAfterTuneDelegate">
            <summary>
            Delegate for the after tune event.
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._tuningSpace">
            <summary>
            holds the the DVB tuning space
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._tuneRequest">
            <summary>
            holds the current DVB tuning request
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._capBuilder">
            <summary>
            Capture graph builder
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._rotEntry">
            <summary>
            ROT entry
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._filterNetworkProvider">
            <summary>
            Network provider filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._filterMpeg2DemuxTif">
            <summary>
            MPEG2 Demux filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._infTeeMain">
            <summary>
            Main inf tee
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._infTeeSecond">
            <summary>
            Main inf tee
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._filterTuner">
            <summary>
            Tuner filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._filterCapture">
            <summary>
            Capture filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._filterTIF">
            <summary>
            TIF filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._filterWinTvUsb">
            <summary>
            WinTV CI filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._filterDigitalDevicesCI">
            <summary>
            DigitalDevices CI filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._captureDevice">
            <summary>
            Capture device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._deviceWinTvUsb">
            <summary>
            WinTV CI device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._deviceDigitalDevicesCI">
            <summary>
            DigitalDevices CI device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._epgGrabberCallback">
            <summary>
            EPG Grabber callback
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._mdplugs">
            <summary>
            MD plugs
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._tunerStatistics">
            <summary>
            Tuner statistics
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._filterTsWriter">
            <summary>
            TsWriter filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._managedThreadId">
            <summary>
            Managed Thread id
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._isATSC">
            <summary>
            Is ATSC indicator
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._interfaceEpgGrabber">
            <summary>
            EPG Grabber interface
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._interfaceChannelScan">
            <summary>
            Channel scan interface
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._interfaceNetworkProvider">
            <summary>
            Internal Network provider instance
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.useInternalNetworkProvider">
            <summary>
            Indicates if the internal network provider is used
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._interfaceChannelLinkageScanner">
            <summary>
            Channel linkage scanner interface
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._hauppauge">
            <summary>
            Hauppauge inteface
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.tunerOnly">
            <summary>
            Tuner only card indicator
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.matchDevicePath">
            <summary>
            Device paths are matching indicator
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase._previousChannel">
            <summary>
            The previous channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IEpgEvents,DirectShowLib.DsDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase"/> class.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.Scan(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Scans the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.Tune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.FreeSubChannel(System.Int32)">
            <summary>
            Frees the sub channel.
            </summary>
            <param name="id">Handle to the subchannel.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.GetNewSubChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Allocates a new instance of TvDvbChannel which handles the new subchannel
            </summary>
            <returns>handle for to the subchannel</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.BuildGraph">
            <summary>
            Builds the graph.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.CheckThreadId">
            <summary>
            Checks the thread id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.SubmitTuneRequest(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,DirectShowLib.BDA.ITuneRequest,System.Boolean)">
            <summary>
            submits a tune request to the card.
            throws an TvException if card cannot tune to the channel requested
            </summary>
            <param name="subChannelId">The sub channel id.</param>
            <param name="channel">The channel.</param>
            <param name="tuneRequest">tune requests</param>
            <param name="performTune">Indicates if a tune is required</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.PerformInternalNetworkProviderTuning(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Performs a tuning using the internal network provider
            </summary>
            <param name="channel">Channel to tune</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.GetTunerSignalStatistics">
            <summary>
            this method gets the signal statistics interfaces from the bda tuner device
            and stores them in _tunerStatistics
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.LockInOnSignal">
            <summary>
             Checks if the tuner is locked in and a sginal is present
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.CancelTune(System.Int32)">
            <summary>
            
            </summary>
            <param name="subChannel"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.RunGraph(System.Int32)">
            <summary>
            Methods which starts the graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.PauseGraph">
            <summary>
            Methods which pauses the graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.StopGraph">
            <summary>
            Methods which stops the graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.AddNetworkProviderFilter(System.Guid)">
            <summary>
            This method adds the bda network provider filter to the graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.AddWinTvCIModule(DirectShowLib.IBaseFilter@)">
            <summary>
            Checks if the WinTV USB CI module is installed
            if so it adds it to the directshow graph
            in the following way:
            [Network Provider]->[Tuner Filter]->[Capture Filter]->[WinTvCI Filter]
            alternaively like this:
            [Network Provider]->[Tuner Filter]->[WinTvCI Filter]
            </summary>
            <param name="lastFilter">A reference to the last filter.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.AddDigitalDevicesCIModule(DirectShowLib.IBaseFilter@)">
            <summary>
            Checks if the DigitalDevices CI module is installed
            if so it adds it to the directshow graph
            in the following way:
            [Network Provider]->[Tuner Filter]->[Capture Filter]->[Digital Devices Common Interface]->[InfTee]
            alternaively like this:
            [Network Provider]->[Tuner Filter]->[Digital Devices Common Interface]->[InfTee]
            </summary>
            <param name="lastFilter">A reference to the last filter.</param>
            <returns>
            true if hardware found and graph building succeeded, else false
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.AddAndConnectBDABoardFilters(DirectShowLib.DsDevice)">
            <summary>
            Finds the correct bda tuner/capture filters and adds them to the graph
            Creates a graph like
            [NetworkProvider]->[Tuner]->[Capture]->[TsWriter]
            or if no capture filter is present:
            [NetworkProvider]->[Tuner]->[TsWriter]
            When a wintv ci module is found the graph will look like:
            [NetworkProvider]->[Tuner]->[Capture]->[WinTvCiUSB]->[TsWriter]
            or if no capture filter is present:
            [NetworkProvider]->[Tuner]->[WinTvCiUSB]->[TsWriter]
            </summary>
            <param name="device">Tuner device</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.UseCaptureFilter">
            <summary>
            Determine whether the tuner filter needs to connect to a capture filter,
            or whether it can be directly connected to an inf tee.
            </summary>
            <returns><c>true</c> if the tuner filter must be connected to a capture filter, otherwise <c>false</c></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.ConnectTsWriter(DirectShowLib.IBaseFilter)">
            <summary>
            Connects the ts writer to the last given filter
            </summary>
            <param name="lastFilter">Last filter in the graph</param>
            <returns>true, if successful ; false otherwise</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.AddMdPlugs(DirectShowLib.IBaseFilter@)">
            <summary>
            Add MD Plugs
            </summary>
            <param name="lastFilter">Last Filter in the graph</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.AddBDARendererToGraph(DirectShowLib.DsDevice,DirectShowLib.IBaseFilter@)">
            <summary>
            adds the BDA renderer filter to the graph by elimination
            then tries to match tuner &amp; render filters if successful then connects them.
            </summary>
            <param name="device">Tuner device</param>
            <param name="currentLastFilter">The current last filter if we add multiple captures</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.AddMpeg2DemuxerToGraph">
            <summary>
            adds the mpeg-2 demultiplexer filter and inftee filter to the graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.ConnectMpeg2DemuxToInfTee(DirectShowLib.IBaseFilter@)">
            <summary>
            Connects the mpeg2 demuxers to the inf tee filter.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.AddTsWriterFilterToGraph">
            <summary>
            Gets the video audio pins.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.AddBdaTransportFiltersToGraph">
            <summary>
            adds the BDA Transport Information Filter  and the
            MPEG-2 sections and tables filter to the graph 
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.SendHwPids(System.Collections.Generic.List{System.UInt16})">
            <summary>
            Sends the hw pids.
            </summary>
            <param name="pids">The pids.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>   
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.Decompose">
            <summary>
            destroys the graph and cleans up any resources
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.UpdateSignalQuality(System.Boolean)">
            <summary>
            Updates the signal informations of the tv cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.UpdateSignalQuality">
            <summary>
            updates the signal quality/level and tuner locked statusses
            </summary>    
            
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.UpdateEpgGrabber(System.Boolean)">
            <summary>
            Activates / deactivates the epg grabber
            </summary>
            <param name="value">Mode</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.OnScanning">
            <summary>
            Activates / deactivates the scanning
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.StartLinkageScanner(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.BaseChannelLinkageScanner)">
            <summary>
            Starts scanning for linkage info
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.ResetLinkageScanner">
            <summary>
            Stops/Resets the linkage scanner
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.FilterOutEPGChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Epg.EpgChannel)">
            <summary>
            checks if a received EPGChannel should be filtered from the resultlist
            </summary>
            <value></value>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.GrabEpg(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.BaseEpgGrabber)">
            <summary>
            Start grabbing the epg
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.GrabEpg">
            <summary>
            Start grabbing the epg while timeshifting
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.getUTC(System.Int32)">
            <summary>
            Gets the UTC.
            </summary>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.AbortGrabbing">
            <summary>
            Aborts grabbing the epg
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.ReloadCardConfiguration">
            <summary>
            Reloads the card configuration
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.StreamAnalyzer">
            <summary>
            returns the ITsChannelScan interface for the graph
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.ChannelLinkages">
            <summary>
            Returns the EPG grabbed or null if epg grabbing is still busy
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.Epg">
            <summary>
            Returns the EPG grabbed or null if epg grabbing is still busy
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.Quality">
            <summary>
            Get/Set the quality
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase.SupportsQualityControl">
            <summary>
            Property which returns true if card supports quality control
            </summary>
            <value></value>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP._filterStreamSource">
            Stream source filter
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP._defaultUrl">
            default url
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP._sequence">
            sequence
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IEpgEvents,DirectShowLib.DsDevice,System.Int32)">
            <summary>
            Contstructor
            </summary>
            <param name="epgEvents"></param>
            <param name="device"></param>
            <param name="sequence"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.BuildGraph">
            <summary>
            Build graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.AddStreamSourceFilter(System.String)">
            <summary>
            AddStreamSourceFilter
            </summary>
            <param name="url">url</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.RemoveStreamSourceFilter">
            <summary>
            RemoveStreamSourceFilter
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.RunGraph(System.Int32,System.String)">
            <summary>
            RunGraph
            </summary>
            <param name="subChannel">subchannel</param>
            <param name="url">url</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.CanTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Checks if channel can be tuned by IPTV
            </summary>
            <param name="channel">channel</param>
            <returns>true if DVBIPChannel</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.Scan(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Scans the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.Tune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.DoTune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,System.Boolean)">
            <summary>
            Tune to channel
            </summary>
            <param name="subChannelId"></param>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.Dispose">
            <summary>
            Dispose resources
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.StopGraph">
            <summary>
            Stops graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.UpdateSignalQuality">
            <summary>
            UpdateSignalQuality
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.ScanningInterface">
            <summary>
            ScanningInterface
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.SupportsPauseGraph">
            <summary>
            Gets wether or not card supports pausing the graph.
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP.DevicePath">
            <summary>
            return the DevicePath
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.DVBIPScanning">
            <summary>
            Class for DVBIP scanning
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.DVBIPScanning.#ctor(Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIP)">
            <summary>
            Constructor
            </summary>
            <param name="card"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.DVBIPScanning.CreateNewChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo)">
            <summary>
            CreateNewChannel
            </summary>
            <param name="channel">The high level tuning detail.</param>
            <param name="info">The subchannel detail.</param>
            <returns>The new channel.</returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.EncoderAPIControl">
            <summary>
            Class which implements control of quality trough the use of the IEncoderAPI interface
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl">
            <summary>
            Base classes for the ICodecAPI, IEncoderAPI and IVideoEncoder interfaces
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl._qualityType">
            <summary>
            Current Quality type
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl._supported_BitRateMode">
            <summary>
            Indicates if the encoder supports to set a bit rate mode
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl._supported_BitRate">
            <summary>
            Indicates if the encoder supports to set a bit rate
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl._supported_PeakBitRate">
            <summary>
            Indicates if the encoder supports to set the peak bit rate mode
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl._bitRateMode">
            <summary>
            The current bit rate mode
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl._configuration">
            <summary>
            The standard configuration for this encoder
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.Configuration)">
            <summary>
            Base constructor
            </summary>
            <param name="configuration">Configuration for the encoder</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.SupportsBitRateModes">
            <summary>
            Indicates if bit rate modes are supported
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.SupportsPeakBitRateMode">
            <summary>
            Indicates if peak bit rate mode is supported
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.SupportsBitRate">
            <summary>
            Indicates if bit rate control is supported
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.StartPlayback">
            <summary>
            Called when playback starts
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.StartRecord">
            <summary>
            Called when record starts
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.SetConfiguration(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.Configuration)">
            <summary>
            Sets the new configuration object
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.CalcQualityBitrate(System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculate the bitrate for the specified quality percentage
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.ApplyQuality">
            <summary>
            Set the quality
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.ApplyQualityBitRateMode">
            <summary>
            Set the quality (bit rate mode)
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.ApplyQualityBitRate">
            <summary>
            Set the quality (bit rte)
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.CheckCapabilities">
            <summary>
            Checks the capabilities of the given encoder
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.SetValue(System.Guid,System.Object@)">
            <summary>
            Sets the value for the give GUID
            </summary>
            <param name="guid">GUID</param>
            <param name="newBitRateModeO">Bit Rate Mode object</param>
            <returns>HR result</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.GetParameterRange(System.Guid,System.Object@,System.Object@,System.Object@)">
            <summary>
            Gets the parameter range for the given GUID
            </summary>
            <param name="guid">GUID</param>
            <param name="valueMin">minimum out value</param>
            <param name="valueMax">maximum out value</param>
            <param name="steppingDelta">stepping delta out value</param>
            <returns>HR result</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.GetDefaultValue(System.Guid,System.Object@)">
            <summary>
            Returns the Default value for the given GUID
            </summary>
            <param name="guid">GUID</param>
            <param name="qualityObject">Quality out value</param>
            <returns>HR result object</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.IsSupported(System.Guid)">
            <summary>
            Checks if the encoder supports the given GUID
            </summary>
            <param name="guid">GUID</param>
            <returns>HR return value</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.QualityType">
            <summary>
            use this method to set the quality of a recording
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.BaseControl.BitRateMode">
            <summary>
            Gets/Sets the bit rate mode. Works only if this is supported
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.EncoderAPIControl._encoderAPI">
            <summary>
            Instance of the encoder that supports the IEncoderAPI
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.EncoderAPIControl.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.Configuration,DirectShowLib.IEncoderAPI)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.EncoderAPIControl"/> class.
            </summary>
            <param name="configuration">The encoder settings to use.</param>
            <param name="encoderAPI">The IEncoderAPI interface to the filter that must be used to control the quality.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.EncoderAPIControl.IsSupported(System.Guid)">
            <summary>
            Checks if the encoder supports the given GUID
            </summary>
            <param name="guid">GUID</param>
            <returns>HR return value</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.EncoderAPIControl.SetValue(System.Guid,System.Object@)">
            <summary>
            Sets the value for the give GUID
            </summary>
            <param name="guid">GUID</param>
            <param name="newBitRateModeO">Bit Rate Mode object</param>
            <returns>HR result</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.EncoderAPIControl.GetParameterRange(System.Guid,System.Object@,System.Object@,System.Object@)">
            <summary>
            Gets the parameter range for the given GUID
            </summary>
            <param name="guid">GUID</param>
            <param name="valueMin">minimum out value</param>
            <param name="valueMax">maximum out value</param>
            <param name="steppingDelta">stepping delta out value</param>
            <returns>HR result</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.EncoderAPIControl.GetDefaultValue(System.Guid,System.Object@)">
            <summary>
            Returns the Default value for the given GUID
            </summary>
            <param name="guid">GUID</param>
            <param name="qualityObject">Quality out value</param>
            <returns>HR result object</returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture">
            <summary>
            The capture component of the graph
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._filterVideoCapture">
            <summary>
            The video capture filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._filterAudioCapture">
            <summary>
            The audio capture filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._analogVideoDecoder">
            <summary>
            The analog video decoder interface, needed for the VCR signal and video format
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._videoFormats">
            <summary>
            A bitmask of available video formats
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._currentVideoFormat">
            <summary>
            The current video format
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._videoProcAmp">
            <summary>
            The video proc amp interface for the vide quality
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._defaultVideoProcAmpValues">
            <summary>
            A map of the default and current video proc amp
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._streamConfig">
            <summary>
            The stream config interface for setting the frame rate and frame size
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._videoCaptureDevice">
            <summary>
            The video capture device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._audioCaptureDevice">
            <summary>
            The audio capture device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._badCaptureDevices">
            <summary>
            List of bad capture device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._pinVBI">
            <summary>
            The teletext output pin
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._imageWidth">
            <summary>
            The current image width
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._imageHeight">
            <summary>
            The current image height
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture._frameRate">
            <summary>
            The current frame rate
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.#ctor">
            <summary>
            Constructor, which set the list of bad capture devices
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.Dispose">
            <summary>
            Disposes the capture component
            </summary>    
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.CreateFilterInstance(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,DirectShowLib.ICaptureGraphBuilder2,DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio)">
            <summary>
            Adds the tv capture to the graph and connects it to the crossbar.
            At the end of this method the graph looks like:
            [          ] ------------------------->[           ]------>[               ]
            [ tvtuner  ]                           [ crossbar  ]       [ video capture ]
            [          ]----[            ]-------->[           ]------>[  filter       ]
                            [ tvaudio    ]
                            [   tuner    ]
            </summary>
            <param name="tvAudio">The tvaudio component</param>
            <param name="crossbar">The crossbar componen</param>
            <param name="tuner">The tuner component</param>
            <param name="graph">The stored graph</param>
            <param name="graphBuilder">The graphBuilder</param>
            <param name="capBuilder">The Capture graph builder</param>
            <returns>true, if the graph building was successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.CreateConfigurationBasedFilterInstance(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,DirectShowLib.ICaptureGraphBuilder2,DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio)">
            <summary>
            Creates the filter based on the configuration file
            </summary>
            <param name="tvAudio">The tvaudio component</param>
            <param name="crossbar">The crossbar componen</param>
            <param name="tuner">The tuner component</param>
            <param name="graph">The stored graph</param>
            <param name="graphBuilder">The graphBuilder</param>
            <param name="capBuilder">The Capture graph builder</param>
            <returns>true, if the graph building was successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.CreateAutomaticFilterInstance(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,DirectShowLib.ICaptureGraphBuilder2,DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio)">
            <summary>
            Creates the filter by trying to detect it
            </summary>
            <param name="tvAudio">The tvaudio component</param>
            <param name="crossbar">The crossbar componen</param>
            <param name="tuner">The tuner component</param>
            <param name="graph">The stored graph</param>
            <param name="graphBuilder">The graphBuilder</param>
            <param name="capBuilder">The Capture graph builder</param>
            <returns>true, if the graph building was successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.FindVBIPin(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph)">
            <summary>
            Finds the VBI pin on the video capture device.
            If it existst the pin is stored in _pinVBI
            </summary>
            <param name="graph">The stored graph</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.CheckCapabilities(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,DirectShowLib.ICaptureGraphBuilder2)">
            <summary>
            Checks the capabilities of the capture component
            </summary>
            <param name="graph">The stored graph</param>
            <param name="capBuilder">The capture graph builder</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.CheckCapabilitiesAnalogVideoDecoder(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph)">
            <summary>
            Checks the capabilites of a possible available analog video decoder interface
            </summary>
            <param name="graph">The stored graph</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.CheckCapabilitiesVideoProcAmp(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph)">
            <summary>
            Checks the capabilites of a possbile available video proc amp interface
            </summary>
            <param name="graph">The stored graph</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.CheckCapabilitiesStreamConfig(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,DirectShowLib.ICaptureGraphBuilder2)">
            <summary>
            Checks the capabilites of a possibe available stream config interface
            </summary>
            <param name="graph">The stored graph</param>
            <param name="capBuilder">The capture graph builder</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.SetVideoDecoder(DirectShowLib.AnalogVideoStandard)">
            <summary>
            Sets the new video format on the video decoder interface
            </summary>
            <param name="newVideoFormat">The new video deocder format</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.SetVideoProcAmpValues(System.Collections.Generic.IDictionary{DirectShowLib.VideoProcAmpProperty,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.VideoQuality})">
            <summary>
            Sets the new video proc amp configuration
            </summary>
            <param name="map">A map with the new video quality settings</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.SetStreamConfigSetting(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the new stream config configuration
            </summary>
            <param name="imageWidth">The new image width</param>
            <param name="imageHeight">The new image height</param>
            <param name="frameRate">The new frame rate</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.SetFrameRate(System.Int64)">
            <summary>
            Sets the frame rate
            </summary>
            <param name="frameRate">The frame rate to set</param>
            <returns>true, if it was successful; false otherwise</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.SetFrameSize(DirectShowLib.BitmapInfoHeader)">
            <summary>
            Sets the frame size
            </summary>
            <param name="bmiHeader">The bitmap info header with the frame size</param>
            <returns>true, if it was successful; false otherwise</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.GetFrameSize">
            <summary>
            Gets the current frame size
            </summary>
            <returns>The frame size in a bitmap info header</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.SetCaptureConfiguration(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph)">
            <summary>
            Sets the new capture component configurations
            </summary>
            <param name="graph">The stored grpah with the configuration</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.PerformTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.AnalogChannel)">
            <summary>
            Performs a tuning to the given channel
            </summary>
            <param name="analogChannel">The channel to tune to</param>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.VideoCaptureName">
            <summary>
            Gets the video capture name
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.VideoCaptureDevicePath">
            <summary>
            Gets the video capture device path
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.AudioCaptureName">
            <summary>
            Gets the audio capture name
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.VideoFilter">
            <summary>
            Get the video capture filter
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.AudioFilter">
            <summary>
            Gt the audio capture filter
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.CurrentVideoFormat">
            <summary>
            Gets/Set the current video format
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.VBIPin">
            <summary>
            Gets the teletext ping
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture.SupportsTeletext">
            <summary>
            Gets if the capture device supports teletext
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter">
            <summary>
            The main TsWriter interface
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.AddChannel(System.Int32@)">
            <summary>
            Adds a new sub channel
            </summary>
            <param name="handle">Handle of the channel</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.DeleteChannel(System.Int32)">
            <summary>
            Deletes the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel to delete</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.DeleteAllChannels">
            <summary>
            Deletes all sub channels
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.AnalyzerSetVideoPid(System.Int32,System.Int32)">
            <summary>
            Sets the video pid on the analyzer for the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="videoPid">Video PID</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.AnalyzerGetVideoPid(System.Int32,System.Int32@)">
            <summary>
            Gets the video pid of the analyzer for the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="videoPid">Video pid</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.AnalyzerSetAudioPid(System.Int32,System.Int32)">
            <summary>
            Sets the audio pid on the analyzer for the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="audioPid">Audio pid</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.AnalyzerGetAudioPid(System.Int32,System.Int32@)">
            <summary>
            Gets the audio pid on the analyzer for the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="audioPid">Audio pid</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.AnalyzerIsVideoEncrypted(System.Int32,System.Int32@)">
            <summary>
            Checks if video of the channel is encrypted for the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="yesNo">true, if the channel is encrypted</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.AnalyzerIsAudioEncrypted(System.Int32,System.Int32@)">
            <summary>
            Checks if audioof the channel is encrypted for the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="yesNo">true, if the channel is encrypted</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.AnalyzerReset(System.Int32)">
            <summary>
            Resets the analyzer of the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.PmtSetPmtPid(System.Int32,System.Int32,System.Int64)">
            <summary>
            Sets the pmt for the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="pmtPid">The PMT pid</param>
            <param name="serviceId">The service id</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.PmtSetCallBack(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IPMTCallback)">
            <summary>
            Sets the pmt callback for the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="callback">The pmt callback</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.PmtGetPMTData(System.Int32,System.IntPtr)">
            <summary>
            Gets the pmt data of the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="pmtData">Pointer for the PMT data</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.RecordSetRecordingFileNameW(System.Int32,System.String)">
            <summary>
            Sets the recorder unicode filename for the given subchannel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="fileName">Filename for the recording</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.RecordStartRecord(System.Int32)">
            <summary>
            Starts recording on the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.RecordStopRecord(System.Int32)">
            <summary>
            Stops recording on the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.RecordSetPmtPid(System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Sets the pmt pid for recording on the sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="pmtPid">The PMT pid</param>
            <param name="serviceId">The service id</param>
            <param name="pmtData">The PMT data</param>
            <param name="pmtLength">The length of the PMT</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.RecorderSetVideoAudioObserver(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IVideoAudioObserver)">
            <summary>
            Sets the video/audio observer callback for recorder
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="observer">Oberserver callback</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TimeShiftSetTimeShiftingFileNameW(System.Int32,System.String)">
            <summary>
            Sets the timeshifting filename
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="fileName">Filename</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TimeShiftStart(System.Int32)">
            <summary>
            Starts timeshifting on the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TimeShiftStop(System.Int32)">
            <summary>
            Stops timeshifting on the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TimeShiftReset(System.Int32)">
            <summary>
            Resets timeshifting on the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TimeShiftGetBufferSize(System.Int32,System.Int64@)">
            <summary>
            Gets the timeshifting buffer size of the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="size">Size of the buffer</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TimeShiftSetPmtPid(System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Sets the PMT pid on the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="pmtPid">The PMT pid</param>
            <param name="serviceId">The service id</param>
            <param name="pmtData">The PMT data</param>
            <param name="pmtLength">The length of the PMT</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TimeShiftPause(System.Int32,System.Byte)">
            <summary>
            Pauses/Continues timeshifting on the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="onOff">Flag for pausing the timeshifting</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TimeShiftSetParams(System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Sets the timeshifting parameters on the given subchannel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="minFiles">Minimum timeshifting files</param>
            <param name="maxFiles">Maximum timeshifting files</param>
            <param name="chunkSize">Chunk size</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TimeShiftGetCurrentFilePosition(System.Int32,System.Int64@,System.Int64@)">
            <summary>
            Returns the position in the current timeshift file and the id of the current timeshift file
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="position">The position in the current timeshift buffer file</param>
            <param name="bufferId">The id of the current timeshift buffer file</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.SetVideoAudioObserver(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IVideoAudioObserver)">
            <summary>
            Sets the video/audio observer callback
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="observer">Oberserver callback</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TTxStart(System.Int32)">
            <summary>
            Start collecting teletext data for the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TTxStop(System.Int32)">
            <summary>
            Stops collecting teletext data for the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TTxSetTeletextPid(System.Int32,System.Int32)">
            <summary>
            Sets the teletext pid on the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="teletextPid">Teletext pid</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TTxSetCallBack(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITeletextCallBack)">
            <summary>
            Sets the teletext callback on the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="callback">The callback</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.CaSetCallBack(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ICACallback)">
            <summary>
            Set the CA callback
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="callback">The callback</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.CaGetCaData(System.Int32,System.IntPtr)">
            <summary>
            Gets the ca data of the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="caData">Pointer for the ca data</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.CaReset(System.Int32)">
            <summary>
            Resets the ca for the given sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.GetStreamQualityCounters(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Fetches the stream quality information
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="totalTsBytes">Amount of packets processed - timeshifting</param>
            <param name="totalRecordingBytes">Amount of packets processed - recording</param>
            <param name="TsDiscontinuity">Number of stream discontinuities - timeshifting</param>
            <param name="recordingDiscontinuity">Number of stream discontinuities - recording</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsFilter.TimeShiftSetChannelType(System.Int32,System.Int32)">
            <summary>
            Sets the channel type of the sub channel
            </summary>
            <param name="handle">Handle of the sub channel</param>
            <param name="channelType">Type of the channel (tv=0, radio=1)</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.TvCardDVBS">
            <summary>
            Implementation of <see cref="T:TvLibrary.Interfaces.ITVCard"/> which handles DVB-S BDA cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.TvCardDVBS.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IEpgEvents,DirectShowLib.DsDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.TvCardDVBS"/> class.
            </summary>
            <param name="epgEvents">The EPG events interface.</param>
            <param name="device">The device.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.TvCardDVBS.BuildGraph">
            <summary>
            Builds the graph.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.TvCardDVBS.CreateTuningSpace">
            <summary>
            Creates the tuning space.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.TvCardDVBS.StopGraph">
            <summary>
            Methods which stops the graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.TvCardDVBS.Scan(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Scans the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.TvCardDVBS.Tune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.TvCardDVBS.FilterOutEPGChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Epg.EpgChannel)">
            <summary>
            checks if a received EPGChannel should be filtered from the resultlist
            </summary>
            <value></value>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.TvCardDVBS.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.TvCardDVBS.CanTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Method to check if card can tune to the channel specified
            </summary>
            <param name="channel"></param>
            <returns>
            true if card can tune to the channel otherwise false
            </returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBS.TvCardDVBS.ScanningInterface">
            <summary>
            returns the ITVScanning interface used for scanning channels
            </summary>
            <value></value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan">
            <summary>
            Summary description for Twinhan.
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.IDiSEqCController">
            <summary>
            interface definition for diseqc devices
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.IDiSEqCController.SendDiSEqCCommand(System.Byte[])">
            <summary>
            Sends the DiSEqC command.
            </summary>
            <param name="diSEqC">The DiSEqC command.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.IDiSEqCController.ReadDiSEqCCommand(System.Byte[]@)">
            <summary>
            gets the diseqc reply
            </summary>
            <param name="reply">The reply.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.thbdaLen">
            <summary>
            Length of BDA command
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CTL_CODE(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            creates control command
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.InitStructure(System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Initialized structure for passing to Filter
            </summary>
            <param name="ControlCode"></param>
            <param name="InBuffer"></param>
            <param name="InBufferSize"></param>
            <param name="OutBuffer"></param>
            <param name="OutBufferSize"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.GetCAMStatus(System.UInt32@,System.UInt32@)">
            <summary>
            Gets the status of the CAM and CI.
            </summary>
            <param name="CIState">State of the CI.</param>
            <param name="MMIState">State of the MMI.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.GetCAMStatus(System.UInt32@,System.UInt32@,System.Boolean)">
            <summary>
            Gets the status of the CAM and CI.
            </summary>
            <param name="CIState">State of the CI.</param>
            <param name="MMIState">State of the MMI.</param>
            <param name="SilentMode">No outputs (polling mode)</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.IsCamPresent">
            <summary>
            Determines whether a cam is present or not
            </summary>
            <returns>
            	<c>true</c> if cam is present; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.IsCamReady">
            <summary>
            Determines whether the cam is ready
            </summary>
            <returns>
            	<c>true</c> if cam is ready; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.IsTwinhanCard">
            <summary>
            Determines whether this card is twinhan compatible
            </summary>
            <returns>
            	<c>true</c> if card is twinhan compatible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.GetPmtReply">
            <summary>
            Gets the answer from the CAM after sending the PMT .
            </summary>
            <returns>string containing the CAM answer</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.SendPMT(System.Byte[],System.Int32)">
            <summary>
            Sends the PMT to the CAM/CI module
            </summary>
            <param name="caPMT">The caPMT structure.</param>
            <param name="caPMTLen">The caPMT lenght</param>
            <returns>false on failure to send PMT</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.SendDiseqCommand(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            Sends the diseq command.
            </summary>
            <param name="parameters">Scan parameters</param>
            <param name="channel">The channel.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.SendDiseqcCommandTest(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
             Send DiseqC Command test
            </summary>
            <param name="parameters">Scan parameters</param>
            <param name="channel">Channel</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.SendDiSEqCCommand(System.Byte[])">
            <summary>
            Sends the DiSEqC command.
            </summary>
            <param name="diSEqC">The DiSEqC command.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.ReadDiSEqCCommand(System.Byte[]@)">
            <summary>
            Sends a diseqc command and reads a reply
            </summary>
            <param name="reply">The reply.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.StartCiHandlerThread">
            <summary>
            Starts CiHandler thread
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.SetCiMenuHandler(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.ICiMenuCallbacks)">
            <summary>
            Sets the callback handler
            </summary>
            <param name="ciMenuHandler"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.EnterCIMenu">
            <summary>
            Enters the CI menu 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CloseCIMenu">
            <summary>
            Closes the CI menu 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.SelectMenu(System.Byte)">
            <summary>
            Selects a CI menu entry
            </summary>
            <param name="choice"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.SendMenuAnswer(System.Boolean,System.String)">
            <summary>
            Sends an answer after CI request
            </summary>
            <param name="Cancel"></param>
            <param name="Answer"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.SendMMI(Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.MMIInfoStruct)">
            <summary>
            Sends a MMI object with answer back
            </summary>
            <param name="MMI"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.ReadMMI">
            <summary>
            Reads a MMI object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CiMenuHandler">
            <summary>
            Thread that checks for CI menu 
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.Dispose">
            <summary>
            Disposes unmanaged resources
            </summary>   
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.IsTwinhan">
            <summary>
            Reutns if the tuner specified in the constructor supports twinhan CI/CAM handling
            </summary>
            <value>
            	<c>true</c> if this instance is twinhan compatible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState">
            <summary>
            CI State enum
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.CI_STATUS_EMPTY_OLD">
            NON_CI_INFO      0
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.CI_STATUS_CAM_OK1_OLD">
            ME0				1
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.CI_STATUS_CAM_OK2_OLD">
            ME1				2
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.MMI_STATUS_GET_MENU_OK1_OLD">
            MMI0				3
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.MMI_STATUS_GET_MENU_OK2_OLD">
            MMI1				4
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.MMI_STATUS_GET_MENU_CLOSE1_OLD">
            MMI0_ClOSE		5
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.MMI_STATUS_GET_MENU_CLOSE2_OLD">
            MMI1_ClOSE		6
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.CI_STATUS_EMPTY">
            New CI messages
            No CAM inserted
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.CI_STATUS_INSERTED">
            CAM is inserted
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.CI_STATUS_CAM_OK">
            Initila CAM OK
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.CI_STATUS_CAM_UNKNOW">
            Unkonw CAM type
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.MMI_STATUS_ANSWER_SEND">
            Communicating with CAM 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.MMI_STATUS_GET_MENU_OK">
            Get information from CAM
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.MMI_STATUS_GET_MENU_FAIL">
            Fail to get information from CAM
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.MMI_STATUS_GET_MENU_INIT">
            Init MMI
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.MMI_STATUS_GET_MENU_CLOSE">
            Close MMI
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TwinHan.Twinhan.CIState.MMI_STATUS_GET_MENU_CLOSED">
            MMI Closed
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel">
            <summary>
             Base class for all dvb channels
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel">
            <summary>
            Base class for a sub channel of a tv card
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnAudioVideoEvent(Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.PidType)">
            <summary>
            Handles the audio/video observer event.
            </summary>
            <param name="pidType">Type of the pid</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnAfterTuneEvent">
            <summary>
            Handles the after tune observer event.
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._hasTeletext">
            <summary>
            Indicates, if the channel has teletext
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._grabTeletext">
            <summary>
            Indicates, if teletext grabbing is activated
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._teletextDecoder">
            <summary>
            Instance of the teletext decoder
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._packetHeader">
            <summary>
            Struct of a ts header
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._tsHelper">
            <summary>
            Instance of ts helper class
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._currentChannel">
            <summary>
            Instance of the current channel
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._timeshiftFileName">
            <summary>
            Name of the timeshift file
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._recordingFileName">
            <summary>
            Name of the recording file
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._dateTimeShiftStarted">
            <summary>
            Date and time when timeshifting started
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._dateRecordingStarted">
            <summary>
            Date  and time when recording started
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._subChannelId">
            <summary>
            ID of this subchannel
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._graphState">
            <summary>
            Current state of the graph
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._parameters">
            <summary>
            Scanning parameters
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._startTimeShifting">
            <summary>
            Indicates, if timeshifting is started
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel._startRecording">
            <summary>
            Indicates, if recording is started
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel"/> class.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.StartTimeShifting(System.String)">
            <summary>
            Starts timeshifting. Note card has to be tuned first
            </summary>
            <param name="fileName">filename used for the timeshiftbuffer</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.StopTimeShifting">
            <summary>
            Stops timeshifting
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.StartRecording(System.String)">
            <summary>
            Starts recording
            </summary>
            <param name="fileName">filename to which to recording should be saved</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.StopRecording">
            <summary>
            Stop recording
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.TimeShiftGetCurrentFilePosition(System.Int64@,System.Int64@)">
            <summary>
            Returns the position in the current timeshift file and the id of the current timeshift file
            </summary>
            <param name="position">The position in the current timeshift buffer file</param>
            <param name="bufferId">The id of the current timeshift buffer file</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnTeletextReceived(System.IntPtr,System.Int16)">
            <summary>
            callback from the TsWriter filter when it received a new teletext packets
            </summary>
            <param name="data">teletext data</param>
            <param name="packetCount">number of packets in data</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.ProcessPacket(System.IntPtr)">
            <summary>
            processes a single transport packet
            Called from BufferCB
            </summary>
            <param name="ptr">pointer to the transport packet</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnNotify(Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.PidType)">
            <summary>
            Called when tswriter.ax has seen the video / audio data for the first time
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.Decompose">
            <summary>
            Decomposes the sub channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnBeforeTune">
            <summary>
            Should be called before tuning to a new channel
            resets the state
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnAfterTune">
            <summary>
            Should be called when the graph is tuned to the new channel
            resets the state
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnGraphStart">
            <summary>
            Should be called when the graph is about to start
            Resets the state 
            If graph is already running, starts the pmt grabber to grab the
            pmt for the new channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnGraphStarted">
            <summary>
            Should be called when the graph has been started
            sets up the pmt grabber to grab the pmt of the channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnGraphStop">
            <summary>
            Should be called when graph is about to stop.
            stops any timeshifting/recording on this channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnGraphStopped">
            <summary>
            should be called when graph has been stopped
            Resets the graph state
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnDecompose">
            <summary>
            A derrived class should do it's specific cleanup here. It will be called from called from Decompose()
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnStartTimeShifting(System.String)">
            <summary>
            A derrived class should start here the timeshifting on the tv card. It will be called from StartTimeshifting()
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnStopTimeShifting">
            <summary>
            A derrived class should stop here the timeshifting on the tv card. It will be called from StopTimeshifting()
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnStartRecording(System.String)">
            <summary>
            A derrived class should start here the recording on the tv card. It will be called from StartRecording()
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnStopRecording">
            <summary>
            A derrived class should stop here the recording on the tv card. It will be called from StopRecording()
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnGetTimeShiftFilePosition(System.Int64@,System.Int64@)">
            <summary>
            Returns the position in the current timeshift file and the id of the current timeshift file
            </summary>
            <param name="position">The position in the current timeshift buffer file</param>
            <param name="bufferId">The id of the current timeshift buffer file</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnGrabTeletext">
            <summary>
            A derrived class should activate or deactivate the teletext grabbing on the tv card.
            </summary>
        </member>
        <member name="E:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.AudioVideoEvent">
            <summary>
            Audio/video observer event.
            </summary>
        </member>
        <member name="E:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.AfterTuneEvent">
            <summary>
            After tune observer event.
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.SubChannelId">
            <summary>
            Gets the sub channel id.
            </summary>
            <value>The sub channel id.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.TimeShiftFileName">
            <summary>
            gets the current filename used for timeshifting
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.StartOfTimeShift">
            <summary>
            returns the date/time when timeshifting has been started for the card specified
            </summary>
            <returns>DateTime containg the date/time when timeshifting was started</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.RecordingStarted">
            <summary>
            returns the date/time when recording has been started for the card specified
            </summary>
            <returns>DateTime containg the date/time when recording was started</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.RecordingFileName">
            <summary>
            gets the current filename used for recording
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.IsRecording">
            <summary>
            returns true if card is currently recording
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.IsTimeShifting">
            <summary>
            returns true if card is currently timeshifting
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.CurrentChannel">
            <summary>
            returns the IChannel to which the card is currently tuned
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.HasTeletext">
            <summary>
            Property which returns true when the current channel contains teletext
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.GrabTeletext">
            <summary>
            Turn on/off teletext grabbing
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.TeletextDecoder">
            <summary>
            returns the ITeletext interface used for retrieving the teletext pages
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.IsReceivingAudioVideo">
            <summary>
            Returns true when unscrambled audio/video is received otherwise false
            </summary>
            <returns>true of false</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.GetCurrentVideoStream">
            <summary>
            returns true if we record in transport stream mode
            false we record in program stream mode
            </summary>
            <value>true for transport stream, false for program stream.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.AvailableAudioStreams">
            <summary>
            returns the list of available audio streams
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.CurrentAudioStream">
            <summary>
            get/set the current selected audio stream
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.AudioVideoObserverEvent">
            <summary>
            Delegate for the audio/video oberserver events.
            </summary>
            <param name="pidType">Type of the pid</param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.BaseSubChannel.OnAfterTuneDelegate">
            <summary>
            Delegate for the after tune event.
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITeletextCallBack">
            <summary>
            Interface to the Teletext callback 
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITeletextCallBack.OnTeletextReceived(System.IntPtr,System.Int16)">
            <summary>
            Called when teletext has been received.
            </summary>
            <param name="data">The data.</param>
            <param name="packetCount">The packet count.</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IPMTCallback">
            <summary>
            Interface to the PMT callback 
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IPMTCallback.OnPMTReceived(System.Int32)">
            <summary>
            Called when the PMT has been received.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ICACallback">
            <summary>
             The tswriter ca callback
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ICACallback.OnCaReceived">
            <summary>
            Called when the Ca has been received.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IVideoAudioObserver">
            <summary>
             TsWriter video/audio observer
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IVideoAudioObserver.OnNotify(Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.PidType)">
            <summary>
             Called when a pid is detected
            </summary>
            <param name="pidType">The pid type</param>
            <returns>Error code</returns>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._pmtRequested">
            <summary>
            Indicates that PMT was grabbed
            true : requested
            false: not requested
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._pmtVersion">
            <summary>
            PMT version
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._pmtPid">
            <summary>
            PMT Pid
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._pmtData">
            <summary>
            PMT data
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._pmtLength">
            <summary>
            PMT data length
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._channelInfo">
            <summary>
            Channel Info
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._tsFilterInterface">
            <summary>
            Ts filter instance
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._subChannelIndex">
            <summary>
            SubChannel index
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._currentAudioStream">
            <summary>
            Current audio stream
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._mdplugs">
            <summary>
            MD Plugs
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.alwaysUsePATLookup">
            set to true to enable PAT lookup of PMT
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._eventPMT">
            <summary>
            Event that gets signaled when PMT arrives.
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._eventCA">
            <summary>
            Event that gets signaled when CA arrives.
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel._graphBuilder">
            <summary>
            The graph builder for the capture card graph.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel"/> class.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.#ctor(DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs,DirectShowLib.IBaseFilter,DirectShowLib.IBaseFilter,System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel"/> class.
            </summary>
            <param name="graphBuilder">The graph builder.</param>
            <param name="ca">The ca.</param>
            <param name="mdplugs">The mdplugs class.</param>
            <param name="tif">The tif filter.</param>
            <param name="tsWriter">The ts writer filter.</param>
            <param name="subChannelId">The subchannel id</param>
            <param name="channel">The corresponding channel</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnBeforeTune">
            <summary>
            Should be called before tuning to a new channel
            resets the state
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnAfterTune">
            <summary>
            Should be called when the graph is tuned to the new channel
            resets the state
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.WaitForPMT">
            <summary>
            Wait for PMT to be found in the transport stream.
            </summary>
            <returns><c>true</c> if PMT was found, otherwise <c>false</c></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.GraphRunning">
            <summary>
            Checks if the graph is running
            </summary>
            <returns>true, when the graph is running</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnGraphStart">
            <summary>
            Should be called when the graph is about to start
            Resets the state 
            If graph is already running, starts the pmt grabber to grab the
            pmt for the new channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnGraphStarted">
            <summary>
            Should be called when the graph has been started.
            Sets up the PMT grabber to grab the PMT of the channel
            when the graph hasn't been running previously
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnGraphStop">
            <summary>
            Should be called when graph is about to stop.
            stops any timeshifting/recording on this channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnGraphStopped">
            <summary>
            should be called when graph has been stopped
            Resets the graph state
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnStartRecording(System.String)">
            <summary>
            Starts recording
            </summary>
            <param name="fileName">filename to which to recording should be saved</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnStopRecording">
            <summary>
            Stop recording
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnStartTimeShifting(System.String)">
            <summary>
            sets the filename used for timeshifting
            </summary>
            <param name="fileName">timeshifting filename</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnStopTimeShifting">
            <summary>
            Stop recording
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnGetTimeShiftFilePosition(System.Int64@,System.Int64@)">
            <summary>
            Returns the position in the current timeshift file and the id of the current timeshift file
            </summary>
            <param name="position">The position in the current timeshift buffer file</param>
            <param name="bufferId">The id of the current timeshift buffer file</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnGrabTeletext">
            <summary>
            A derrived class should activate or deactivate the teletext grabbing on the tv card.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnDecompose">
            <summary>
            disposes this channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.SetupPmtGrabber(System.Int32,System.Int32)">
            <summary>
            Instructs the ts analyzer filter to start grabbing the PMT
            </summary>
            <param name="pmtPid">pid of the PMT</param>
            <param name="serviceId">The service id.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.SetMpegPidMapping(Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo)">
            <summary>
            maps the correct pids to the TsFileSink filter and teletext pins
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.SetTimeShiftPids">
            <summary>
            Sets the pids for the timeshifter
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.SetRecorderPids">
            <summary>
            Sets the pids for the recorder
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.SendPmtToCam(System.Boolean@,System.Int32@)">
            <summary>
            Decodes the PMT and sends the PMT to cam.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.GetStreamQualityCounters(System.Int32@,System.Int32@)">
            <summary>
            Fetches the stream quality information
            </summary>   
            <param name="totalBytes">Amount of packets processed</param>    
            <param name="discontinuityCounter">Number of stream discontinuities</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.CancelTune">
            <summary>
            cancels the tune
            </summary>    
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnCaReceived">
            <summary>
            Called when tswriter.ax has received a new ca section
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.OnPMTReceived(System.Int32)">
            <summary>
            Called when tswriter.ax has received a new pmt
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.AvailableAudioStreams">
            <summary>
            returns the list of available audio streams
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.CurrentAudioStream">
            <summary>
            get/set the current selected audio stream
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.IsReceivingAudioVideo">
            <summary>
            Returns true when unscrambled audio/video is received otherwise false
            </summary>
            <returns>true of false</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.GetCurrentVideoStream">
            <summary>
            returns true if we record in transport stream mode
            false we record in program stream mode
            </summary>
            <value>true for transport stream, false for program stream.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvDvbChannel.PMTreceived">
            <summary>
            Indicates whether PMT has been received for the current subchannel or not.
            </summary>
            <value><c>true</c> if PMT has been received, otherwise <c>false</c></value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar">
            <summary>
            The crossbar component of the graph
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar._filterCrossBar">
            <summary>
            The crossbar filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar._crossBarDevice">
            <summary>
            The crossbar device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar._crossBarFilter">
            <summary>
            The crossbar interface
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar._videoPinMap">
            <summary>
            The mapping of the video input sources to their pin index
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar._videoPinRelatedAudioMap">
            <summary>
            The mapping of the video input sources to their related audio pin index
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar._audioPinMap">
            <summary>
            The mapping of the audio input sources to their pin index
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar._audioTunerIn">
            <summary>
            The audio tuner in pin
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar._videoOutPinIndex">
            <summary>
            The video output pin index 
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar._audioOutPinIndex">
            <summary>
            The audio output pin index
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar._videoOut">
            <summary>
            The video output pin
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar._audioOut">
            <summary>
            The audio output pin
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar._currentChannel">
            <summary>
            The current analog channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar.Dispose">
            <summary>
            Disposes the crossbar component
            </summary>   
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar.CreateFilterInstance(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner)">
            <summary>
            Adds the cross bar filter to the graph and connects the tv tuner to the crossbar.
            at the end of this method the graph looks like:
            [tv tuner]----->[crossbar]
            </summary>
            <param name="tuner">The tuner component</param>
            <param name="graph">The stored graph</param>
            <param name="graphBuilder">The graphBuilder</param>
            <returns>true, if the graph building was successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar.CreateConfigurationBasedFilterInstance(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner)">
            <summary>
            Creates the filter based on the configuration file
            </summary>
            <param name="tuner">The tuner component</param>
            <param name="graph">The stored graph</param>
            <param name="graphBuilder">The graphBuilder</param>
            <returns>true, if the graph building was successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar.CreateAutomaticFilterInstance(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner)">
            <summary>
            Creates the filter by trying to detect it
            </summary>
            <param name="tuner">The tuner component</param>
            <param name="graph">The stored graph</param>
            <param name="graphBuilder">The graphBuilder</param>
            <returns>true, if the graph building was successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar.CheckCapabilities">
            <summary>
            Checks the capabilities
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar.PerformTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.AnalogChannel)">
            <summary>
            Indicates if it is a special plextor card
            </summary>
            <returns>true, if it is a special plextor card</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar.VideoOut">
            <summary>
            Gets the video output pin
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar.AudioOut">
            <summary>
            Gets the audio output pin
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar.CrossBarName">
            <summary>
            Gets the name of the crossbar device
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar.Filter">
            <summary>
            Gets the crossbar filter
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar.AudioTunerIn">
            <summary>
            Gets the audio tuner input pin
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelScan">
            <summary>
            interface to the channel scan com object
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelScan.Start(System.Boolean)">
            <summary>
            Starts scanning the current transponder.
            </summary>
            <param name="waitForVCT">Tells the analyzer to wait for a vct section in addition to just the pmt</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelScan.Stop">
            <summary>
            Stops scanning.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelScan.GetCount(System.Int16@)">
            <summary>
            Returns the number of channels found.
            </summary>
            <param name="channelCount">The channel count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelScan.IsReady(System.Boolean@)">
            <summary>
            Determines whether scanner is finished or not.
            </summary>
            <param name="yesNo">true when scanner is finished else false</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelScan.GetChannel(System.Int16,System.Int32@,System.Int32@,System.Int32@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.IntPtr@,System.IntPtr@,System.Int16@,System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Gets the details for a channel.
            </summary>
            <param name="index">The index.</param>
            <param name="networkId">The network id.</param>
            <param name="transportId">The transport id.</param>
            <param name="serviceId">The service id.</param>
            <param name="majorChannel">The major channel.</param>
            <param name="minorChannel">The minor channel.</param>
            <param name="frequency">The frequency.</param>
            <param name="lcn">The LCN.</param>
            <param name="freeCAMode">The free CA mode.</param>
            <param name="serviceType">Type of the service.</param>
            <param name="modulation">The modulation.</param>
            <param name="providerName">Name of the provider.</param>
            <param name="serviceName">Name of the service.</param>
            <param name="pmtPid">The PMT pid.</param>
            <param name="hasVideo">Whether the channel has Video.</param>
            <param name="hasAudio">Whether the channel has Audio.</param>
            <param name="hasCaDescriptor">Whether the channel has a conditional access descriptor.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelScan.SetCallBack(Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IChannelScanCallback)">
            <summary>
            Sets the channel scan callback
            </summary>
            <param name="callback">The callback</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelScan.ScanNIT">
            <summary>
            Start the nit scan
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelScan.StopNIT">
            <summary>
            Stops the nit scan
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelScan.GetNITCount(System.Int32@)">
            <summary>
            Gets the number of nit transponders
            </summary>
            <param name="transponderCount">Number of transponders</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelScan.GetNITChannel(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.IntPtr@)">
            <summary>
            Gets the nit channel
            </summary>
            <param name="channel">The channel id</param>
            <param name="chType">The channel type</param>
            <param name="frequency">The frequence</param>
            <param name="polarisation">The polarisation</param>
            <param name="modulation">The modulation</param>
            <param name="symbolrate">The symbolrate</param>
            <param name="bandwidth">The bandwith</param>
            <param name="fecInner">The fec inner</param>
            <param name="networkName">The network names</param>
            <param name="rollOff">rolloff (S2 specific)</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord">
            <summary>
            Interface to the File recorder com object
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.SetRecordingFileNameW(System.Int32,System.String)">
            <summary>
            Sets the name of the recording file.
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.StartRecord(System.Int32)">
            <summary>
            Starts recording.
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.StopRecord(System.Int32)">
            <summary>
            Stops the recording.
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.IsReceiving(System.Boolean@)">
            <summary>
            Determines whether the we are receiving audio and video.
            </summary>
            <param name="yesNo">if we are receiving audio and video then true<c>true</c></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.Reset">
            <summary>
            Resets this recorder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.SetTimeShiftFileNameW(System.Int32,System.String)">
            <summary>
            Sets the name of the time shift file.
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.StartTimeShifting(System.Int32)">
            <summary>
            Starts  time shifting.
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.StopTimeShifting(System.Int32)">
            <summary>
            Stops  time shifting.
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.PauseTimeShifting(System.Int32,System.Int16)">
            <summary>
            Pauses/Continues timeshifting.
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <param name="onOff">On/off</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.SetTimeShiftParams(System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Sets the timeshift parameters
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <param name="minFiles">Number of minimum timeshifting files</param>
            <param name="maxFiles">Number of maximum timeshifting files</param>
            <param name="maxFileSize">Maximum file size for each timeshifting file</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.TTxSetCallback(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogTeletextCallBack)">
            <summary>
            Sets the callback for teletext packets
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <param name="callback">Callback to set</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.SetVideoAudioObserver(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogVideoAudioObserver)">
            <summary>
            Sets the callback for the video/audio observer
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <param name="observer">Video/audio observer</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.SetRecorderVideoAudioObserver(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogVideoAudioObserver)">
            <summary>
            Sets the callback for the video/audio observer when recording
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <param name="observer">Video/audio observer</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.AddChannel(System.Int32@)">
            <summary>
            Adds a new subchannel
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.DeleteChannel(System.Int32)">
            <summary>
            Deletes the subchannel with the given id
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.DeleteAllChannels">
            <summary>
            Deletes all subchannels
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IMPRecord.SetChannelType(System.Int32,System.Int32)">
            <summary>
            Sets the type of channel we are timeshifting
            </summary>
            <param name="subChannelId">SubChannel id</param>
            <param name="channelType">Channel type (0=tv, 1=radio)</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogTeletextCallBack">
            <summary>
            Interface to the Teletext callback 
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogTeletextCallBack.OnTeletextReceived(System.IntPtr,System.Int16)">
            <summary>
            Called when teletext has been received.
            </summary>
            <param name="data">The data.</param>
            <param name="packetCount">The packet count.</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogChanelScan">
            <summary>
            Interface to the analog channel scan interface
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogChanelScan.Start">
            <summary>
            Starts scanning the current transponder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogChanelScan.Stop">
            <summary>
            Stops scanning.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogChanelScan.IsReady(System.Boolean@)">
            <summary>
            Determines whether scanner is finished or not.
            </summary>
            <param name="yesNo">true when scanner is finished otherwise false</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogChanelScan.GetChannel(System.IntPtr@)">
            <summary>
            Gets the name of a channel.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogChanelScan.SetCallBack(Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogChannelScanCallback)">
            <summary>
            Sets the callback, which gets called when the channel scan is completed
            </summary>
            <param name="callback">Callback to set</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogChannelScanCallback">
            <summary>
            Interface to the analog channel callback
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogChannelScanCallback.OnScannerDone">
            <summary>
            Gets called when the scanning is done
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.TvCardDVBC">
            <summary>
            Implementation of <see cref="T:TvLibrary.Interfaces.ITVCard"/> which handles DVB-C BDA cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.TvCardDVBC.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IEpgEvents,DirectShowLib.DsDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.TvCardDVBC"/> class.
            </summary>
            <param name="epgEvents">The EPG events interface.</param>
            <param name="device">The device.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.TvCardDVBC.BuildGraph">
            <summary>
            Builds the graph.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.TvCardDVBC.CreateTuningSpace">
            <summary>
            Creates the tuning space.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.TvCardDVBC.StopGraph">
            <summary>
            Methods which stops the graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.TvCardDVBC.Scan(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Scans the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.TvCardDVBC.Tune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.TvCardDVBC.FilterOutEPGChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Epg.EpgChannel)">
            <summary>
            checks if a received EPGChannel should be filtered from the resultlist
            </summary>
            <value></value>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.TvCardDVBC.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.TvCardDVBC.CanTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Method to check if card can tune to the channel specified
            </summary>
            <param name="channel"></param>
            <returns>
            true if card can tune to the channel otherwise false
            </returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.TvCardDVBC.ScanningInterface">
            <summary>
            returns the ITVScanning interface used for scanning channels
            </summary>
            <value></value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.Hauppauge">
            <summary>
            Hauppauge CI control calss
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.Hauppauge.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.Hauppauge"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.Hauppauge.SendDiseqCommand(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            Sends the diseq command.
            </summary>
            <param name="channel">The channel.</param>
            <param name="parameters">The scanparameters.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.Hauppauge.SendDiSEqCCommand(System.Byte[])">
            <summary>
            Sends the DiSEqC command.
            </summary>
            <param name="diSEqC">The DiSEqC command.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.Hauppauge.ReadDiSEqCCommand(System.Byte[]@)">
            <summary>
            gets the diseqc reply
            </summary>
            <param name="reply">The reply.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.Hauppauge.SetDVBS2PilotRolloff(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            sets the dvb-s2 pilot / roll-off
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.Hauppauge.Dispose">
            <summary>
            Disposes COM task memory resources
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.Hauppauge.IsHauppauge">
            <summary>
            Gets a value indicating whether this instance is hauppauge.
            </summary>
            <value>
            	<c>true</c> if this instance is hauppauge; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog">
            <summary>
            Class for handling various types of Analog TV Cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.#ctor(DirectShowLib.DsDevice)">
            <summary>
             Constrcutor for the analog
            </summary>
            <param name="device">Tuner Device</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.CanTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Method to check if card can tune to the channel specified
            </summary>
            <returns>true if card can tune to the channel otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.PauseGraph">
            <summary>
            Pause the current graph
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.StopGraph">
            <summary>
            Stops the current graph
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.StartLinkageScanner(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.BaseChannelLinkageScanner)">
            <summary>
            Starts scanning for linkage info
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.ResetLinkageScanner">
            <summary>
            Stops/Resets the linkage scanner
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.GrabEpg(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.BaseEpgGrabber)">
            <summary>
            Grabs the epg.
            </summary>
            <param name="callback">The callback which gets called when epg is received or canceled.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.GrabEpg">
            <summary>
            Start grabbing the epg while timeshifting
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.AbortGrabbing">
            <summary>
            Aborts grabbing the epg. This also triggers the OnEpgReceived callback.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.Scan(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Scans the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id.</param>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.Tune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id.</param>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.GetNewSubChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Allocates a new instance of TvDvbChannel which handles the new subchannel
            </summary>
            <returns>handle for to the subchannel</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.ReloadCardConfiguration">
            <summary>
            Reloads the card configuration
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.LockInOnSignal">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.UpdateSignalQuality(System.Boolean)">
            <summary>
            When the tuner is locked onto a signal this property will return true
            otherwise false
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.UpdateSignalQuality">
            <summary>
            When the tuner is locked onto a signal this property will return true
            otherwise false
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.BuildGraph">
            <summary>
            Builds the directshow graph for this analog tvcard
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.AddTsFileSink">
            <summary>
            adds the TsFileSink filter to the graph
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.RunGraph(System.Int32)">
            <summary>
            Methods which starts the graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.CheckThreadId">
            <summary>
            Checks the thread id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.GetChannelScanner">
            <summary>
             Returns the channel scanner interface
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.OnScanning">
            <summary>
            A derrived class should activate / deactivate the scanning
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.UpdateEpgGrabber(System.Boolean)">
            <summary>
            A derrived class should activate / deactivate the epg grabber
            </summary>
            <param name="value">Mode</param>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.ChannelLinkages">
            <summary>
            Returns the channel linkages grabbed
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.Epg">
            <summary>
            returns a list of all epg data for each channel found.
            </summary>
            <value>The epg.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.ScanningInterface">
            <summary>
            returns the ITVScanning interface used for scanning channels
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.Quality">
            <summary>
            Get/Set the quality
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.SupportsQualityControl">
            <summary>
            Property which returns true if card supports quality control
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.CardId">
            <summary>
            Gets or sets the unique id of this card
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.VideoFrequency">
            <summary>
            Gets the video frequency.
            </summary>
            <value>The video frequency.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog.AudioFrequency">
            <summary>
            Gets the audio frequency.
            </summary>
            <value>The audio frequency.</value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.DebugSettings">
            <summary>
            This class is responsible for managing debug settings 
            not configured through normal TV Server configuration.
            Each setting's status is determined by the existence 
            of a similarly named file in the TV Server's data dir
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.DebugSettings.SettingPath(System.String)">
            <summary>
            Get the path and filename of the requested debug setting
            </summary>
            <param name="setting">the name of the setting</param>
            <returns>the path</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.DebugSettings.GetSetting(System.String)">
            <summary>
            Get the value of a debug setting
            </summary>
            <param name="setting">the name of the setting</param>
            <returns>true if the setting is enabled, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.DebugSettings.SetSetting(System.String,System.Boolean)">
            <summary>
            Enables or disbables a debug setting
            </summary>
            <param name="setting">the name of the setting</param>
            <param name="enabled">true to enable the setting, otherwise false</param>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.DebugSettings.ResetGraph">
            <summary>
            When true, the graph should be reset after it is stopped
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.DebugSettings.UsePATLookup">
            <summary>
            When true, TSWriter should always use PAT lookup
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.DebugSettings.DumpRawTS">
            <summary>
            When true, the raw timeshifted TS will be dumped to a file
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.DebugSettings.DisableCRCCheck">
            <summary>
            When true, CRC checks should be disabled for DVB TS packets
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools">
            <summary>
            Zusammenfassung für TSHelperTools.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.GetHeader(System.IntPtr)">
            <summary>
             Converts the raw data into a TsHeader
            </summary>
            <param name="streamData">Raw data</param>
            <returns>Ts Header struct</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.GetHeader(System.Byte[])">
            <summary>
             Converts the binary data into a TsHeader
            </summary>
            <param name="data">Binary data</param>
            <returns>Ts Header struct</returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader">
            <summary>
            TS Header struct
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.SyncByte">
            <summary>
            Sync byte
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.TransportError">
            <summary>
            Transport error
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.PayloadUnitStart">
            <summary>
            Payload unit start
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.TransportPriority">
            <summary>
            Transport priority
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.Pid">
            <summary>
            Pid
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.TransportScrambling">
            <summary>
            Transport scrambling
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.AdaptionFieldControl">
            <summary>
            Adaption field control
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.ContinuityCounter">
            <summary>
            Continuity Counter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.AdaptionField">
            <summary>
            Adpation field
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.TableID">
            <summary>
            Table id
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.SectionLen">
            <summary>
            Section Len
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.IsMHWTable">
            <summary>
            Is MHW Table
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.TSHelperTools.TSHeader.MHWIndicator">
            <summary>
            MHW Indicator
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper">
            <summary>
            All things related to the skyStar2 specific things go in here
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IID_IB2C2AVCTRL2">
            <summary>
            AVCTRL2 GUID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.CLSID_B2C2Adapter">
            <summary>
            B2C2 Adapter GUID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.CLSID_StreamBufferSink">
            <summary>
            Stream Buffer Sink GUID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.CLSID_Mpeg2VideoStreamAnalyzer">
            <summary>
            Mpeg2VideoStreamAnalyzer GUID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.CLSID_StreamBufferConfig">
            <summary>
            StreamBufferConfig GUID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.CLSID_Mpeg2Data">
            <summary>
            Mpeg2Data GUID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.MEDIATYPE_MPEG2_SECTIONS">
            <summary>
            Mediatype MPEG2 Sections GUID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.MEDIASUBTYPE_MPEG2_DATA">
            <summary>
            Mediasubtype MPEG2 Data GUID
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2AVCtrl">
            <summary>
            IB2C2MPEG2AVCtrl methods allow access to MPEG2 Audio and Video elementary streams by setting or deleting their PIDs. For Video in Windows, a Video callback structure can be configured to pass Video window size, aspect ratio, and frame rate when instructed by the application.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2AVCtrl.SetAudioVideoPIDs(System.Int32,System.Int32)">
            <summary>
            Sets the Audio and Video PIDs of interest to the application.
            </summary>
            <param name="pida">Audio PID</param>
            <param name="pidb">Video PID</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2AVCtrl2">
            <summary>
            IB2C2MPEG2AVCtrl2 methods allow access to MPEG2 Audio and Video elementary streams by setting or deleting their PIDs. For Video in Windows, a Video callback structure can be configured to pass Video window size, aspect ratio, and frame rate when instructed by the application.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2AVCtrl2.SetCallbackForVideoMode(System.Delegate)">
            <summary>
            Sets Callback for Video mode of operation, which allows Video aspect ratio to be reported back to the user application when the user application passes a parameter.
            </summary>
            <param name="vInfo">Pointer to a callback function with the format: UINT __stdcall (MPEG2_VIDEO_INFO *). </param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2AVCtrl2.DeleteAudioVideoPIDs(System.Int32,System.Int32)">
            <summary>
            Deletes Audio and Video PIDs. 
            </summary>
            <param name="pida">Audio PID</param>
            <param name="pidv">Video PID</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2AVCtrl2.GetAudioVideoState(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns current Audio and Video settings in terms of which streams are open or running and how many.
            </summary>
            <param name="a">Pointer to long variable created by the caller. Variable will hold the count of currently open Audio streams. A value of 0 indicates that no Audio stream is open. Pass NULL for this argument if no return is desired.</param>
            <param name="b">Pointer to long variable created by the caller. Variable will hold the count of currently open Video streams. A value of 0 indicates that no Video stream is open. Pass NULL for this argument if no return is desired.</param>
            <param name="c">Pointer to long variable created by the caller. Variable will hold the count of currently running Audio streams. A value of 0 indicates that no Audio stream is running. Pass NULL for this argument if no return is desired.</param>
            <param name="d">Pointer to long variable created by the caller. Variable will hold the count of currently running Video streams. A value of 0 indicates that no Video stream is running. Pass NULL for this argument if no return is desired.</param>
            <param name="e">Pointer to long variable created by the caller. Variable will hold the value of the current Audio PID. A value of 0 indicates that no Audio PID is set. Pass NULL for this argument if no return is desired. </param>
            <param name="f">Pointer to long variable created by the caller. Variable will hold the value of the current Video PID. A value of 0 indicates that no Video PID is set. Pass NULL for this argument if no return is desired.</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl">
            <summary>
            A channel typically contains multiple program streams of packeted information identified by PID (Program Identifier). An IP data stream is a stream carrying IP packets. A Raw TS stream is any stream (regardless of content) arbitrarily selected by its PID. After a channel is locked onto by a tuner, the desired program is selected by setting its PID. 
            IB2C2MPEG2DataCtrl supports all tuner types. IB2C2MPEG2DataCtrl methods enable an application to configure PID parameters for receiving IP data and Raw Transport Stream (Raw TS) data. Additionally, IB2C2MPEG2DataCtrl6 methods can set the broadband device's unicast MAC address and multicast groups and monitor IP data reception statistics.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl.GetMaxPIDCount(System.Int32@)">
            <summary>
            Retrieves count of maximum simultaneous raw transport stream PIDs allowed. This value is currently 39
            </summary>
            <param name="pidCount">Pointer to long variable created by the caller. Variables will hold the value for maximum simultaneous PIDs</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl.AddPIDs(System.Int32,System.Int32[])">
            <summary>
            Sets raw transport stream PID values of interest to the application
            The AddPIDs function is obsolete and is implemented for backwards compatibility only. Current version uses AddPIDsToPin or AddTsPIDs method
            </summary>
            <param name="count">Number of PID(s) being passed in using the array (2nd argument). Must not be larger than value returned by GetMaxPIDCount</param>
            <param name="pidArray">Array of length lCount, where each element is set to a PID of interest</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl.DeletePIDs(System.Int32,System.Int32[]@)">
            <summary>
            Deletes raw transport stream PID values that the application no longer wants processed
            The DeletePIDs function is obsolete and is implemented for backwards compatibility only. Current version uses DeletePIDsFromPin or DeleteTsPIDs method
            </summary>
            <param name="count">Number of PID(s) being passed in using the array (2nd argument). Must not be larger than value returned by GetMaxPIDCount</param>
            <param name="pidArray">Array of length lCount, where each element is set to a PID that no longer needs to be processed</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl.GetMaxIpPIDCount(System.Int32@)">
            <summary>
            Retrieves count of maximum simultaneous IP PIDs allowed. This value is currently 33
            </summary>
            <param name="maxIpPidCount">Pointer to long variable created by the caller. Variable will hold the value for maximum simultaneous IP PIDs</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl.AddIpPIDs(System.Int32,System.Int32[]@)">
            <summary>
            Sets IP PID values of interest to the application
            </summary>
            <param name="count">Long variable that passes the size of the array specified in the second argument. Must not be larger than value returned by GetMaxIpPIDCount</param>
            <param name="ipPids">Pointer to an array created by the caller. In the array each element specifies a PID to be added. Array must not be smaller than the value passed by the first argument.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl.DeleteIpPIDs(System.Int32,System.Int32[]@)">
            <summary>
            Deletes IP PID values that the application no longer wants processed
            </summary>
            <param name="count">Long variable used to pass the size of the array specified in the second argument. Must not be larger than value returned by GetMaxIpPIDCount</param>
            <param name="ipPids">Pointer to an array created by the caller. In the array each element specifies a PID to be deleted</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl.GetIpPIDs(System.Int32@,System.Int32[]@)">
            <summary>
            Gets a list of all IP PIDs that have been added that have not been subsequently deleted or purged
            </summary>
            <param name="count">Pointer to a long variable created by the caller. Variable will hold the size of the array specified in the second argument</param>
            <param name="ipPids">Pointer to an array created by the caller. In the array each element will specify a currently active PID. Must not be smaller than the value returned by GetMaxIpPIDCount</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl.PurgeGlobalPIDs">
            <summary>
            Deletes all IP PIDs currently active in the tuner. The current value is 33
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl.GetMaxGlobalPIDCount">
            <summary>
            Shows the maximum number of available PIDs
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl.GetGlobalPIDs(System.Int32@,System.Int32[]@)">
            <summary>
            Retrieves list of currently set PIDs
            </summary>
            <param name="count">Pointer to long variable created by caller. Variable will hold count of how many PIDs are used in this array</param>
            <param name="globalPids">Pointer to array created by the caller. In the array each element specifies a PID. Array must not be smaller than the value returned by GetMaxGlobalPIDCount</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl.ResetDataReceptionStats">
            <summary>
            Defines start time for GetDataReceptionStats calculation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl.GetDataReceptionStats(System.Int32@,System.Int32@)">
            <summary>
            Retrieves Data Reception Statistics
            </summary>
            <param name="ipQuality">Pointer to a long variable created by the caller. Variable will hold the ratio of correctly recovered IP packets to total IP packets measured since last call to this function or to ResetDataReceptionStats</param>
            <param name="tsQuality">Pointer to a long variable created by the caller. Variable will hold the ratio of correctly recovered TS (Transport Stream) packets to total TS packets measured since last call to this function or to ResetDataReceptionStats</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl2">
            <summary>
            A channel typically contains multiple program streams of packeted information identified by PID (Program Identifier). An IP data stream is a stream carrying IP packets. A Raw TS stream is any stream (regardless of content) arbitrarily selected by its PID. After a channel is locked onto by a tuner, the desired program is selected by setting its PID. 
            IB2C2MPEG2DataCtrl2 supports all tuner types. IB2C2MPEG2DataCtrl2 methods enable an application to configure PID parameters for receiving IP data and Raw Transport Stream (Raw TS) data. Additionally, IB2C2MPEG2DataCtrl6 methods can set the broadband device's unicast MAC address and multicast groups and monitor IP data reception statistics.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl2.AddPIDsToPin(System.Int32@,System.Int32[],System.Int32)">
            <summary>
            Sets raw transport stream PID values of interest to the application and associates these PIDs with B2C2MPEG2Filter output pins
            </summary>
            <param name="count">Pointer to a variable created by the caller. (In) Variable holds the number of PIDs to be added given by the second argument.(Out) Variable holds the number of PIDs added</param>
            <param name="pidsArray">Pointer to array created by the caller. Array holds the PIDs to be added. Must not be smaller than the value passed by the first argument</param>
            <param name="dataPin">The number of the B2C2MPEG2Filter output pin to which you want to add the PIDs of the second argument</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl2.DeletePIDsFromPin(System.Int32,System.Int32[],System.Int32)">
            <summary>
            Deletes raw transport stream PID values that the application no longer wants processed and dissociates the PIDs from their B2C2MPEG2Filter output pins
            </summary>
            <param name="count">variable showing number of PIDs to be deleted. PIDs are defined in the second argument</param>
            <param name="pidsArray">Pointer to array created by the caller. Array holds the PIDs to be deleted. Array must not be smaller than the number given by the first argument</param>
            <param name="dataPin">The number of the B2C2MPEG2Filter output pin from which you want to delete the PIDs of the second argument</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl3">
            <summary>
            A channel typically contains multiple program streams of packeted information identified by PID (Program Identifier). An IP data stream is a stream carrying IP packets. A Raw TS stream is any stream (regardless of content) arbitrarily selected by its PID. After a channel is locked onto by a tuner, the desired program is selected by setting its PID. 
            IB2C2MPEG2DataCtrl3 supports all tuner types. IB2C2MPEG2DataCtrl3 methods enable an application to configure PID parameters for receiving IP data and Raw Transport Stream (Raw TS) data. Additionally, IB2C2MPEG2DataCtrl6 methods can set the broadband device's unicast MAC address and multicast groups and monitor IP data reception statistics.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl3.AddTsPIDs(System.Int32,System.Int32[])">
            <summary>
            Sets raw transport stream PID values of interest to the application
            </summary>
            <param name="count">Number of PID(s) being passed in using the array (2nd argument). Must not be larger than value returned by GetMaxPIDCount</param>
            <param name="pids">Pointer to an array created by the caller. Array holds each PID of interest. Must not be smaller than the value passed by the first argument</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl3.DeleteTsPIDs(System.Int32,System.Int32[])">
            <summary>
            Deletes raw transport stream PID values that the application no longer wants processed
            </summary>
            <param name="count">Number of PID(s) being passed in using the array (2nd argument). Must not be larger than value returned by GetMaxPIDCount.</param>
            <param name="pids">Pointer to an array created by the caller. Array holds each PID that no longer needs to be processed. Size must not be smaller than value passed by the first argument</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl3.GetTsState(System.Int32@,System.Int32@,System.Int32@,System.Int32[]@)">
            <summary>
            Returns current transport stream settings in terms of raw transport stream PIDs open or running, where "open" means PID set, and "running" means started, not currently stopped
            </summary>
            <param name="plOpen">Pointer to long variable created by the caller. Variable will hold the count of currently open TS streams. A value of 0 indicates that no TS streams are open. Pass NULL for this argument if no return is desired</param>
            <param name="plRunning">Pointer to long variable created by the caller. Variable will hold the count of currently running TS streams. A value of 0 indicates that no TS streams are running. Pass NULL for this argument if no return is desired.</param>
            <param name="plCount">Pointer to a long variable created by the caller. (Input) variable holds the size of the PID array. (Output) variable will hold the number of PID(s) being used in the second argument. Pass NULL for this argument and plPIDArray if no return is desired</param>
            <param name="plPIDArray">Pointer to an array created by the caller. In the array each element will be set to a PID of interest. Must not be smaller than the value passed by the third argument. Use GetMaxPIDCount to determine the maximum possible number of PIDs. Pass NULL for this argument and plCount if no return is desired</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl3.GetIpState(System.Int32@,System.Int32@,System.Int32@,System.Int32[]@)">
            <summary>
            Returns current IP settings in terms of IP PID streams open or running, , where "open" means PID set, and "running" means started, not currently stopped
            </summary>
            <param name="plOpen">Pointer to a long variable created by the caller. Variable will hold the count of currently open IP streams. A value of 0 indicates that no IP streams are open. Pass NULL for this argument if no return is desired</param>
            <param name="plRunning">Pointer to a long variable created by the caller. Variable will hold the count of currently running IP streams. A value of 0 indicates that no IP streams are running. Pass NULL for this argument if no return is desired</param>
            <param name="plCount">Pointer to a long variable created by the caller. (Input) Variable holds the size of the PID array. (Output) Variable will hold the number of PID(s) being used in the fourth argument. Pass NULL for this argument and plPIDArray if no return is desired</param>
            <param name="plPIDArray">Pointer to an array created by the caller. In the array each element will be set to a PID of interest. Must not be smaller than the value passed by the third argument. Use GetMaxIpPIDCount to determine the maximum possible number of PIDs. Pass NULL for this argument and plCount if no return is desired</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl3.GetReceivedDataIp(System.IntPtr,System.IntPtr)">
            <summary>
            Returns count of bytes and IP packets received
            </summary>
            <param name="ptrA">Pointer to 64-bit variable where the byte count for total IP data received will be stored</param>
            <param name="ptrB">Pointer to 64-bit variable where the packet count for total IP packets received will be stored</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl3.AddMulticastMacAddress(System.IntPtr)">
            <summary>
            Adds the given multicast MAC addresses
            </summary>
            <param name="pMacAddrList">Pointer to the structure tMacAddressList created by the caller. (tMacAddressList is defined in header file b2c2_defs.h delivered as part of the SDK.) The structure member lCount holds the number of MAC addresses to delete; the first 1Count members of the aabtMacAddr[B2C2_SDK_MAC_ADDR_LIST_MAX][B2C2_SDK_MAC_ADDR_SIZE] array will be added. The maximum number of MAC addresses held by the aabtMacAddr array is defined at B2C2_SDK_MAC_ADDR_LIST_MAX; therefore, lCount must not be larger than B2C2_SDK_MAC_ADDR_LIST_MAX. The number of bytes per MAC address in the array is defined at B2C2_SDK_MAC_ADDR_SIZE</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl3.GetMulticastMacAddressList(System.IntPtr)">
            <summary>
            Gets the list of currently set MAC addresses
            </summary>
            <param name="pMacAddrList">Pointer to the structure tMacAddressList created by the caller. (tMacAddressList is defined in header file b2c2_defs.h delivered as part of the SDK.) The first 1Count members of the aabtMacAddr[B2C2_SDK_MAC_ADDR_LIST_MAX][B2C2_SDK_MAC_ADDR_SIZE] array will be listed. In this case, the member 1Count holds the maximum possible number of MAC addresses defined at B2C2_SDK_MAC_ADDR_LIST_MAX and returns the number of MAC addresses set at the aabtMacAddr array. The number of bytes per MAC address in the array is defined at B2C2_SDK_MAC_ADDR_SIZE, which specifies the size of an array member</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl3.DeleteMulticastMacAddress(System.IntPtr)">
            <summary>
            Deletes the given multicast MAC addresses
            </summary>
            <param name="pMacAddrList">Pointer to the structure tMacAddressList created by the caller. (tMacAddressList is defined in header file b2c2_defs.h delivered as part of the SDK.) The member lCount holds the number of MAC addresses to delete; the first 1Count members of the aabtMacAddr[B2C2_SDK_MAC_ADDR_LIST_MAX][B2C2_SDK_MAC_ADDR_SIZE] array will be deleted. The maximum number of MAC addresses held by the aabtMacAddr array is defined at B2C2_SDK_MAC_ADDR_LIST_MAX; therefore, lCount must not be larger than B2C2_SDK_MAC_ADDR_LIST_MAX. The number of bytes per MAC address in the array is defined at B2C2_SDK_MAC_ADDR_SIZE, which specifies the size of an array member.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl3.SetUnicastMacAddress(System.IntPtr)">
            <summary>
            Set the given unicast MAC addresses
            </summary>
            <param name="pMacAddr">Pointer to the array of size B2C2_SDK_MAC_ADDR_SIZE (6 bytes) created by the caller. pMacAddr holds the new unicast MAC address to be set for the device; the currently set unicast MAC address will be overwritten</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl3.GetUnicastMacAddress(System.IntPtr)">
            <summary>
            Set the given unicast MAC addresses
            </summary>
            <param name="pMacAddr">Pointer to the array of size B2C2_SDK_MAC_ADDR_SIZE (6 bytes) created by the caller. pMacAddr will hold the current unicast MAC address set at the device</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2DataCtrl3.RestoreUnicastMacAddress">
            <summary>
            Restores the unicast MAC address to the device default
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl">
            <summary>
            In order to receive programs, the broadband receiver must first lock onto a channel. This is accomplished by controlling the tuner. IB2C2MPEG2TunerCtrl3 supports satellite, cable, and terrestrial DVB and terrestrial ATSC tuners. IB2C2MPEG2TunerCtrl4 methods allow software to lock onto a channel, including the monitoring of receiver (tuner module) performance statistics such as BER and Uncorrected Blocks.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.SetFrequency(System.Int32)">
            <summary>
            Sets Transponder Frequency value in MHz
            </summary>
            <param name="frequency">Transponder Frequency in MHz. Must be greater than or equal to zero. The upper limit is tuner dependent</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.SetSymbolRate(System.Int32)">
            <summary>
            Sets Symbol Rate value
            </summary>
            <param name="symbolRate">Symbol Rate in KS/s. Must be greater than or equal to zero. The upper limit is tuner dependent and can be queried by GetTunerCapabilities</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.SetLnbFrequency(System.Int32)">
            <summary>
            Sets LNB Frequency value
            </summary>
            <param name="lnbFrequency">LNB Frequency in MHz. Must be greater than or equal to zero and less than Transponder Frequency set by IB2C2MPEG2TunerCtrl2::SetFrequency or by IB2C2MPEG2TunerCtrl2::SetFrequencyKHz</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.SetFec(System.Int32)">
            <summary>
            Sets FEC value
            </summary>
            <param name="fec">FEC value. Use eFEC enumerated type defined in header file b2c2_defs.h delivered as part of the SDK. Possible values are: 
            FEC_1_2
            FEC_2_3
            FEC_3_4 
            FEC_5_6 
            FEC_7_8 
            FEC_AUTO</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.SetPolarity(System.Int32)">
            <summary>
            Sets Polarity value
            </summary>
            <param name="polarity">Polarity value. Use ePolarity enumerated type defined in header file b2c2_defs.h delivered as part of the SDK. Possible values are: 
            POLARITY_HORIZONTAL 
            POLARITY_VERTICAL</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.SetLnbKHz(System.Int32)">
            <summary>
            Sets LNB kHz selection value
            </summary>
            <param name="lnbKHZ">LNB kHz Selection value. Use eLNBSelection enumerated type defined in header file b2c2_defs.h delivered as part of the SDK. Possible values are: 
            LNB_SELECTION_0 
            LNB_SELECTION_22 
            LNB_SELECTION_33 
            LNB_SELECTION_44</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.SetDiseqc(System.Int32)">
            <summary>
            Sets DiSEqC value
            </summary>
            <param name="diseqc">DiSEqC value. Use eDiseqc enumerated type defined in header file b2c2_defs.h delivered as part of the SDK. Possible values are: 
            DISEQC_NONE 
            DISEQC_SIMPLE_A 
            DISEQC_SIMPLE_B 
            DISEQC_LEVEL_1_A_A 
            DISEQC_LEVEL_1_B_A 
            DISEQC_LEVEL_1_A_B 
            DISEQC_LEVEL_1_B_B</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.SetModulation(System.Int32)">
            <summary>
            Sets Modulation value
            </summary>
            <param name="modulation"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.Initialize">
            <summary>
            Creates connection to Tuner Control interface of B2C2MPEG2Filter. (See sample applications for more information.)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.SetTunerStatus">
            <summary>
            Sends tuner parameter values to the tuner and waits until the tuner gets in lock or times out. The time-out value depends on the tuner type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.CheckLock">
            <summary>
            Checks lock status of tuner
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.GetTunerCapabilities(System.IntPtr,System.Int32@)">
            <summary>
            Identifies capabilities of particular tuner
            </summary>
            <param name="tunerCaps">Pointer to a structure defined in the header file b2c2_defs.h. The caller provides the structure</param>
            <param name="count">Pointer to a long variable created by the caller. Variable will hold the size of the structure (bytes) returned</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.GetFrequency(System.Int32@)">
            <summary>
            Gets current Transponder Frequency in MHz
            </summary>
            <param name="freq">Pointer to a long variable created by the caller. Variable will hold the Transponder Frequency in MHz</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.GetSymbolRate(System.Int32@)">
            <summary>
            Gets current Symbol Rate in MS/s
            </summary>
            <param name="symbRate">Pointer to a variable created by the caller. Variable will hold the Symbol Rate in KS/s</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.GetModulation(System.Int32@)">
            <summary>
            Gets current Modulation value
            </summary>
            <param name="modulation">Pointer to a long variable created by the caller. Variable will hold the Modulation value. (Use eModulation enumerated type defined in header file b2c2_defs.h delivered as part of the SDK.) Possible values are: 
            QAM_4 
            QAM_16 
            QAM_32 
            QAM_64 
            QAM_128
            QAM_256</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.GetSignalStrength(System.Int32@)">
            <summary>
            Gets current Signal Strength value in %
            </summary>
            <param name="signalStrength">Pointer to a variable created by the caller. Variable will hold Signal Strength in %</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.GetSignalLevel(System.Single@)">
            <summary>
            The GetSignalLevel function is obsolete and is implemented for backwards compatibility only. Current version uses GetSignalStrength or GetSignalQuality method, depending on the tuner type
            </summary>
            <param name="signalLevel">Pointer to a variable created by the caller. Variable will hold Signal Level in dBm</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.GetSNR(System.Single@)">
            <summary>
            Gets current Signal to Noise Ratio (SNR) value
            </summary>
            <param name="SNR">Pointer to a variable created by the caller. Variable will hold Signal to Noise Ratio</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.GetPreErrorCorrectionBER(System.Single@,System.Boolean)">
            <summary>
            Gets current pre-error-correction Bit Error Rate (BER) value
            </summary>
            <param name="ber">Pointer to a variable created by the caller. Variable will hold Bit Error Rate</param>
            <param name="flag">(Not used.)</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.GetUncorrectedBlocks(System.Int32@)">
            <summary>
            Gets current count of Uncorrected Blocks
            </summary>
            <param name="uncorrectedBlocks">Pointer to a variable created by the caller. Variable will hold count of Uncorrected Blocks</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.GetTotalBlocks(System.Int32@)">
            <summary>
            Gets current count of Total Blocks
            </summary>
            <param name="correctedBlocks">Pointer to a variable created by the caller. Variable will hold count of Total Blocks</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.GetChannel(System.Int32@)">
            <summary>
            Gets current Channel value
            </summary>
            <param name="channel">Pointer to a variable created by the caller. Variable will hold Channel number</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl.SetChannel(System.Int32)">
            <summary>
            Sets Channel value
            </summary>
            <param name="channel">Channel number</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl2">
            <summary>
            In order to receive programs, the broadband receiver must first lock onto a channel. This is accomplished by controlling the tuner. IB2C2MPEG2TunerCtrl3 supports satellite, cable, and terrestrial DVB and terrestrial ATSC tuners. IB2C2MPEG2TunerCtrl4 methods allow software to lock onto a channel, including the monitoring of receiver (tuner module) performance statistics such as BER and Uncorrected Blocks.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl2.SetTunerStatusEx(System.Int32)">
            <summary>
            Sends values to tuner for tuning with optional argument for defining how many times the SDK should check whether the tuner is in lock. The wait time between each check is 50 ms
            </summary>
            <param name="count">Number of times the SDK should check whether the tuner is in lock.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl2.SetFrequencyKHz(System.Int64)">
            <summary>
            Sets Transponder Frequency value in kHz.
            </summary>
            <param name="freqKHZ">Transponder Frequency in kHz. Must be greater than or equal to zero. The upper limit is tuner dependent</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl2.SetGuardInterval(System.Int32)">
            <summary>
            Sets Guard Interval value
            </summary>
            <param name="interval">Guard Interval value. Use eGuardInterval enumerated type defined in header file b2c2_defs.h delivered as part of the SDK. Possible values are: 
            GUARD_INTERVAL_1_32
            GUARD_INTERVAL_1_16
            GUARD_INTERVAL_1_8
            GUARD_INTERVAL_1_4
            GUARD_INTERVAL_AUTO </param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl2.GetGuardInterval(System.Int32@)">
            <summary>
            Gets current Guard Interval value
            </summary>
            <param name="interval">Pointer to long variable where value for Guard Interval will be stored. eGuardInterval enumerated types are defined in header file b2c2_defs.h delivered as part of the SDK. Possible values are: 
            GUARD_INTERVAL_1_32
            GUARD_INTERVAL_1_16
            GUARD_INTERVAL_1_8
            GUARD_INTERVAL_1_4
            GUARD_INTERVAL_AUTO </param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl2.GetFec(System.Int32@)">
            <summary>
            Gets current FEC value
            </summary>
            <param name="plFec">Pointer to a long variable created by the user where the FEC value will be stored. eFEC enumerated types are defined in header file b2c2_defs.h delivered as part of the SDK. Possible values are:
            FEC_1_2
            FEC_2_3
            FEC_3_4 
            FEC_5_6 
            FEC_7_8 
            FEC_AUTO</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl2.GetPolarity(System.Int32@)">
            <summary>
            Gets current Polarity value
            </summary>
            <param name="plPolarity">Pointer to a long variable created by the user where the Polarity value will be stored. ePolarity enumerated types are defined in header file b2c2_defs.h delivered as part of the SDK. Possible values are:
            POLARITY_HORIZONTAL 
            POLARITY_VERTICAL </param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl2.GetDiseqc(System.Int32@)">
            <summary>
            Gets current DiSEqC value
            </summary>
            <param name="plDiseqc">Pointer to a long variable created by the user where the DiSEqC value will be stored. eDiseqc enumerated types are defined in header file b2c2_defs.h delivered as part of the SDK. Possible values are: 
            DISEQC_NONE 
            DISEQC_SIMPLE_A 
            DISEQC_SIMPLE_B 
            DISEQC_LEVEL_1_A_A 
            DISEQC_LEVEL_1_B_A 
            DISEQC_LEVEL_1_A_B 
            DISEQC_LEVEL_1_B_B</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl2.GetLnbKHz(System.Int32@)">
            <summary>
            Gets current LNB kHz selection value
            </summary>
            <param name="plLnbKHz">Pointer to a long variable created by the user where the LNB kHz Selection value will be stored. eLNBSelection enumerated types are defined in header file b2c2_defs.h delivered as part of the SDK. Possible values are:
            LNB_SELECTION_0 
            LNB_SELECTION_22 
            LNB_SELECTION_33 
            LNB_SELECTION_44</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl2.GetLnbFrequency(System.Int32@)">
            <summary>
            Gets current LNB Frequency value
            </summary>
            <param name="plFrequencyMHz">Pointer to a long variable created by the user where the LNB Frequency value in MHz will be stored</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl2.GetCorrectedBlocks(System.Int32@)">
            <summary>
            Gets current count of Corrected Blocks
            </summary>
            <param name="plCorrectedBlocks">Pointer to a variable created by the caller. Variable will hold count of Corrected Blocks</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl2.GetSignalQuality(System.Int32@)">
            <summary>
            Gets current Signal Quality value in %
            </summary>
            <param name="pdwSignalQuality">Pointer to a variable created by the caller. Variable will hold Signal Quality in %</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl3">
            <summary>
            In order to receive programs, the broadband receiver must first lock onto a channel. This is accomplished by controlling the tuner. IB2C2MPEG2TunerCtrl3 supports satellite, cable, and terrestrial DVB and terrestrial ATSC tuners. IB2C2MPEG2TunerCtrl4 methods allow software to lock onto a channel, including the monitoring of receiver (tuner module) performance statistics such as BER and Uncorrected Blocks.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl3.SetBandwidth(System.Int32)">
            <summary>
            Sets the channel bandwidth.
            </summary>
            <param name="bandwidth">A long variable created by the user where the Bandwidth is stored. Possible values are:
            6 MHZ
            7 MHZ
            8 MHZ</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl3.GetBandwidth(System.Int32@)">
            <summary>
            Gets the channel bandwidth
            </summary>
            <param name="bandwidth">Pointer to a long variable created by the user where the Bandwidth value will be stored. Possible values are:
            6 MHZ
            7 MHZ
            8 MHZ</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl4">
            <summary>
            In order to receive programs, the broadband receiver must first lock onto a channel. This is accomplished by controlling the tuner. IB2C2MPEG2TunerCtrl3 supports satellite, cable, and terrestrial DVB and terrestrial ATSC tuners. IB2C2MPEG2TunerCtrl4 methods allow software to lock onto a channel, including the monitoring of receiver (tuner module) performance statistics such as BER and Uncorrected Blocks.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.DVBSkyStar2Helper.IB2C2MPEG2TunerCtrl4.SendDiSEqCCommand(System.Int32,System.IntPtr)">
            <summary>
            Sends a DiSEqC command to a DiSEqC compatible device connected to the card
            </summary>
            <param name="length">A integer variable that contains the number of bytes in the DiSEqC message</param>
            <param name="disEqcCommand">A pointer to a sequence of bytes which is the actual DiSEqC bytes to be sent according to the length specified</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.TvCardATSC">
            <summary>
            Implementation of <see cref="T:TvLibrary.Interfaces.ITVCard"/> which handles ATSC BDA cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.TvCardATSC.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IEpgEvents,DirectShowLib.DsDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.TvCardATSC"/> class.
            </summary>
            <param name="epgEvents">The EPG events interface.</param>
            <param name="device">The device.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.TvCardATSC.BuildGraph">
            <summary>
            Builds the graph.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.TvCardATSC.CreateTuningSpace">
            <summary>
            Creates the tuning space.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.TvCardATSC.Scan(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Scans the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id.</param>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.TvCardATSC.Tune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id.</param>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.TvCardATSC.FilterOutEPGChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Epg.EpgChannel)">
            <summary>
            checks if a received EPGChannel should be filtered from the resultlist
            </summary>
            <value></value>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.TvCardATSC.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.TvCardATSC.CanTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Method to check if card can tune to the channel specified
            </summary>
            <param name="channel"></param>
            <returns>
            true if card can tune to the channel otherwise false
            </returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.ATSC.TvCardATSC.ScanningInterface">
            <summary>
            returns the ITVScanning interface used for scanning channels
            </summary>
            <value></value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogScanning">
            <summary>
            Class which implements scanning for tv/radio channels for analog cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogScanning.#ctor(Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogScanning"/> class.
            </summary>
            <param name="card">The card.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogScanning.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogScanning.Reset">
            <summary>
            resets the scanner
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogScanning.Scan(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters)">
            <summary>
            Tunes to the channel specified and will start scanning for any channel
            </summary>
            <param name="channel">channel to tune to</param>
            <param name="settings"></param>
            <returns>list of channels found</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogScanning.ScanNIT(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters)">
            <summary>
            Tunes to channels based on the list the multiplexes that make up a DVB network.
            This information is obtained from the DVB NIT (Network Information Table)
            Not applicable for Analog.
            </summary>
            <param name="channel">channel to tune to</param>
            <param name="settings">ScanParameters to use while tuning</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogScanning.OnScannerDone">
            <summary>
            Called when [scanner done].
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogScanning.TvCard">
            <summary>
            returns the tv card used
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogScanning.RadioSensitivity">
            <summary>
            Property to set Radio tuning sensitivity.
            sensitivity range from 1MHz for value 1 to 0.1MHZ for value 10
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI">
            <summary>
            Common class for handling DVB MMI objects
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.ToMMITag(System.Byte[],System.Int32)">
            <summary>
            interpretes parts of an byte[] as status int
            </summary>
            <param name="sourceData"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.GetLength(System.Byte[],System.Int32,System.Int32@)">
            <summary>
            interpretes length() info which can be of different size
            </summary>
            <param name="sourceData">source byte array</param>
            <param name="offset">index to start</param>
            <param name="bytesRead">returns the number of bytes interpreted</param>
            <returns>length of following object</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.SetLength(System.UInt16,System.Byte@,System.Byte@)">
            <summary>
            Sets length info to byte positions
            </summary>
            <param name="length">(word) Length</param>
            <param name="uLength1">(byte) LowByte of Length</param>
            <param name="uLength2">(byte) HighByte of Length</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.BytesToString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts bytes to String
            </summary>
            <param name="sourceData">source byte[]</param>
            <param name="offset">starting offset</param>
            <param name="length">length</param>
            <returns>String</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.GetCIText(System.Byte[],System.Int32,System.Collections.Generic.List{System.String}@)">
            <summary>
            intepretes string for ci menu entries
            </summary>
            <param name="sourceData">source byte array</param>
            <param name="offset">index to start</param>
            <param name="menuEntries">reference to target string list</param>
            <returns>offset for further readings</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.CreateMMIClose(System.Byte[]@)">
            <summary>
            Creates a "CloseMMI" data set
            </summary>
            <param name="uData">reference to byte[]</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.CreateMMISelect(System.Byte,System.Byte[]@)">
            <summary>
            Creates a "SelectMenuChoice" data set
            </summary>
            <param name="choice">selected index (0 means back)</param>
            <param name="uData">reference to byte[]</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.CreateMMIAnswer(System.Boolean,System.String,System.Byte[]@,System.Byte@,System.Byte@)">
            <summary>
            Creates an CI Menu Answer package
            </summary>
            <param name="Cancel">true to cancel</param>
            <param name="Answer">answer string</param>
            <param name="uData">target buffer</param>
            <param name="uLength1">length byte1</param>
            <param name="uLength2">length byte2</param>
            <returns>byte array</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.ToSafeAscii(System.Byte)">
            <summary>
            returns a safe "printable" character or _
            </summary>
            <param name="b">byte code</param>
            <returns>char</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.DumpBinary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Output binary buffer to log for debugging
            </summary>
            <param name="sourceData">source byte[]</param>
            <param name="offset">starting offset</param>
            <param name="length">total length</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.DumpBinary(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Output binary buffer to log for debugging (Wrapper for IntPtr)
            </summary>
            <param name="sourceData">source IntPtr</param>
            <param name="offset">starting offset</param>
            <param name="length">total length</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.IntPtrToByteArray(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Copys data from IntPtr to new byte[]
            </summary>
            <param name="sourceData">IntPtr to source data</param>
            <param name="offset">starting offset</param>
            <param name="length">length</param>
            <returns>new byte[]</returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.MMI_TAGS">
            <summary>
            MMI Tags inside MMI object
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.MMI_TAGS.CLOSE">
            Close menu
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.MMI_TAGS.ENQUIRY">
            Enquiry from CAM
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.MMI_TAGS.MENU_MORE">
            More menu entries
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.MMI_TAGS.MENU_LAST">
            Last menu entry
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.MMI_TAGS.LIST_MORE">
            More list items
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.MMI_TAGS.LIST_LAST">
            Last list item
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.MMI_TAGS.TEXT_MORE">
            More text
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI.MMI_TAGS.TEXT_LAST">
            Last text
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI_Handler">
            <summary>
            Handles APDU (MMI) objects and perform callbacks
            This is a common class that is able to handle MMI objects according to DVB spec
            Used for DVB cards that return binary data (DigitalEverywhere FireDTV, Hauppauge WinTvCI, others?)
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI_Handler.SetCiMenuHandler(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.ICiMenuCallbacks@)">
            <summary>
            Sets the callback handler
            </summary>
            <param name="ciMenuHandler"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI_Handler.#ctor(System.String,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.ICiMenuCallbacks@)">
            <summary>
            Constructor for an APDU based MMI parser
            </summary>
            <param name="CardName">Card type for logging</param>
            <param name="CiMenuCallbacks">refrence to Callbacks</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI_Handler.#ctor(System.String)">
            <summary>
            Constructor for an APDU based MMI parser
            </summary>
            <param name="CardName">Card type for logging</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.DVB_MMI_Handler.HandleMMI(System.Byte[],System.Int32)">
            <summary>
            Handles APDU (MMI) objects and perform callbacks
            </summary>
            <param name="MMI">MMI byte[]</param>
            <param name="MMI_length">length</param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor">
            <summary>
            Class which handles DiSEqC motors
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.#ctor(Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.IDiSEqCController)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.Reset">
            <summary>
            Reset.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.StopMotor">
            <summary>
            Stops the motor.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.SetEastLimit">
            <summary>
            Sets the east limit.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.SetWestLimit">
            <summary>
            Sets the west limit.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DriveMotor(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.DiSEqCDirection,System.Byte)">
            <summary>
            Drives the motor.
            </summary>
            <param name="direction">The direction.</param>
            <param name="steps">the number of steps to move.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.StorePosition(System.Byte)">
            <summary>
            Stores the position.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.GotoReferencePosition">
            <summary>
            Goto's the sattelite reference position.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.GotoPosition(System.Byte)">
            <summary>
            Goto's the position.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.GetPosition(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the current motor position.
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.ForceLimits">
            <summary>
            Enable/disables the west/east limits.
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands">
            <summary>
            DisEqC motor commands
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.Reset">
            <summary>
            Reset
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.ClearReset">
            <summary>
            ClearReset
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.StandBye">
            <summary>
            StandBye
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.StandByeOff">
            <summary>
            StandByeOff
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.PowerOn">
            <summary>
            PowerOn
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.Halt">
            <summary>
            halt motor
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.LimitsOff">
            <summary>
            turn soft limits off
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.ReadPosition">
            <summary>
            read current position (requires diseqc 2.2)
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.SetEastLimit">
            <summary>
            sets the east limit
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.SetWestLimit">
            <summary>
            sets the west limit
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.DriveEast">
            <summary>
            move east
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.DriveWest">
            <summary>
            move west
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.StorePositions">
            <summary>
            store current position
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.GotoPosition">
            <summary>
            goto stored position
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.GotoAngularPosition">
            <summary>
            goto angular position
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCCommands.RecalculatePositions">
            <summary>
            recalcuate positions
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCPositionFlags">
            <summary>
             DiseqC Position flags
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCPositionFlags.CommandCompleted">
            <summary>
            last command has completed
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCPositionFlags.SoftwareLimitsEnabled">
            <summary>
            software limits are enabled
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCPositionFlags.DirectionWest">
            <summary>
            last movement was west
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCPositionFlags.MotorRunning">
            <summary>
            motor is running
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCPositionFlags.SoftwareLimitReached">
            <summary>
            software limits are reached
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCPositionFlags.PowerNotAvailable">
            <summary>
            power is not available
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCPositionFlags.HardwareSwitchActivated">
            <summary>
            hardware switch is activated
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCPositionFlags.PositionReferenceLost">
            <summary>
            reference position is corrupted or lost
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCFraming">
            <summary>
            DiseqC Framing
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCFraming.FirstTransmission">
            <summary>
            diseqc framing byte, first transmission
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCFraming.RepeatedTransmission">
            <summary>
            diseqc framing byte, repeated transmission
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCFraming.FirstTransmissionReply">
            <summary>
            diseqc framing byte first transmission, request a reply
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCFraming.RepeatedTransmissionReply">
            <summary>
            diseqc framing byte repeated transmission, request a reply
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCFraming.ReplyOk">
            <summary>
            diseqc reply ok, no errors detected
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCFraming.ReplyCommandNotSupported">
            <summary>
            diseqc reply error, command not supported
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCFraming.ReplyParityError">
            <summary>
            diseqc reply error, parity error detected
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCFraming.ReplyUnknownCommand">
            <summary>
            diseqc reply error, unknown command
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCMovement">
            <summary>
            DiseqC Movement
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCMovement.Both">
            <summary>
            wildcard for both directions
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCMovement.Azimutal">
            <summary>
            move along azimutal axis
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.DiSEqCMotor.DiSEqCMovement.Elivation">
            <summary>
            move along elivation axis
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI">
            <summary>
            KNC CI control class
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCBDA_CI_Enable(System.UInt32,DirectShowLib.IBaseFilter,System.IntPtr)">
            <summary>
            KNC: Enable CI
            </summary>
            <param name="m_iDeviceIndex">device index 0..n</param>
            <param name="tunerFilter">tuner filter</param>
            <param name="callbacks">callback pointer struct</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCBDA_CI_Disable(System.UInt32)">
            <summary>
            KNC: Disable CI
            </summary>
            <param name="m_iDeviceIndex">device index 0..n</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCBDA_CI_IsAvailable(System.UInt32)">
            <summary>
            KNC: Detect if CI is available
            </summary>
            <param name="m_iDeviceIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCBDA_CI_IsReady(System.UInt32)">
            <summary>
            KNC: Detect if CI is ready
            </summary>
            <param name="m_iDeviceIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCBDA_CI_HW_Enable(System.UInt32,System.Boolean)">
            <summary>
            KNC: Enable CI Hardware ???
            </summary>
            <param name="m_iDeviceIndex"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCBDA_CI_GetName(System.UInt32,System.Text.StringBuilder,System.UInt32)">
            <summary>
            KNC: Query CAM name
            </summary>
            <param name="m_iDeviceIndex"></param>
            <param name="Name"></param>
            <param name="BufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCBDA_CI_SendPMTCommand(System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
            KNC: Send caPMT to CAM
            </summary>
            <param name="m_iDeviceIndex"></param>
            <param name="caPMT"></param>
            <param name="caPmtLen"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCBDA_CI_EnterMenu(System.UInt32,System.Byte)">
            <summary>
            KNC: Enter CI menu
            </summary>
            <param name="m_iDeviceIndex"></param>
            <param name="nSlot"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCBDA_CI_SelectMenu(System.UInt32,System.Byte,System.Byte)">
            <summary>
            KNC: Select CI menu choice
            </summary>
            <param name="m_iDeviceIndex"></param>
            <param name="nSlot"></param>
            <param name="nChoice"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCBDA_CI_CloseMenu(System.UInt32,System.Byte)">
            <summary>
            KNC: Close CI menu
            </summary>
            <param name="m_iDeviceIndex"></param>
            <param name="nSlot"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCBDA_CI_SendMenuAnswer(System.UInt32,System.Byte,System.Boolean,System.String)">
            <summary>
            KNC: Send CI menu answer
            </summary>
            <param name="m_iDeviceIndex"></param>
            <param name="nSlot"></param>
            <param name="cancel"></param>
            <param name="MenuAnswer"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCBDA_HW_Enable(System.UInt32,DirectShowLib.IBaseFilter)">
            <summary>
            KNC: Enable hardware ???
            </summary>
            <param name="m_iDeviceIndex"></param>
            <param name="tunerFilter"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.#ctor(DirectShowLib.IBaseFilter,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
            <param name="DeviceIndex">The KNC1 card hardware index (0 based)</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OpenCI">
            <summary>
            Opens the CI API
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.CloseCI">
            <summary>
            Closes the CI API
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.ResetCI">
            <summary>
            Reset the CI
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>    
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.IsCamReady">
            <summary>
            Determines whether cam is ready.
            </summary>
            <returns>
            	<c>true</c> if [is cam ready]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.SendPMT(System.Byte[],System.Int32)">
            <summary>
            Sends the PMT.
            </summary>
            <param name="pmt">The PMT.</param>
            <param name="PMTlength">The PM tlength.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.SendDiseqCommand(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            Sends the diseq command.
            </summary>
            <param name="channel">The channel.</param>
            <param name="parameters">The scanparameters.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.SendDiSEqCCommand(System.UInt64)">
            <summary>
            Sends the DiSEqC command.
            </summary>
            <param name="ulRange">The DisEqCPort</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.IsCamPresent">
            <summary>
            Determines whether [is cam present].
            </summary>
            <returns>
            	<c>true</c> if [is cam present]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OnCiState(System.Byte,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus,System.String,System.IntPtr)">
            <summary>
            Callback from driver when CI status changes
            </summary>
            <param name="slot">Slot</param>
            <param name="State">Status</param>
            <param name="lpszMessage">Message</param>
            <param name="pParam">Context pointer</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OnCiOpenDisplay(System.Byte,System.IntPtr)">
            <summary>
            Callback from driver on opening CI menu
            </summary>
            <param name="slot">Slot</param>
            <param name="pParam">Context pointer</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OnCiMenu(System.Byte,System.String,System.String,System.String,System.UInt32,System.IntPtr)">
            <summary>
            Callback from driver, returning CI menu headers
            </summary>
            <param name="slot">Slot</param>
            <param name="lpszTitle">Title</param>
            <param name="lpszSubTitle">Subtitle</param>
            <param name="lpszBottom">Bottom text</param>
            <param name="nNumChoices">Number of choices</param>
            <param name="pParam">Context pointer</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OnCiMenuChoice(System.Byte,System.UInt32,System.String,System.IntPtr)">
            <summary>
            Callback from driver for every choice in menu
            </summary>
            <param name="slot">Slot</param>
            <param name="nChoice">current choice number</param>
            <param name="lpszText">choice text</param>
            <param name="pParam">Context pointer</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OnCiRequest(System.Byte,System.Boolean,System.UInt32,System.String,System.IntPtr)">
            <summary>
            Callback from driver for requesting user input
            </summary>
            <param name="slot">Slot</param>
            <param name="bBlind">Do blind input (like password)</param>
            <param name="nAnswerLength">Expected answer length</param>
            <param name="lpszText">Request text</param>
            <param name="pParam">Context pointer</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OnCiCloseDisplay(System.Byte,System.UInt32,System.IntPtr)">
            <summary>
            Callback from driver to close display
            </summary>
            <param name="slot">Slot</param>
            <param name="nDelay">delay in ms</param>
            <param name="pParam">Context pointer</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.SetCiMenuHandler(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.ICiMenuCallbacks)">
            <summary>
            Sets the callback handler
            </summary>
            <param name="ciMenuHandler"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.EnterCIMenu">
            <summary>
            Enters the CI menu of KNC1 card
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.CloseCIMenu">
            <summary>
            Closes the CI menu of KNC1 card
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.SelectMenu(System.Byte)">
            <summary>
            Selects a CI menu entry
            </summary>
            <param name="choice"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.SendMenuAnswer(System.Boolean,System.String)">
            <summary>
            Sends an answer after CI request
            </summary>
            <param name="Cancel"></param>
            <param name="Answer"></param>
            <returns></returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.IsKNC">
            <summary>
            Gets a value indicating whether this instance is a KNC card.
            </summary>
            <value>
            	<c>true</c> if this instance is a KNC card; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus">
            <summary>
            Status for CI Slot
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.Initializing">
            Initializing
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.Transport">
            Transport
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.Resource">
            Resource
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.Application">
            Application
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.ConditionalAccess">
            ConditionalAccess
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.Ready">
            Ready
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.OpenService">
            OpenService
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.Releasing">
            Releasing
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.CloseMMI">
            CloseMMI
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.Request">
            Request
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.Menu">
            Menu
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.MenuChoice">
            MenuChoice
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.OpenDisplay">
            OpenDisplay
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.CloseDisplay">
            CloseDisplay
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiSlotStatus.None">
            None
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiCallbacks">
            <summary>
            CI MENU CALLBACK STRUCT 
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiCallbacks.pParam">
            context 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiCallbacks.onCiState">
            delegate for CI state callback
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiCallbacks.onOpenDisplay">
            delegate for opening display
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiCallbacks.onCiMenu">
            delegate for CI menu
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiCallbacks.onCiMenuChoice">
            delegate for CI menu choices
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiCallbacks.onRequest">
            deletgate for CI requests
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.KNCCiCallbacks.onCloseDisplay">
            delegate for closing CI
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OnKncCiState">
            <summary>
            KNC: Callbacks from CI
            </summary>
            <param name="slot"></param>
            <param name="State"></param>
            <param name="lpszMessage"></param>
            <param name="pParam"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OnKncCiOpenDisplay">
            <summary>
            KNC: Callbacks from CI
            </summary>
            <param name="slot"></param>
            <param name="pParam"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OnKncCiMenu">
            <summary>
            KNC: Callbacks from CI
            </summary>
            <param name="slot"></param>
            <param name="lpszTitle"></param>
            <param name="lpszSubTitle"></param>
            <param name="lpszBottom"></param>
            <param name="nNumChoices"></param>
            <param name="pParam"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OnKncCiMenuChoice">
            <summary>
            KNC: Callbacks from CI
            </summary>
            <param name="slot"></param>
            <param name="nChoice"></param>
            <param name="lpszText"></param>
            <param name="pParam"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OnKncCiRequest">
            <summary>
            KNC: Callbacks from CI
            </summary>
            <param name="slot"></param>
            <param name="bBlind"></param>
            <param name="nAnswerLength"></param>
            <param name="lpszText"></param>
            <param name="pParam"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCAPI.OnKncCiCloseDisplay">
            <summary>
            KNC: Callbacks from CI
            </summary>
            <param name="slot"></param>
            <param name="nDelay"></param>
            <param name="pParam"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.ConexantBDA">
            <summary>
            Handles the DiSEqC interface for Conexant BDA driver devices
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.ConexantBDA.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.ConexantBDA"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.ConexantBDA.SendDiseqCommand(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            Sends the diseq command.
            </summary>
            <param name="channel">The channel.</param>
            <param name="parameters">The channels scanning parameters.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.ConexantBDA.SendDiSEqCCommand(System.Byte[])">
            <summary>
            Sends the DiSEqC command.
            </summary>
            <param name="diSEqC">The DiSEqC command.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.ConexantBDA.ReadDiSEqCCommand(System.Byte[]@)">
            <summary>
            gets the diseqc reply
            </summary>
            <param name="reply">The reply.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.ConexantBDA.Dispose">
            <summary>
            Disposes COM task memory resources
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.ConexantBDA.IsConexant">
            <summary>
            Gets a value indicating whether this instance is a Conexant based card.
            </summary>
            <value>
            	<c>true</c> if this instance is Conexant; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner">
            <summary>
            Interface to the epg grabber com object
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.GrabEPG">
            <summary>
            Start grabbing the EPG.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.IsEPGReady(System.Boolean@)">
            <summary>
            Determines whether EPG has been received
            </summary>
            <param name="yesNo">if set to <c>true</c> then epg is ready.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.GetEPGChannelCount(System.UInt32@)">
            <summary>
            Gets the nummer of channels for which epg has been received
            </summary>
            <param name="channelCount">The channel count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.GetEPGEventCount(System.UInt32,System.UInt32@)">
            <summary>
            Gets the number of epg events for a channel
            </summary>
            <param name="channel">The channel.</param>
            <param name="eventCount">The event count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.GetEPGChannel(System.UInt32,System.UInt16@,System.UInt16@,System.UInt16@)">
            <summary>
            Gets the EPG channel details.
            </summary>
            <param name="channel">The channel.</param>
            <param name="networkId">The network id.</param>
            <param name="transportid">The transportid.</param>
            <param name="service_id">The service_id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.GetEPGEvent(System.UInt32,System.UInt32,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.IntPtr@,System.Int32@,System.IntPtr@)">
            <summary>
            Gets the EPG event details.
            </summary>
            <param name="channel">The channel.</param>
            <param name="eventid">The eventid.</param>
            <param name="languageCount">The language count.</param>
            <param name="date">The date.</param>
            <param name="time">The time.</param>
            <param name="duration">The duration.</param>
            <param name="genre">The genre.</param>
            <param name="starRating">The star rating</param>
            <param name="classification">The classification</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.GetEPGLanguage(System.UInt32,System.UInt32,System.UInt32,System.UInt32@,System.IntPtr@,System.IntPtr@,System.Int32@)">
            <summary>
            Gets the EPG language.
            </summary>
            <param name="channel">The channel.</param>
            <param name="eventid">The eventid.</param>
            <param name="languageIndex">Index of the language.</param>
            <param name="language">The language.</param>
            <param name="eventText">The event text.</param>
            <param name="eventDescription">The event description.</param>
            <param name="parentalRating">The parental rating</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.GrabMHW">
            <summary>
            Start grabbing MGW
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.IsMHWReady(System.Boolean@)">
            <summary>
            Determines whether MHW has been received or not
            </summary>
            <param name="yesNo">if MHW has been received then <c>true</c> .</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.GetMHWTitleCount(System.UInt32@)">
            <summary>
            Gets the number of MHW titles received.
            </summary>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.GetMHWTitle(System.UInt32,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.Byte@,System.UInt32@,System.UInt32@,System.UInt32@,System.IntPtr@,System.IntPtr@)">
            <summary>
            Gets the details for a MHW title.
            </summary>
            <param name="program">The program.</param>
            <param name="id">The id.</param>
            <param name="transportId">The transport id.</param>
            <param name="networkId">The network id.</param>
            <param name="channelId">The channel id.</param>
            <param name="programId">The program id.</param>
            <param name="themeId">The theme id.</param>
            <param name="PPV">The PPV.</param>
            <param name="Summaries">The summaries.</param>
            <param name="duration">The duration.</param>
            <param name="dateStart">The date start.</param>
            <param name="timeStart">The time start.</param>
            <param name="title">The title.</param>
            <param name="programName">Name of the program.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.GetMHWChannel(System.UInt32,System.UInt32@,System.UInt32@,System.UInt32@,System.IntPtr@)">
            <summary>
            Gets the details for a MHW channel.
            </summary>
            <param name="channelNr">The channel nr.</param>
            <param name="channelId">The channel id.</param>
            <param name="networkId">The network id.</param>
            <param name="transportId">The transport id.</param>
            <param name="channelName">Name of the channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.GetMHWSummary(System.UInt32,System.IntPtr@)">
            <summary>
            Gets the MHW summary.
            </summary>
            <param name="programId">The program id.</param>
            <param name="summary">The summary.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.GetMHWTheme(System.UInt32,System.IntPtr@)">
            <summary>
            Gets the MHW theme.
            </summary>
            <param name="themeId">The theme id.</param>
            <param name="theme">The theme.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.Reset">
            <summary>
            Resets this MHW grabber.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.AbortGrabbing">
            <summary>
            Aborts grabbing and calls the callback function
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsEpgScanner.SetCallBack(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IEpgCallback)">
            <summary>
            Sets the call back which will be called when MHW has been received
            </summary>
            <param name="callback">The callback.</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ListManagementType">
            <summary>
            List management type
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ListManagementType.More">
            <summary>
            More
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ListManagementType.First">
            <summary>
            First
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ListManagementType.Last">
            <summary>
            Last
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ListManagementType.Only">
            <summary>
            Only
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ListManagementType.Add">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ListManagementType.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CommandIdType">
            <summary>
            Command Id Type enum
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CommandIdType.Descrambling">
            <summary>
            Descrambling
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CommandIdType.MMI">
            <summary>
            MMI
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CommandIdType.Query">
            <summary>
            Query
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CommandIdType.NotSelected">
            <summary>
            Not selected
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ECMEMM">
            <summary>
            ECMEMM
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ECMEMM.Number">
            <summary>
            ECMEMM Number
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ECMEMM.Pid">
            <summary>
            Pid
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ECMEMM.CaId">
            <summary>
            CA Id
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ECMEMM.ProviderId">
            <summary>
            Provider id
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPmtEs">
            <summary>
             CA PMT Es class
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPmtEs.StreamType">
            <summary>
            CA PMT ES Stream type
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPmtEs.reserved2">
            <summary>
            CA PMT ES reserved
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPmtEs.ElementaryStreamPID">
            <summary>
            CA PMT ES elementary stream PID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPmtEs.reserved3">
            <summary>
            CA PMT ES reserved3
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPmtEs.ElementaryStreamInfoLength">
            <summary>
            CA PMT ES elementary stream info length
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPmtEs.CommandId">
            <summary>
            CA PMT ES command id
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPmtEs.Descriptors">
            <summary>
            CA PMT ES descriptors
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPmtEs.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT">
            <summary>
             CA PMT class
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.CAPmt_Listmanagement">
            <summary>
            CA PMT listmanagement
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.ProgramNumber">
            <summary>
            CA PMT program number
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.reserved0">
            <summary>
            CA PMT reserved 0
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.VersionNumber">
            <summary>
            CA PMT version number
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.CurrentNextIndicator">
            <summary>
            CA PMT current next indicator
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.reserved1">
            <summary>
            CA PMT reserved 1
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.ProgramInfoLength">
            <summary>
            CA PMT  program info length
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.CommandId">
            <summary>
            CA PMT  command id
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.Descriptors">
            <summary>
            CA PMT descriptors
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.CaPmtEsList">
            <summary>
            CA PMT  es list
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.DescriptorsCat">
            <summary>
            CA PMT descriptors cat
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.#ctor">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.GetEMM">
            <summary>
            Returns the EMM's found in the CAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.Parse(System.Byte[],System.Collections.Generic.IList{Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ECMEMM})">
            <summary>
            Returns the ECM's found in the PMT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.GetECM">
            <summary>
             Get ECM
            </summary>
            <returns>ECM</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.CaPmtStruct(System.Int32@)">
            <summary>
            Cas the PMT struct.
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.CaPMT.Dump">
            <summary>
            Dumps ca pmt to the log file.
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCDeviceLookup">
            <summary>
            Enumerates all KNC cards, sorts by DevicePath and returns matching index.
            Needed for extendes IKNC interface which passes the card index to tswriter
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.KNC.KNCDeviceLookup.GetDeviceIndex(Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase)">
            <summary>
            Returns DeviceIndex of KNC1 card
            </summary>
            <param name="TvCard">TvCard object</param>
            <returns>The device index</returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR">
            <summary>
            Class for handling supported capture cards, including the Hauppauge HD PVR and Colossus.
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR._videoPinMap">
            <summary>
            The mapping of the video input sources to their pin index
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR._videoPinRelatedAudioMap">
            <summary>
            The mapping of the video input sources to their related audio pin index
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR._audioPinMap">
            <summary>
            The mapping of the audio input sources to their pin index
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.#ctor(DirectShowLib.DsDevice)">
            <summary>
             Constructor for a capture card device.
            </summary>
            <param name="device">A crossbar device for a supported capture card.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.CanTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Method to check if card can tune to the channel specified
            </summary>
            <returns>true if card can tune to the channel otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.PauseGraph">
            <summary>
            Stops the current graph
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.StopGraph">
            <summary>
            Stops the current graph
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.StartLinkageScanner(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.BaseChannelLinkageScanner)">
            <summary>
            Starts scanning for linkage info
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.ResetLinkageScanner">
            <summary>
            Stops/Resets the linkage scanner
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.GrabEpg(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.BaseEpgGrabber)">
            <summary>
            Grabs the epg.
            </summary>
            <param name="callback">The callback which gets called when epg is received or canceled.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.GrabEpg">
            <summary>
            Start grabbing the epg while timeshifting
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.AbortGrabbing">
            <summary>
            Aborts grabbing the epg. This also triggers the OnEpgReceived callback.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.Scan(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Scans the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id.</param>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.Tune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id.</param>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.GetNewSubChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Allocates a new instance of HDPVRChannel which handles the new subchannel
            </summary>
            <returns>handle for to the subchannel</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.ReloadCardConfiguration">
            <summary>
            Reloads the quality control configuration
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.UpdateSignalQuality(System.Boolean)">
            <summary>
            A derrived class should update the signal informations of the tv cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.UpdateSignalQuality">
            <summary>
            When the tuner is locked onto a signal this property will return true
            otherwise false
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.BuildGraph">
            <summary>
            Builds the directshow graph for this analog tvcard
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.RunGraph(System.Int32)">
            <summary>
            Method which starts the graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.CheckCapabilities">
            <summary>
            Checks the capabilities
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.OnScanning">
            <summary>
            A derrived class should activate / deactivate the scanning
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.UpdateEpgGrabber(System.Boolean)">
            <summary>
            A derrived class should activate / deactivate the epg grabber
            </summary>
            <param name="value">Mode</param>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.ChannelLinkages">
            <summary>
            Returns the channel linkages grabbed
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.Epg">
            <summary>
            returns a list of all epg data for each channel found.
            </summary>
            <value>The epg.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.ScanningInterface">
            <summary>
            returns the ITVScanning interface used for scanning channels
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.Quality">
            <summary>
            Get/Set the quality
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.SupportsQualityControl">
            <summary>
            Property which returns true if card supports quality control
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR.CardId">
            <summary>
            Gets or sets the unique id of this card
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.VideoEncoderControl">
            <summary>
            Class which implements control of quality trough the use of the IVideoEncoder interface
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.VideoEncoderControl._videoEncoder">
            <summary>
            Instance of the encoder that supports the IVideoEncoder
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.VideoEncoderControl.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.Configuration,DirectShowLib.IVideoEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.VideoEncoderControl"/> class.
            </summary>
            <param name="configuration">The encoder settings to use.</param>
            <param name="videoEncoder">The IVideoEncoder interface to the filter that must be used to control the quality.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.VideoEncoderControl.IsSupported(System.Guid)">
            <summary>
            Checks if the encoder supports the given GUID
            </summary>
            <param name="guid">GUID</param>
            <returns>HR return value</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.VideoEncoderControl.SetValue(System.Guid,System.Object@)">
            <summary>
            Sets the value for the give GUID
            </summary>
            <param name="guid">GUID</param>
            <param name="newBitRateModeO">Bit Rate Mode object</param>
            <returns>HR result</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.VideoEncoderControl.GetParameterRange(System.Guid,System.Object@,System.Object@,System.Object@)">
            <summary>
            Gets the parameter range for the given GUID
            </summary>
            <param name="guid">GUID</param>
            <param name="valueMin">minimum out value</param>
            <param name="valueMax">maximum out value</param>
            <param name="steppingDelta">stepping delta out value</param>
            <returns>HR result</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.VideoEncoderControl.GetDefaultValue(System.Guid,System.Object@)">
            <summary>
            Returns the Default value for the given GUID
            </summary>
            <param name="guid">GUID</param>
            <param name="qualityObject">Quality out value</param>
            <returns>HR result object</returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift">
            <summary>
            interface to the timeshift com object
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.SetTimeShiftingFileNameW(System.String)">
            <summary>
             Sets the timeshift filename
            </summary>
            <param name="fileName">Filename</param>
            <returns>Error code</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.Start">
            <summary>
            Starts timeshifting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.Stop">
            <summary>
            Stops timeshifting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.Reset">
            <summary>
            Resets the timeshifting .
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.GetBufferSize(System.UInt32@)">
            <summary>
            Gets the size of the buffer.
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.GetNumbFilesAdded(System.UInt16@)">
            <summary>
            Gets the number of timeshifting files added.
            </summary>
            <param name="numbAdd">The number of timeshifting files added.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.GetNumbFilesRemoved(System.UInt16@)">
            <summary>
            Gets the number of timeshifting  removed.
            </summary>
            <param name="numbRem">The number of timeshifting  removed.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.GetCurrentFileId(System.UInt16@)">
            <summary>
            Gets the current file id.
            </summary>
            <param name="fileID">The file ID.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.GetMinTSFiles(System.UInt16@)">
            <summary>
            Gets the mininium number of .TS files.
            </summary>
            <param name="minFiles">The mininium number of .TS files.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.SetMinTSFiles(System.UInt16)">
            <summary>
            Sets the mininium number of .TS files.
            </summary>
            <param name="minFiles">The mininium number of .TS files.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.GetMaxTSFiles(System.UInt16@)">
            <summary>
            Gets the max number of .TS files.
            </summary>
            <param name="maxFiles">The max number of .TS files</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.SetMaxTSFiles(System.UInt16)">
            <summary>
            Sets the max number of .TS files..
            </summary>
            <param name="maxFiles">the max number of .TS files.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.GetMaxTSFileSize(System.Int64@)">
            <summary>
            Gets the maxium filesize for each .ts file
            </summary>
            <param name="maxSize">the maxium filesize for each .ts file.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.SetMaxTSFileSize(System.Int64)">
            <summary>
            Sets the maxium filesize for each .ts file
            </summary>
            <param name="maxSize">the maxium filesize for each .ts file</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.GetChunkReserve(System.Int64@)">
            <summary>
            Gets the chunk reserve for each .ts file.
            </summary>
            <param name="chunkSize">Size of the chunk.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.SetChunkReserve(System.Int64)">
            <summary>
            Sets the chunk reserve for each .ts file.
            </summary>
            <param name="chunkSize">Size of the chunk.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.GetFileBufferSize(System.Int64@)">
            <summary>
            Gets the size of the file buffer.
            </summary>
            <param name="lpllsize">The lpllsize.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.SetPmtPid(System.Int32,System.Int32)">
            <summary>
            Sets the PMT pid.
            </summary>
            <param name="pmtPid">The PMT pid.</param>
            <param name="serviceId">The service id</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTimeShift.Pause(System.Byte)">
            <summary>
            pauses or continues writing to the timeshifting file.
            </summary>
            <param name="onoff">if true then pause, else run.</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard">
            <summary>
            Dummy card for radio web streams
            Timeshifting is not supported, the stream is played back on the client
            Recording is supported
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard"/> class.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.CheckThreadId">
            <summary>
            Checks the thread id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.StartRecord(System.Boolean,System.String)">
            <summary>
            Starts recording
            </summary>
            <param name="transportStream">Recording type (content or reference)</param>
            <param name="fileName">filename to which to recording should be saved</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.StopRecord">
            <summary>
            Stop recording
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.StartLinkageScanner(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.BaseChannelLinkageScanner)">
            <summary>
            Starts scanning for linkage info
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.ResetLinkageScanner">
            <summary>
            Stops/Resets the linkage scanner
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.AbortGrabbing">
            <summary>
            Aborts grabbing the epg
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.CanTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Method to check if card can tune to the channel specified
            </summary>
            <returns>true if card can tune to the channel otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.Tune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.Scan(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Scans the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.FreeSubChannel(System.Int32)">
            <summary>
            Frees the sub channel.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.GetSubChannel(System.Int32)">
            <summary>
            Gets the sub channel.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.GetFirstSubChannel">
            <summary>
            Gets the first sub channel.
            </summary>    
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.StopGraph">
            <summary>
            Stops the current graph
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.PauseGraph">
            <summary>
            Pause the current graph
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.GrabEpg(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.BaseEpgGrabber)">
            <summary>
            Grabs the epg.
            </summary>
            <param name="callback">The callback which gets called when epg is received or canceled.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.GrabEpg">
            <summary>
            Start grabbing the epg while timeshifting
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.ResetSignalUpdate">
            <summary>
            Updates the signal state for a card.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.ReloadCardConfiguration">
            <summary>
            Reloads the card configuration
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.CardPresent">
            <summary>
            returns true if card is currently present
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.HasCA">
            <summary>
            Does the card have a CA module.
            </summary>
            <value>The number of channels decrypting.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.Parameters">
            <summary>
            Gets or sets the timeout parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.ChannelLinkages">
            <summary>
            Returns the channel linkages grabbed
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.ScanningInterface">
            <summary>
            returns the ITVScanning interface used for scanning channels
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.EpgInterface">
            <summary>
            returns the ITVEPG interface used for grabbing the epg
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.Epg">
            <summary>
            Returns the EPG grabbed or null if epg grabbing is still busy
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.Quality">
            <summary>
            Get/Set the quality
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.SupportsQualityControl">
            <summary>
            Property which returns true if card supports quality control
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.NumberOfChannelsDecrypting">
            <summary>
            Gets the number of channels the card is currently decrypting.
            </summary>
            <value>The number of channels decrypting.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.SupportsSubChannels">
            <summary>
            Gets a value indicating whether card supports subchannels
            </summary>
            <value><c>true</c> if card supports sub channels; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.SubChannels">
            <summary>
            Gets the sub channels.
            </summary>
            <value>The sub channels.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.Name">
            <summary>
            Gets/sets the card name
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.CardType">
            <summary>
            Gets/sets the card cardType
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.SupportsPauseGraph">
            <summary>
            Gets wether or not card supports pausing the graph.
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.IsHybrid">
            <summary>
            Returns if the tuner belongs to a hybrid card
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.IsTunerLocked">
            <summary>
            When the tuner is locked onto a signal this property will return true
            otherwise false
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.SignalQuality">
            <summary>
            returns the signal quality
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.SignalLevel">
            <summary>
            returns the signal level
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.DevicePath">
            <summary>
            Gets/sets the card device
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.TimeShiftFileName">
            <summary>
            gets the current filename used for timeshifting
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.IsEpgGrabbing">
            <summary>
            returns true if card is currently grabbing the epg
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.IsTimeshiftingTransportStream">
            <summary>
            returns true if we timeshift in transport stream mode
            false we timeshift in program stream mode
            </summary>
            <value>true for transport stream, false for program stream.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.IsRecordingTransportStream">
            <summary>
            returns true if we record in transport stream mode
            false we record in program stream mode
            </summary>
            <value>true for transport stream, false for program stream.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.IsScanning">
            <summary>
            returns true if card is currently scanning
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.MaxChannel">
            <summary>
            returns the max. channel numbers for RadioWebStreamCards
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.MinChannel">
            <summary>
            returns the min. channel numbers for RadioWebStreamCards
            </summary>
            <value>The min channel.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.StartOfTimeShift">
            <summary>
            returns the date/time when timeshifting has been started for the card specified
            </summary>
            <returns>DateTime containg the date/time when timeshifting was started</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.RecordingStarted">
            <summary>
            returns the date/time when recording has been started for the card specified
            </summary>
            <returns>DateTime containg the date/time when recording was started</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.AvailableAudioStreams">
            <summary>
            returns the list of available audio streams
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.CurrentAudioStream">
            <summary>
            get/set the current selected audio stream
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.IsReceivingAudioVideo">
            <summary>
            Returns true when unscrambled audio/video is received otherwise false
            </summary>
            <returns>true of false</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.CamType">
            <summary>
            Gets or sets the type of the cam.
            </summary>
            <value>The type of the cam.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.RadioWebStream.RadioWebStreamCard.DiSEqCMotor">
            <summary>
            Gets the interface for controlling the diseqc motor
            </summary>
            <value>Theinterface for controlling the diseqc motor.</value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.EncodersInUse">
            <summary>
            This is a class which is used to remember which
            software encoders are currently in use and how many
            instances of each have been instantiated.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.EncodersInUse.#ctor">
            <summary>
            ctor - private since this is a singleton class
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.EncodersInUse.Add(DirectShowLib.DsDevice,Mediaportal.TV.Server.TVDatabase.Entities.SoftwareEncoder)">
            <summary>
            call this function before using an encoder to check
            whether it is possible to use it
            </summary>
            <param name="device">the encoder device</param>
            <param name="dbEncoder">the preferences for dealing with the encoder</param>
            <returns><c>true</c> if the encoder can be used, otherwise <c>false</c></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.EncodersInUse.Remove(DirectShowLib.DsDevice)">
            <summary>
            use this method to indicate that the device specified no longer in use
            </summary>
            <param name="device">device</param>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.EncodersInUse.Instance">
            <summary>
            static method to access this class
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ProfRed.ProfRed">
            <summary>
            Handles the DiSEqC interface for ProfRed DVB-S/S2 devices
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ProfRed.ProfRed.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ProfRed.ProfRed"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ProfRed.ProfRed.SendDiseqCommand(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            Sends the diseq command.
            </summary>
            <param name="channel">The channel.</param>
            <param name="parameters">The channels scanning parameters.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ProfRed.ProfRed.SendDiSEqCCommand(System.Byte[])">
            <summary>
            Sends the DiSEqC command.
            </summary>
            <param name="diSEqC">The DiSEqC command.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ProfRed.ProfRed.ReadDiSEqCCommand(System.Byte[]@)">
            <summary>
            gets the diseqc reply
            </summary>
            <param name="reply">The reply.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ProfRed.ProfRed.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>    
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ProfRed.ProfRed.IsProfRed">
            <summary>
            Gets a value indicating whether this instance is a profred based profred card.
            </summary>
            <value>
            	<c>true</c> if this instance is profred; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio">
            <summary>
            The TvAudio component of the graph
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio._filterTvAudioTuner">
            <summary>
            The TvAudio filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio._tvAudioTunerInterface">
            <summary>
            The TvAudio interface for changing the audio stream
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio._audioDevice">
            <summary>
            The TvAudio device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio.mode">
            <summary>
            The mode of the TvAudio component in the graph
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio.streams">
            <summary>
            List of available streams
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio.Dispose">
            <summary>
            Disposes the TvAudio component
            </summary>    
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio.CreateFilterInstance(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar)">
            <summary>
            Adds the tv audio tuner to the graph and connects it to the crossbar.
            At the end of this method the graph looks like:
            [          ] ------------------------->[           ]
            [ tvtuner  ]                           [ crossbar  ]
            [          ]----[            ]-------->[           ]
                            [ tvaudio    ]
                            [   tuner    ]
            </summary>
            <param name="crossbar">The crossbar componen</param>
            <param name="tuner">The tuner component</param>
            <param name="graph">The stored graph</param>
            <param name="graphBuilder">The graphBuilder</param>
            <returns>true, if the graph building was successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio.CreateConfigurationBasedFilterInstance(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar,DirectShowLib.IFilterGraph2)">
            <summary>
            Creates the filter based on the configuration file
            </summary>
            <param name="crossbar">The crossbar componen</param>
            <param name="tuner">The tuner component</param>
            <param name="graph">The stored graph</param>
            <param name="graphBuilder">The graphBuilder</param>
            <returns>true, if the graph building was successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio.CreateAutomaticFilterInstance(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar,DirectShowLib.IFilterGraph2)">
            <summary>
            Creates the filter by trying to detect it
            </summary>
            <param name="crossbar">The crossbar componen</param>
            <param name="tuner">The tuner component</param>
            <param name="graph">The stored graph</param>
            <param name="graphBuilder">The graphBuilder</param>
            <returns>true, if the graph building was successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio.CheckCapabilities(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph)">
            <summary>
            Detects the capabilities of the tv audio device
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio.GetAvailableAudioStreams">
            <summary>
            Gets the available audio streams
            </summary>
            <returns>List of available audio streams</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio.CurrentAudioStream">
            <summary>
            get/set the current selected audio stream
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer">
            <summary>
             Teletexst page renderer
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.#ctor">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Render(System.Drawing.Graphics,System.Byte,System.Int32,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Render a single position in the bitmap
            </summary>
            <param name="graph">Graphics</param>
            <param name="chr">Character</param>
            <param name="attrib">Attributes</param>
            <param name="x">x position</param>
            <param name="y">y position</param>
            <param name="w">width of the font</param>
            <param name="h">height of the font</param>
            <param name="txtLanguage">Teletext language</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.GetColor(System.Int32)">
            <summary>
            Converts the color of the teletext informations to a system color
            </summary>
            <param name="colorNumber">Number of the teletext color, referring to the enumeration TextColors </param>
            <returns>Corresponding System Color, or black if the value is not defined</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.IsDecimalPage(System.Int32)">
            <summary>
            Checks if is a valid page to be displayed
            </summary>
            <param name="i">Pagenumber to check</param>
            <returns>True, if page should be displayed</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.RenderPage(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Renders a teletext page to a bitmap
            </summary>
            <param name="byPage">Teletext page data</param>
            <param name="mPage">Pagenumber</param>
            <param name="sPage">Subpagenumber</param>
            <returns>Rendered teletext page as bitmap</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Clear">
            <summary>
            Clear the bitmap
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Width">
            <summary>
            Width of the bitmap
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Height">
            <summary>
            Height of the bitmap
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.HiddenMode">
            <summary>
            Draw also hidden information
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.TransparentMode">
            <summary>
            Draw the background transparent, only allowed in combination with fullscreen
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.FullscreenMode">
            <summary>
            Draw for windowed mode or fullscreen mode
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.PageSelectText">
            <summary>
            This text describe the selected page.
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.PercentageOfMaximumHeight">
            <summary>
            Gets/Sets  the percentage of the maximum height for the font size
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.TextColors">
            <summary>
            Enumeration of all availabel colors in teletext
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes">
            <summary>
            Enumeration of all possible attributes for a position in teletext
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.AlphaBlack">
            <summary>
            Alpha black color
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.AlphaRed">
            <summary>
            Alpha red color
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.AlphaGreen">
            <summary>
            Alpha green color
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.AlphaYellow">
            <summary>
            Alpha yellow color
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.AlphaBlue">
            <summary>
            Alpha blue color
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.AlphaMagenta">
            <summary>
            Alpha magenta color
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.AlphaCyan">
            <summary>
            Alpha cyan color
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.AlphaWhite">
            <summary>
            Alpha white color
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.Flash">
            <summary>
            Flash  attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.Steady">
            <summary>
            Steady attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.EndBox">
            <summary>
            Endbox attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.StartBox">
            <summary>
            Startbox attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.NormalSize">
            <summary>
            Normal size attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.DoubleHeight">
            <summary>
            Double height attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.DoubleWidth">
            <summary>
            Double width attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.DoubleSize">
            <summary>
            Double size attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.MosaicBlack">
            <summary>
            Mosaic black attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.MosaicRed">
            <summary>
            Mosaic red attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.MosaicGreen">
            <summary>
            Mosaic green attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.MosaicYellow">
            <summary>
            Mosaic yellow attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.MosaicBlue">
            <summary>
            Mosaic blue attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.MosaicMagenta">
            <summary>
            Mosaic magenta attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.MosaicCyan">
            <summary>
            Mosaic cyan attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.MosaicWhite">
            <summary>
            Mosaic white attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.Conceal">
            <summary>
            Conceal attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.ContiguousMosaic">
            <summary>
            Contigous mosaic attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.SeparatedMosaic">
            <summary>
            Separated mosaic attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.Esc">
            <summary>
            Esc attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.BlackBackground">
            <summary>
            Black bacground attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.NewBackground">
            <summary>
            Nw background attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.HoldMosaic">
            <summary>
            Hold mosaic attribute
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageRenderer.Attributes.ReleaseMosaic">
            <summary>
            Release mosaic attribute
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelLinkageScanner">
            <summary>
            Interface to the channel linkage scanner com object
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelLinkageScanner.Start">
            <summary>
            Start scanning for channel links.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelLinkageScanner.Reset">
            <summary>
            Resets the scanner. Also can be used to abort scanning.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelLinkageScanner.GetChannelCount(System.UInt32@)">
            <summary>
            Gets the nummer of channels for which linked channels have been received
            </summary>
            <param name="channelCount">The channel count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelLinkageScanner.GetChannel(System.UInt32,System.UInt16@,System.UInt16@,System.UInt16@)">
            <summary>
            Gets the channel details.
            </summary>
            <param name="channelIndex">The channel.</param>
            <param name="network_id">The network id.</param>
            <param name="transport_id">The transportid.</param>
            <param name="service_id">The service_id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelLinkageScanner.GetLinkedChannelsCount(System.UInt32,System.UInt32@)">
            <summary>
            Gets the number of linked channels for a channel
            </summary>
            <param name="channelIndex">The channel.</param>
            <param name="linkedChannelsCount">The link count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelLinkageScanner.GetLinkedChannel(System.UInt32,System.UInt32,System.UInt16@,System.UInt16@,System.UInt16@,System.IntPtr@)">
            <summary>
            Gets the linked channel details.
            </summary>
            <param name="channelIndex">The channel.</param>
            <param name="linkIndex">The linked channel id.</param>
            <param name="network_id">The network id.</param>
            <param name="transport_id">The transportid.</param>
            <param name="service_id">The service_id.</param>
            <param name="name">The channel name</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannelLinkageScanner.SetCallBack(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannelLinkageCallback)">
            <summary>
            Sets the call back which will be called when links have been received
            </summary>
            <param name="callback">The callback.</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo">
            <summary>
            class holding all information about a channel including pids
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.program_number">
            <summary>
            program number (service id)
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.reserved">
            <summary>
            reserved
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.network_pmt_PID">
            <summary>
            pid of the PMT
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.transportStreamID">
            <summary>
            transport stream id
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.service_provider_name">
            <summary>
            name of the provider
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.service_name">
            <summary>
            name of the service
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.serviceType">
            <summary>
            service type
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.eitSchedule">
            <summary>
            eit schedule flag
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.eitPreFollow">
            <summary>
            eit prefollow flag
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.scrambled">
            <summary>
            indicates if channel is scrambled
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.freq">
            <summary>
            carrier frequency
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.symb">
            <summary>
            symbol rate
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.fec">
            <summary>
            fec
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.diseqc">
            <summary>
            diseqc type
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.lnb01">
            <summary>
            LNB low oscilator frequency
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.lnbkhz">
            <summary>
            LNB frequency
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.pol">
            <summary>
            Polarisation
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.pcrPid">
            <summary>
            pid of the PCR
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.pids">
            <summary>
            ArrayList of PidInfo containing all pids
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.serviceID">
            <summary>
            Service Id
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.networkID">
            <summary>
            Network Id
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.pidCache">
            <summary>
            pidcache?
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.minorChannel">
            <summary>
            Atsc minor channel number
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.majorChannel">
            <summary>
            atsc major channel number
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.modulation">
            <summary>
            Modulation
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.caPMT">
            <summary>
            CaPmt
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.LCN">
            <summary>
            Logical channel number
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.videoPid">
            <summary>
            Video PID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.audioPid">
            <summary>
            Audio PID
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo"/> class.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.AddPid(Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo)">
            <summary>
            Adds a pid to the pidtable
            </summary>
            <param name="info">The info.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.DecodePmt(System.Byte[])">
            <summary>
            Decodes the PMT supplied in buf and fills the pid table with all pids found
            </summary>
            <param name="buf">The buf.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo.DecodeCat(System.Byte[],System.Int32)">
            <summary>
            Decodes the conditional access table
            </summary>
            <param name="cat">The conditional access table.</param>
            <param name="catLen">The length of the conditional access table.</param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii">
            <summary>
            TeVii hw control class
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.GetAPIVersion">
            <summary>
            get version of SDK API
            This is optional.
            Can be used to check if API is not lower than originally used.
            </summary>
            <returns>API Version</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.FindDevices">
            <summary>
            Enumerate devices in system.
            This function should be called before any other.
            Only first call will really enumerate. All subsequent 
            calls will just return number of previously found devices.
            </summary>
            <returns>number of found devices</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.GetDeviceName(System.Int32)">
            <summary>
            Get name of device
            </summary>
            <param name="idx">idx - device index (0 &lt;= idx &lt; FindDevices())</param>
            <returns>string with device name or NULL (on failure). Do not modify or free memory used by this string!</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.GetDevicePath(System.Int32)">
            <summary>
            Get device path
            </summary>
            <param name="idx">idx - device index (0 lt;= idx &lt; FindDevices())</param>
            <returns>string with device path or NULL (on failure). Do not modify or free memory used by this string!</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.OpenDevice(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Open device. Application may open several devices simultaneously. 
            They will be distinguished by idx parameter.
            </summary>
            <param name="idx">idx - device index (0 &lt;= idx &lt; FindDevices())</param>
            <param name="func">func - capture function which will receive stream.</param>
            <param name="lParam">lParam - application defined parameter which will be passed to capture function</param>
            <returns>non-zero on success</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.CloseDevice(System.Int32)">
            <summary>
            Close Device
            </summary>
            <param name="idx">idx - device index of previously opened device (0 &lt;= idx &lt; FindDevices())</param>
            <returns> non-zero on success</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.TuneTransponder(System.Int32,System.Int32,System.Int32,System.Int32,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.TPolarization,System.Int32,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.TMOD,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.TFEC)">
            <summary>
            Tune to transponder
            </summary>
            <param name="idx">idx - device index of previously opened device (0 &lt;= idx &lt; FindDevices())</param>
            <param name="Freq">Freq - frequency in kHz, for example: 12450000 (12.45 GHz)</param>
            <param name="SymbRate">SymbRate - Symbol rate in sps, for example: 27500000 (27500 Ksps)</param>
            <param name="LOF"></param>
            <param name="Pol">Pol - polarization, see TPolarization above</param>
            <param name="F22KHz">F22KHz - 22KHz tone on/off</param>
            <param name="MOD">MOD - modulation, see TMOD above. Note: it's better to avoid use AUTO for DVBS2 signal, otherwise locking time will be long</param>
            <param name="FEC">FEC - see TFEC above. Note: it's better to avoid use AUTO for DVBS2 signal, otherwise locking time will be long</param>
            <returns>non-zero if signal is locked</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.GetSignalStatus(System.Int32,System.Boolean@,System.Int32@,System.Int32@)">
            <summary>
            Get signal status
            </summary>
            <param name="idx">idx - device index of previously opened device (0 &lt;= idx &lt; FindDevices())</param>
            <param name="IsLocked">isLocked - non-zero if signal is present</param>
            <param name="Strength">Strength - 0..100 signal strength</param>
            <param name="Quality">Quality - 0..100 signal quality</param>
            <returns>non-zero on success</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.SendDiSEqC(System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Send DiSEqC message
            </summary>
            <param name="idx">idx - device index of previously opened device (0 &lt;= idx &lt; FindDevices())</param>
            <param name="Data"></param>
            <param name="Len">Data,Len - buffer with DiSEqC command</param>
            <param name="Repeats">Repeats - repeat DiSEqC message n times. 0 means send one time</param>
            <param name="Flg">Flg - non-zero means replace first byte (0xE0) of DiSEqC message with 0xE1 on second and following repeats.</param>
            <returns>non-zero on success</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.SetRemoteControl(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Set the remote control
            </summary>
            <param name="idx">idx - device index of previously opened device (0 &lt;= idx &lt; FindDevices())</param>
            <param name="lpCallback">lpCallback - application defined procedure to receive keys. NULL to disable RC.</param>
            <param name="lParam">lParam - application defined parameter which will be passed to callback function</param>
            <returns>non-zero on success</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii"/> class.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.GetUnmanagedString(System.IntPtr)">
            <summary>
            Helper function to get managed string from return value
            </summary>
            <param name="ConstCharPtr">IntPtr to unmanaged string</param>
            <returns>String</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.Close">
            <summary>
            Close HW 
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>   
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.Init(DirectShowLib.IBaseFilter)">
            <summary>
            Init Hardware Provider
            </summary>
            <param name="tunerFilter"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.CheckAndOpen">
            <summary>
            Checks for suitable hardware and opens it
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.SendPids(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBBaseChannel,System.Collections.Generic.List{System.UInt16})">
            <summary>
            Instructs the cam/ci module to use hardware filter and only send the pids listed in pids to the pc
            </summary>
            <param name="subChannel">The sub channel id</param>
            <param name="channel">The current tv/radio channel.</param>
            <param name="HwPids">The pids.</param>
            <remarks>when the pids array is empty, pid filtering is disabled and all pids are received</remarks>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.OnStopGraph">
            <summary>
            Set parameter to null when stopping the Graph.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.SetDVBS2Modulation(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            Sets the DVB s2 modulation.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="channel">The channel.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.SendDiseqCommand(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            Sends the diseq command.
            </summary>
            <param name="channel">The channel.</param>
            <param name="parameters">The scanparameters.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.SendDiSEqCCommand(System.Byte[])">
            <summary>
            Send DiSEqC Command
            </summary>
            <param name="diSEqC">byte[] with commands</param>
            <returns>true if successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.ReadDiSEqCCommand(System.Byte[]@)">
            <summary>
            Read command
            </summary>
            <param name="reply"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.SupportsTuningForChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Check if the custom tune method is supported for given channel type.
            </summary>
            <param name="channel">Channel</param>
            <returns>true if supported</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.CustomTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters)">
            <summary>
            Tunes to channel using custom tune method.
            </summary>
            <param name="channel">Channel</param>
            <param name="Parameters">ScanParameters</param>
            <returns>true if successful</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.DeviceIndex">
            <summary>
            GET or SET the DeviceIndex for/after detection 
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.Provider">
            <summary>
            Provider Name
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.DevicePath">
            <summary>
            GET or SET the DevicePath for detection 
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.Priority">
            <summary>
            Loading Priority
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.IsSupported">
            <summary>
            return true if hardware supported
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.Capabilities">
            <summary>
            Returns the Capabilities
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.TFEC">
            <summary>
            Enum for FEC values
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.TMOD">
            <summary>
            Enum for modulations
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.TeVii.TPolarization">
            <summary>
            Enum for Polarization
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.HDPVRChannel">
            <summary>
            Implementation of <see cref="T:TvLibrary.Interfaces.ITVCard"/> which handles analog tv cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.HDPVRChannel.#ctor(Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.TvCardHDPVR,System.String,System.Int32,DirectShowLib.IBaseFilter,DirectShowLib.IFilterGraph2)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.HDPVRChannel"/> class.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.HDPVRChannel.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.HDPVRChannel.OnStartTimeShifting(System.String)">
            <summary>
            Start timeshifting
            </summary>
            <param name="fileName">timeshifting filename</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.HDPVRChannel.OnStopTimeShifting">
            <summary>
            Stop timeshifting
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.HDPVRChannel.OnStartRecording(System.String)">
            <summary>
            Start recording
            </summary>
            <param name="fileName">recording filename</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.HDPVRChannel.OnStopRecording">
            <summary>
            Stop recording
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.HDPVRChannel.WaitForPMT">
            <summary>
            Wait for PMT to be found in the transport stream.
            </summary>
            <returns><c>true</c> if PMT was found, otherwise <c>false</c></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.HDPVRChannel.SendPmtToCam(System.Boolean@,System.Int32@)">
            <summary>
            Stub override to allow inherritance from TvDvbChannel.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.HDPVR.HDPVRChannel.OnPMTReceived(System.Int32)">
            <summary>
            Called when the PMT has been received.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTeletextGrabber">
            <summary>
            Interface to the Teletext grabber com object
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTeletextGrabber.Start">
            <summary>
            Starts grabbing teletext.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTeletextGrabber.Stop">
            <summary>
            Stops grabbing teletext.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTeletextGrabber.SetTeletextPid(System.Int16)">
            <summary>
            Sets the teletext pid.
            </summary>
            <param name="teletextPid">The teletext pid.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsTeletextGrabber.SetCallBack(Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITeletextCallBack)">
            <summary>
            Sets the call back which will be called when teletext has been received.
            </summary>
            <param name="callback">The callback.</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard">
            <summary>
            This class is a wrapper for all cards that are part of a hybrid card group
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard._group">
            <summary>
            Hybrid card group
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard._internalCard">
            <summary>
            Internal card
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.#ctor(Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.ITVCard)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard"/> class.
            </summary>
            <param name="group">The corresponding group for this card wrapper</param>
            <param name="internalCard">The internal card for this wrapper</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.IsCardIdActive(System.Int32)">
            <summary>
            Checks if the active card is the one with given id
            </summary>
            <param name="idCard">ID of the card to check</param>
            <returns> 
              <c>true</c> if card with the given id is active; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.CanTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Method to check if card can tune to the channel specified
            </summary>
            <param name="channel"></param>
            <returns>
            true if card can tune to the channel otherwise false
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.StopGraph">
            <summary>
            Stops the current graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.PauseGraph">
            <summary>
            Pauses the current graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.StartLinkageScanner(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.BaseChannelLinkageScanner)">
            <summary>
            Starts scanning for linkage info
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.ResetLinkageScanner">
            <summary>
            Stops/Resets the linkage scanner
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.GrabEpg(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.BaseEpgGrabber)">
            <summary>
            Grabs the epg.
            </summary>
            <param name="callback">The callback which gets called when epg is received or canceled.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.GrabEpg">
            <summary>
            Start grabbing the epg while timeshifting
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.AbortGrabbing">
            <summary>
            Aborts grabbing the epg
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.Tune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.Scan(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Scans the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.ResetSignalUpdate">
            <summary>
            Updates the signal state for a card.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.GetSubChannel(System.Int32)">
            <summary>
            Gets the sub channel.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.GetFirstSubChannel">
            <summary>
            Gets the first sub channel.
            </summary>    
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.FreeSubChannel(System.Int32)">
            <summary>
            Frees the sub channel.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.ReloadCardConfiguration">
            <summary>
            Reloads the card configuration
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.AfterTuneEvent">
            <summary>
            Sets the after tune event listener on the internal card.
            </summary>
            <value>the delegate</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.SupportsPauseGraph">
            <summary>
            Gets whether or not card supports pausing the graph.
            </summary>
            <value><c>true</c> if the card supports pausing the graph, otherwise <c>false</c></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.CardPresent">
            <summary>
            returns true if card is currently present
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.HasCA">
            <summary>
            Does the card have a CA module.
            </summary>
            <value><c>true</c> if the card supports conditional access, otherwise <c>false</c></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.NumberOfChannelsDecrypting">
            <summary>
            Gets the number of channels the card is currently decrypting.
            </summary>
            <value>The number of channels decrypting.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.Parameters">
            <summary>
            Gets or sets the timeout parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.SupportsSubChannels">
            <summary>
            Gets a value indicating whether card supports subchannels
            </summary>
            <value><c>true</c> if card supports sub channels; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.IsHybrid">
            <summary>
            Returns if the tuner belongs to a hybrid card
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.Name">
            <summary>
            Gets/sets the card name
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.DevicePath">
            <summary>
            Gets/sets the card device
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.IsEpgGrabbing">
            <summary>
            returns true if card is currently grabbing the epg
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.IsScanning">
            <summary>
            returns true if card is currently scanning
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.MinChannel">
            <summary>
            returns the min. channel number for analog cards
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.MaxChannel">
            <summary>
            returns the max. channel number for analog cards
            </summary>
            <value>The max channel.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.CamType">
            <summary>
            Gets or sets the type of the cam.
            </summary>
            <value>The type of the cam.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.CardType">
            <summary>
            Gets/sets the card type
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.DiSEqCMotor">
            <summary>
            Gets the interface for controlling the diseqc motor
            </summary>
            <value>Theinterface for controlling the diseqc motor.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.ChannelLinkages">
            <summary>
            Returns the channel linkages grabbed
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.Epg">
            <summary>
            returns a list of all epg data for each channel found.
            </summary>
            <value>The epg.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.ScanningInterface">
            <summary>
            returns the ITVScanning interface used for scanning channels
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.Quality">
            <summary>
            Get/Set the quality
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.SupportsQualityControl">
            <summary>
            Property which returns true if card supports quality control
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.IsTunerLocked">
            <summary>
            When the tuner is locked onto a signal this property will return true
            otherwise false
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.SignalQuality">
            <summary>
            returns the signal quality
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.SignalLevel">
            <summary>
            returns the signal level
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCard.SubChannels">
            <summary>
            Gets the sub channels.
            </summary>
            <value>The sub channels.</value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.GraphState">
            <summary>
            Different states of the card
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.GraphState.Idle">
            <summary>
            Card is idle
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.GraphState.Created">
            <summary>
            Card is idle, but graph is created
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.GraphState.TimeShifting">
            <summary>
            Card is timeshifting
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.GraphState.Recording">
            <summary>
            Card is recording
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule">
            <summary>
            Class to handle the WinTV CI module and interaction with closed source dll.
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper">
            <summary>
            WinTV_CI_Wrapper class
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.WinTVCI_Init(DirectShowLib.IBaseFilter,Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.Status_Callback,Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.CamInfo_Callback,Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.APDU_Callback,Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.CloseMMI_Callback)">
            <summary>
            WinTV CI init
            </summary>
            <param name="pUSBCIFilter">Filter</param>
            <param name="onStatus">Status callback</param>
            <param name="onCamInfo">Cam Info callback</param>
            <param name="onAPDU">APDU callback</param>
            <param name="onCloseMMI">Close MMI Callback</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.WinTVCI_SendPMT(DirectShowLib.IBaseFilter,System.Byte[],System.Int32)">
            <summary>
            WinTV CI Send pmt
            </summary>
            <param name="pUSBCIFilter">Filter</param>
            <param name="pPMT">The PMT</param>
            <param name="lLength">Length of the pmt</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.WinTVCI_SendAPDU(DirectShowLib.IBaseFilter,System.Byte[],System.Int32)">
            <summary>
            WinTV CI 
            </summary>
            <param name="pUSBCIFilter">Filter</param>
            <param name="pAPDU">APDU data</param>
            <param name="lLength">Length of the apdu data</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.WinTVCI_OpenMMI(DirectShowLib.IBaseFilter)">
            <summary>
            WinTV CI open the mmi
            </summary>
            <param name="pUSBCIFilter">filter</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.WinTVCI_EnableTrayIcon(DirectShowLib.IBaseFilter)">
            <summary>
            WinTV CI Enable the tray icon
            </summary>
            <param name="pUSBCIFilter">filter</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.WinTVCI_Shutdown(DirectShowLib.IBaseFilter)">
            <summary>
            Shutdowns the WinTV CI filter
            </summary>
            <param name="pUSBCIFilter">filter</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.APDU_Callback">
            <summary>
             APDU_Callback
            </summary>
            <param name="pUSBCIFilter">CI filter</param>
            <param name="APDU">APDU data</param>
            <param name="SizeOfAPDU">APDU data size</param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.Status_Callback">
            <summary>
            Status callback
            </summary>
            <param name="pUSBCIFilter">CI filter</param>
            <param name="Status">Status</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.CamInfo_Callback">
            <summary>
            Cam Info callback
            </summary>
            <param name="Context">Context</param>
            <param name="appType">AppType</param>
            <param name="appManuf">AppManuf</param>
            <param name="manufCode">Manufactor code</param>
            <param name="Info">Info</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.WinTv_CI_Wrapper.CloseMMI_Callback">
            <summary>
            Close MMI Callback
            </summary>
            <param name="pUSBCIFilter">CI filter</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
             WinTV CI control
            </summary>
            <param name="winTvUsbCIFilter">WinTV CI filter</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.OnAPDU(DirectShowLib.IBaseFilter,System.IntPtr,System.Int64)">
            <summary>
            On APDU callback
            </summary>
            <param name="pUSBCIFilter">CI filter</param>
            <param name="APDU">APDU</param>
            <param name="SizeOfAPDU">Size of APDU</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.OnStatus(DirectShowLib.IBaseFilter,System.Int64)">
            <summary>
            On Status callback
            </summary>
            <param name="pUSBCIFilter">CI filter</param>
            <param name="Status">Status</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.OnCamInfo(System.IntPtr,System.Byte,System.UInt16,System.UInt16,System.Text.StringBuilder)">
            <summary>
            On CAM Info callback
            </summary>
            <param name="Context">Context</param>
            <param name="appType">AppType</param>
            <param name="appManuf">AppManufactor</param>
            <param name="manufCode">ManufactorCode</param>
            <param name="Info">Info</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.OnMMIClosed(DirectShowLib.IBaseFilter)">
            <summary>
            On MMI Closed callback
            </summary>
            <param name="pUSBCIFilter">WinTV CI filter</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.Init">
            <summary>
            Initiliases the WinTV CI
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.SendPMT(System.Byte[],System.Int32)">
            <summary>
            Send the PMT
            </summary>
            <param name="PMT">The PMT</param>
            <param name="pmtLength">The length of the PMT</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.SendAPDU(System.Byte[],System.Int32)">
            <summary>
            Send APDU
            </summary>
            <param name="APDU">APDU data</param>
            <param name="apduLength">APDU data length</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.EnableTrayIcon">
            <summary>
            Enables the tray icon
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.Shutdown">
            <summary>
            Shut the WinTV ci down
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.SetCiMenuHandler(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.ICiMenuCallbacks)">
            <summary>
            Sets the callback handler
            </summary>
            <param name="ciMenuHandler"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.EnterCIMenu">
            <summary>
            Enters the CI menu of KNC1 card
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.CloseCIMenu">
            <summary>
            Closes the CI menu of KNC1 card
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.SelectMenu(System.Byte)">
            <summary>
            Selects a CI menu entry
            </summary>
            <param name="choice"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.SendMenuAnswer(System.Boolean,System.String)">
            <summary>
            Sends an answer after CI request
            </summary>
            <param name="Cancel"></param>
            <param name="Answer"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.Dispose">
            <summary>
            Disposing ressources
            </summary>  
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.CbOnCloseMMI">
            <summary>
            Gets the on Close MMI callback
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.CbOnCamInfo">
            <summary>
            Gets the on cam info callback
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.CbOnStatus">
            <summary>
            Gets the OnStatus callback
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.HaupPauge.WinTvCiModule.CbOnAPDU">
            <summary>
             Gets the OnAPPDU callback
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccessContext">
            <summary>
             CA Context 
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccessContext.CamType">
            <summary>
            Gets or sets the type of the cam.
            </summary>
            <value>The type of the cam.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccessContext.Channel">
            <summary>
            Gets or sets the channel.
            </summary>
            <value>The channel.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccessContext.PMT">
            <summary>
            Gets or sets the PMT.
            </summary>
            <value>The PMT.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccessContext.PMTLength">
            <summary>
            Gets or sets the length of the PMT.
            </summary>
            <value>The length of the PMT.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccessContext.AudioPid">
            <summary>
            Gets or sets the audio pid.
            </summary>
            <value>The audio pid.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccessContext.ServiceId">
            <summary>
            Gets or sets the service id.
            </summary>
            <value>The service id.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccessContext.HwPids">
            <summary>
            Gets or sets the Pid list for hardware filtering.
            </summary>
            <value>The Pid list.</value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder">
            <summary>
            class which can decode toptext
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.ConvertToHex(System.Int32)">
            <summary>
            Converts to a number to its hex value.
            </summary>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.Decode(Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache,System.Int32)">
            <summary>
            Decodes the toptext for a specific page.
            </summary>
            <param name="cache">The cache.</param>
            <param name="pageNumber">The page number.</param>
            <returns>true when decoding succeeded</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.GetPageLinks(Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.String@,System.String@)">
            <summary>
            Gets the page links for a page.
            </summary>
            <param name="cache">The cache.</param>
            <param name="pageNumber">The page number.</param>
            <param name="redPage">The red page.</param>
            <param name="greenPage">The green page.</param>
            <param name="yellowPage">The yellow page.</param>
            <param name="bluePage">The blue page.</param>
            <param name="nextGroup">The next group.</param>
            <param name="nextBlock">The next block.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.IsTopTextPage(System.Int32,System.Int32)">
            <summary>
            Determines whether the specified page is a toptext page
            </summary>
            <param name="pageNumber">The page number.</param>
            <param name="subPageNumber">The sub page number.</param>
            <returns>
            	<c>true</c> if the specified page number is a toptext page; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.DecodeBasicPage(Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache)">
            <summary>
            Decodes the basic toptext page.
            </summary>
            <param name="cache">The cache.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.DecodeMultiPage(Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache)">
            <summary>
            Decodes the toptext multi page.
            </summary>
            <param name="cache">The cache.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.DecodeAdditionalPages(Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache)">
            <summary>
            Decodes the additional toptext pages.
            </summary>
            <param name="cache">The cache.</param>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.Red">
            <summary>
            Gets the page number for the red button.
            </summary>
            <value>the page number for the red button.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.Green">
            <summary>
            Gets the page number for the Green button.
            </summary>
            <value>the page number for the Green button.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.Yellow">
            <summary>
            Gets the page number for the Yellow button.
            </summary>
            <value>the page number for the Yellow button.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.Blue">
            <summary>
            Gets the page number for the Blue button.
            </summary>
            <value>the page number for the Blue button.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.ToptextDecoder.Row24">
            <summary>
            Gets the row24.
            </summary>
            <value>The row24.</value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.FastTextDecoder">
            <summary>
            Fast text decoder
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.FastTextDecoder.Decode(System.Byte[])">
            <summary>
             Decodes the fast text data
            </summary>
            <param name="pageData">Teletext page data</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.FastTextDecoder.IsDecimalPage(System.Int32)">
            <summary>
            Determines whether the page is a decimal page or hexadecimal page
            </summary>
            <param name="i">The pagenumber</param>
            <returns>
            	<c>true</c> if the page is a decimal page; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.FastTextDecoder.Red">
            <summary>
            Gets the pagenumber for the red button.
            </summary>
            <value>The red page number</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.FastTextDecoder.Green">
            <summary>
            Gets the pagenumber for the green button.
            </summary>
            <value>The green page number</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.FastTextDecoder.Yellow">
            <summary>
            Gets the pagenumber for the yellow button.
            </summary>
            <value>The yellow page number</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.FastTextDecoder.Blue">
            <summary>
            Gets the pagenumber for the blue button.
            </summary>
            <value>The blue page number</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.FastTextDecoder.White">
            <summary>
            Gets the pagenumber for the white button.
            </summary>
            <value>The white page number.</value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext">
            <summary>
            Zusammenfassung für DVBTeletext.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.#ctor">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.Finalize">
            <summary>
            Disposes the DVB teletext
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.GetTeletextChannelName">
            <summary>
            Gets the teletext channel name
            </summary>
            <returns>Channel name</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.ClearTeletextChannelName">
            <summary>
            Clears the stored teletext channel name
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.ClearBuffer">
            <summary>
            Clears the buffers and cache
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.RotationTime(System.Int32)">
            <summary>
            returns the rotation time for the page.
            </summary>
            <param name="currentPageNumber">The current page number.</param>
            <returns>timespan contain the rotation time</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.SetPageSize(System.Int32,System.Int32)">
            <summary>
            sets the width/height of the bitmap generated by GetPage()
            </summary>
            <param name="renderWidth">width in pixels</param>
            <param name="renderHeight">height in pixels</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.GetRawPage(System.Int32,System.Int32)">
            <summary>
            Gets the raw teletext page.
            </summary>
            <param name="page">pagenumber (0x100-0x899)</param>
            <param name="subpage">subpagenumber (0x0-0x79)</param>
            <returns>raw teletext page (or null if page is not found)</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.GetPage(System.Int32,System.Int32)">
            <summary>
            Gets the teletext page and renders it to a Bitmap
            </summary>
            <param name="page">pagenumber (0x100-0x899)</param>
            <param name="subpage">subpagenumber (0x0-0x79)</param>
            <returns>bitmap (or null if page is not found)</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.NumberOfSubpages(System.Int32)">
            <summary>
            returns the total number of subpages for a pagnumber
            </summary>
            <param name="currentPageNumber">pagenumber 0x100-0x899</param>
            <returns>number of subpages for this pagenumber</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.SaveData(System.IntPtr)">
            <summary>
             Saves the given data in the cache and decodes
            </summary>
            <param name="dataPtr">Teletext data</param>
        </member>
        <member name="E:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.OnPageUpdated">
            <summary>
            Page update event
            </summary>
        </member>
        <member name="E:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.OnPageAdded">
            <summary>
            Page added event
            </summary>
        </member>
        <member name="E:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.OnPageDeleted">
            <summary>
            Page deleted event
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.PageRed">
            <summary>
            Gets the red teletext page
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.PageGreen">
            <summary>
            Gets the green teletext page
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.PageYellow">
            <summary>
            Gets the yellow teletext page
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.PageBlue">
            <summary>
            Gets the blue teletext page
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.PageSelectText">
            <summary>
            Gets the page select text.
            </summary>
            <value>The page select text.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.PercentageOfMaximumHeight">
            <summary>
            Gets/Sets  the percentage of the maximum height for the font size
            </summary>
            <value>Percentage of the maximum height of font size.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.HiddenMode">
            <summary>
            turns on/off the conceal (hidden) mode
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.TransparentMode">
            <summary>
            turns on/off transparent mode. In transparent mode the
            teletext page is rendered on transparent background
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.DVBTeletext.FullscreenMode">
            <summary>
             Gets/Sets the fullscreen mode
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsCaGrabber">
            <summary>
            interface to the pmt grabber com object
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsCaGrabber.SetCallBack(Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ICACallback)">
            <summary>
            Sets the call back to be called when CA is received.
            </summary>
            <param name="callback">The callback.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsCaGrabber.GetCaData(System.IntPtr)">
            <summary>
            Gets the CA data.
            </summary>
            <param name="caData">The caData.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsCaGrabber.Reset">
            <summary>
            Resets the ca grabber.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardCollection">
            <summary>
            this class will enumerate all TV devices
            and create the correct ITVCards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardCollection.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IEpgEvents)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardCollection.DetectCards">
            <summary>
            Enumerate all tvcard devices and add them to the list
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardCollection.GetFileName(System.String)">
            <summary>
            Generates the file and pathname of the log file
            </summary>
            <param name="devicePath">Device Path of the card</param>
            <returns>Complete filename of the configuration file</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.TvCardCollection.Cards">
            <summary>
            returns the list of cards present...
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup">
            <summary>
            Hybrid card group wrapper
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.Add(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.ITVCard)">
            <summary>
            Adds the specified id card.
            </summary>
            <param name="idCard">The id card.</param>
            <param name="card">The card.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.IsCardIdActive(System.Int32)">
            <summary>
            Checks if the active card is the one with given id
            </summary>
            <param name="idCard">ID of the card to check</param>
            <returns> 
              <c>true</c> if card with the given id is active; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.StopGraph">
            <summary>
            Stops the current graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.PauseGraph">
            <summary>
            Pauses the current graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.StartLinkageScanner(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.BaseChannelLinkageScanner)">
            <summary>
            Starts scanning for linkage info
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.ResetLinkageScanner">
            <summary>
            Stops/Resets the linkage scanner
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.GrabEpg(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.BaseEpgGrabber)">
            <summary>
            Grabs the epg.
            </summary>
            <param name="callback">The callback which gets called when epg is received or canceled.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.GrabEpg">
            <summary>
            Start grabbing the epg while timeshifting
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.AbortGrabbing">
            <summary>
            Aborts grabbing the epg
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.Tune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The subchannel id</param>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.Scan(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Scans the specified channel.
            </summary>
            <param name="subChannelId">The subchannel id</param>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.ResetSignalUpdate">
            <summary>
            Updates the signal state for a card.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.GetSubChannel(System.Int32)">
            <summary>
            Gets the sub channel.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.GetFirstSubChannel">
            <summary>
            Gets the first sub channel.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.FreeSubChannel(System.Int32)">
            <summary>
            Frees the sub channel.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.Parameters">
            <summary>
            Gets or sets the timeout parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.IsEpgGrabbing">
            <summary>
            returns true if card is currently grabbing the epg
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.IsScanning">
            <summary>
            returns true if card is currently scanning
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.ChannelLinkages">
            <summary>
            Returns the channel linkages grabbed
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.Epg">
            <summary>
            returns a list of all epg data for each channel found.
            </summary>
            <value>The epg.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.SupportsQualityControl">
            <summary>
            Property which returns true if card supports quality control
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.SignalQuality">
            <summary>
            returns the signal quality
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.SignalLevel">
            <summary>
            returns the signal level
            </summary>
            <value></value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Hybrid.HybridCardGroup.SubChannels">
            <summary>
            Gets the sub channels.
            </summary>
            <value>The sub channels.</value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.TvCardDVBT">
            <summary>
            Implementation of <see cref="T:TvLibrary.Interfaces.ITVCard"/> which handles DVB-T BDA cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.TvCardDVBT.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IEpgEvents,DirectShowLib.DsDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.TvCardDVBT"/> class.
            </summary>
            <param name="epgEvents">The EPG events interface.</param>
            <param name="device">The device.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.TvCardDVBT.BuildGraph">
            <summary>
            Builds the graph.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.TvCardDVBT.CreateTuningSpace">
            <summary>
            Creates the tuning space.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.TvCardDVBT.StopGraph">
            <summary>
            Methods which stops the graph
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.TvCardDVBT.Scan(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.TvCardDVBT.Tune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The sub channel id</param>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.TvCardDVBT.FilterOutEPGChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Epg.EpgChannel)">
            <summary>
            checks if a received EPGChannel should be filtered from the resultlist
            </summary>
            <value></value>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.TvCardDVBT.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.TvCardDVBT.CanTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Method to check if card can tune to the channel specified
            </summary>
            <param name="channel"></param>
            <returns>
            true if card can tune to the channel otherwise false
            </returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.TvCardDVBT.ScanningInterface">
            <summary>
            returns the ITVScanning interface used for scanning channels
            </summary>
            <value></value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere">
            <summary>
            Handles the CI/CAM interface for FireDtv and FloppyDtv devices from 
            Digital Everywhere
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.KSPROPSETID_Firesat">
            <summary>
            FireDtv guid
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.SendPMTToFireDTV(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            This function sends the PMT (Program Map Table) to the FireDTV DVB-T/DVB-C/DVB-S card
            This allows the integrated CI and CAM module inside the FireDTv device to decrypt the current TV channel
            (provided that offcourse a smartcard with the correct subscription and its inserted in the CAM)
            </summary>
            <param name="PMT">Program Map Table received from digital transport stream</param>
            <param name="pmtLength">length in bytes of PMT</param>
            <param name="current">The current channel index</param>
            <param name="max">The max. channel index</param>
            <returns></returns>
            <remarks>
            1. first byte in PMT is 0x02=tableId for PMT
            2. This function is vender specific. It will only work on the FireDTV devices
            </remarks>
            <preconditions>
            1. FireDTV device should be tuned to a digital DVB-C/S/T TV channel
            2. PMT should have been received
            </preconditions>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.ResetCAM">
            <summary>
            Resets the CAM.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.SendPMTToFireDTV(System.Collections.Generic.Dictionary{System.Int32,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccessContext})">
            <summary>
            Sends the PMT of all subchannels to fire DTV.
            </summary>
            <param name="subChannels">The sub channels.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.SetHardwarePidFiltering(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{System.UInt16})">
            <summary>
            Sets the pids for hardware pid filtering.
            </summary>
            <param name="isDvbc">if set to <c>true</c> [is DVB-C].</param>
            <param name="isDvbT">if set to <c>true</c> [is DVB-T].</param>
            <param name="isDvbS">if set to <c>true</c> [is DVB-S].</param>
            <param name="isAtsc">if set to <c>true</c> [is atsc].</param>
            <param name="pids">The pids to filter</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.GetHardwareFirmwareVersionNumber">
            <summary>
             Get the hardware and firmware versions
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.GetDriverVersionNumber">
            <summary>
            Gets the driver version number.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.GetCAMStatus">
            <summary>
            Gets the CAM status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.GetCAMName">
            <summary>
            Read out CAM name
            When it works, this usually means that CAM is ready to descramble (i.e. after resume)
            </summary>
            <returns>CAM name</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.IsCamPresent">
            <summary>
            Determines whether a cam is present
            </summary>
            <returns>
            	<c>true</c> if cam is present; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.IsCamReady">
            <summary>
            Determines whether cam is ready
            </summary>
            <returns>
            	<c>true</c> if cam is ready; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.SendDiseqcCommand(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            Sends the diseqc command.
            </summary>
            <param name="channel">The channel.</param>
            <param name="parameters">The scanparameters.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.SendDiSEqCCommand(System.Byte[])">
            <summary>
            Sends the DiSEqC command.
            </summary>
            <param name="diSEqC">The DiSEqC command.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.ReadDiSEqCCommand(System.Byte[]@)">
            <summary>
            gets the diseqc reply
            </summary>
            <param name="reply">The reply.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <!-- Ungültiger XML-Kommentar wurde für den Member "M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.OnStartGraph" ignoriert -->
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.OnStopGraph">
            <summary>
            Set parameter to null when stopping the Graph.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.StopCiHandlerThread">
            <summary>
            Stops CiHandler thread
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.StartCiHandlerThread">
            <summary>
            Starts CiHandler thread
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.SetCiMenuHandler(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.ICiMenuCallbacks)">
            <summary>
            Sets the callback handler
            </summary>
            <param name="ciMenuHandler"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.EnterCIMenu">
            <summary>
            Enters the CI menu 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.CloseCIMenu">
            <summary>
            Closes the CI menu 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.SelectMenu(System.Byte)">
            <summary>
            Selects a CI menu entry
            </summary>
            <param name="choice"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.SendMenuAnswer(System.Boolean,System.String)">
            <summary>
            Sends an answer after CI request
            </summary>
            <param name="Cancel"></param>
            <param name="Answer"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.CiMenuHandler">
            <summary>
            Thread that checks for CI menu 
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.Dispose">
            <summary>
            Disposes DE class and free up memory
            </summary>  
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.IsDigitalEverywhere">
            <summary>
            Returns if the card is a FireDtv/Floppy DTV device or not.
            </summary>
            <value>
            	<c>true</c> if this instance is a FireDtv/Floppy DtV; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.DE_CI_STATUS">
            <summary>
            DE CI Status bits
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.DE_CI_STATUS.CI_ERR_MSG_AVAILABLE">
            CI_ERR_MSG_AVAILABLE
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.DE_CI_STATUS.CI_MODULE_INIT_READY">
            CI_MODULE_INIT_READY
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.DE_CI_STATUS.CI_MODULE_ERROR">
            CI_MODULE_ERROR
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.DE_CI_STATUS.CI_MODULE_IS_DVB">
            CI_MODULE_IS_DVB
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.DE_CI_STATUS.CI_MODULE_PRESENT">
            CI_MODULE_PRESENT
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.DE_CI_STATUS.CI_APP_INFO_AVAILABLE">
            CI_APP_INFO_AVAILABLE
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.DE_CI_STATUS.CI_DATE_TIME_REQEST">
            CI_DATE_TIME_REQEST
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.DE_CI_STATUS.CI_PMT_REPLY">
            CI_PMT_REPLY
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalEverywhere.DigitalEverywhere.DE_CI_STATUS.CI_MMI_REQUEST">
            CI_MMI_REQUEST
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenPixBDA">
            <summary>
            Handles the DiSEqC interface for GenPix BDA driver devices
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenPixBDA.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenPixBDA"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenPixBDA.SendDiseqCommand(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            Sends the diseq command.
            </summary>
            <param name="channel">The channel.</param>
            <param name="parameters">The channels scanning parameters.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenPixBDA.Dispose">
            <summary>
            Disposes COM task memory resources
            </summary>  
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenPixBDA.IsGenPix">
            <summary>
            Gets a value indicating whether this instance is a GenPix based card.
            </summary>
            <value>
            	<c>true</c> if this instance is GenPix; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenPixBDA.DISEQC_COMMAND">
            <summary>
            Sets up the DiSEqC struct for GenPix DVB-S cards.
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsPmtGrabber">
            <summary>
            interface to the pmt grabber com object
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsPmtGrabber.SetPmtPid(System.Int16,System.Int32)">
            <summary>
            Sets the PMT pid.
            </summary>
            <param name="pmtPid">The PMT pid.</param>
            <param name="serviceId">The service id</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsPmtGrabber.SetCallBack(Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IPMTCallback)">
            <summary>
            Sets the call back to be called when PMT is received.
            </summary>
            <param name="callback">The callback.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsPmtGrabber.GetPMTData(System.IntPtr)">
            <summary>
            Gets the PMT data.
            </summary>
            <param name="pmt">The PMT.</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.Release">
            <summary>
            Helper class for releasing a com object
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.Release.ComObject(System.String,System.Object)">
            <summary>
            Releases a com object
            </summary>
            <param name="line">Log line input</param>
            <param name="o">Object to release</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.Release.ComObjectToNull``1(System.String,``0@)">
            <summary>
            Releases a com object
            </summary>
            <param name="line">Log line input</param>
            <param name="o">Object to release</param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.Iso6937ToUnicode">
            <summary>
            ISO 6937 to unicode converter
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.Iso6937ToUnicode.Convert(System.IntPtr)">
            <summary>
            ISO 6937 to Unicode convertor for EPG
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices">
            <summary>
            DigitalDevices CI control class
            It derives from GenericBDAS for DiSEqC support.
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenericBDAS">
            <summary>
            Generic BDA DiSEqC support.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenericBDAS.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenericBDAS"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenericBDAS.FormatMessage(System.String)">
            <summary>
            Formats the log message to contain card type name at start.
            </summary>
            <param name="LogMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenericBDAS.SendDiseqCommand(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            Sends the diseq command.
            </summary>
            <param name="channel">The channel.</param>
            <param name="parameters">The channels scanning parameters.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenericBDAS.SendDiSEqCCommand(System.UInt64)">
            <summary>
            Sends the DiSEqC command.
            </summary>
            <param name="ulRange">The DisEqCPort</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenericBDAS.ReadDiSEqCCommand(System.UInt64@)">
            <summary>
            gets the diseqc reply
            </summary>
            <param name="pulRange">The DisEqCPort Port.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenericBDAS.IsCamPresent">
            <summary>
            Determines whether [is cam present].
            </summary>
            <returns>
            	<c>true</c> if [is cam present]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.DisEqC.GenericBDAS.IsGenericBDAS">
            <summary>
            Gets a value indicating whether this instance is a Generic BDA-S based card.
            </summary>
            <value>
            	<c>true</c> if this instance is; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.SendServiceIdToCam(System.Int32)">
            <summary>
            Sends the ServiceID to CAM to start decryption.
            </summary>
            <param name="serviceId">Service ID</param>
            <returns>true if successful or no CI available</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.SetCiMenuHandler(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.ICiMenuCallbacks)">
            <summary>
            Sets the callback handler
            </summary>
            <param name="ciMenuHandler"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.EnterCIMenu">
            <summary>
            Enters the CI menu
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.ResetCAM">
            <summary>
            Resets the CAM.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.CloseCIMenu">
            <summary>
            Closes the CI menu
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.SelectMenu(System.Byte)">
            <summary>
            Selects a CI menu entry
            </summary>
            <param name="choice">choice</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.SendMenuAnswer(System.Boolean,System.String)">
            <summary>
            Sends an answer after CI request
            </summary>
            <param name="Cancel">true to cancel</param>
            <param name="Answer">Answer string</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.ProcessCamMenu(Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.DD_CAM_MENU_DATA)">
            <summary>
            Process the MMI and do callbacks.
            </summary>
            <param name="CiMenu"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.StopCiHandlerThread">
            <summary>
            Stops CiHandler thread
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.StartCiHandlerThread">
            <summary>
            Starts CiHandler thread
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.CiMenuHandler">
            <summary>
            Thread that checks for CI menu 
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.Dispose">
            <summary>
            Disposes COM task memory resources
            </summary>  
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.DigitalDevices.DigitalDevices.IsSupported">
            <summary>
            Gets a value indicating whether this instance supports CAM.
            </summary>
            <value>
            	<c>true</c> if this instance supports CAM; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache">
            <summary>
             Teletext page cache
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.Clear">
            <summary>
            Clear the cache
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.NumberOfSubpages(System.Int32)">
            <summary>
            Gets the number of subpages for the given page number
            </summary>
            <param name="pageNumber">Page number</param>
            <returns>Number of sub pages</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.PageExists(System.Int32)">
            <summary>
            Checks, if the given page number is in the cache
            </summary>
            <param name="pageNumber">Page nubmer</param>
            <returns>true, if the page is in the cache</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.GetPage(System.Int32,System.Int32)">
            <summary>
            Gets the page, subpage 
            </summary>
            <param name="pageNumber">Page number</param>
            <param name="subPageNumber">Subpage number</param>
            <returns>Bytes of the page, subpage</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.SubPageExists(System.Int32,System.Int32)">
            <summary>
            Checks, if the sub page exists
            </summary>
            <param name="pageNumber">Page number</param>
            <param name="subPageNumber">Subpage number</param>
            <returns>returns true if the page and the subpage exists</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.RotationTime(System.Int32)">
            <summary>
            Gets the rotation time of teletext page
            </summary>
            <param name="pageNumber">Page number</param>
            <returns>Timespan of the rotation</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.DeletePage(System.Int32,System.Int32)">
            <summary>
            Deletes the page, subpage
            </summary>
            <param name="pageNumber">Page number</param>
            <param name="subPageNumber">Subpage number</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.PageReceived(System.Int32,System.Int32,System.Byte[],System.String)">
            <summary>
            Called when a page is received to store in the cache
            </summary>
            <param name="pageNumber">Page number</param>
            <param name="subPageNumber">Subpage number</param>
            <param name="pageData">PageData </param>
            <param name="vbiLines">VBI lines</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.Dispose">
            <summary>
            Disposes the teletextpagecache
            </summary>    
        </member>
        <member name="E:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.OnPageUpdated">
            <summary>
            On Page updated event
            </summary>
        </member>
        <member name="E:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.OnPageAdded">
            <summary>
            On page added event
            </summary>
        </member>
        <member name="E:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.OnPageDeleted">
            <summary>
            On Page deleted event
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache.ChannelName">
            <summary>
            Channel name
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage">
            <summary>
            Teletext page container
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage"/> class.
            </summary>
            <param name="pageNumber">The page number.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.GetSubPage(System.Int32)">
            <summary>
            Gets the sub page.
            </summary>
            <param name="subPageNumber">The sub page number.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes the specified page number.
            </summary>
            <param name="pageNumber">The page number.</param>
            <param name="subPageNumber">The sub page number.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.SubPageReceived(System.Int32,System.Int32@,System.Byte[]@,System.Boolean@,System.Boolean@,System.Boolean@,System.String)">
            <summary>
            Subs the page received.
            </summary>
            <param name="pageNumber">The page number.</param>
            <param name="subPageNumber">The sub page number.</param>
            <param name="pageData">The page data.</param>
            <param name="isUpdate">if set to <c>true</c> [is update].</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDeleted">if set to <c>true</c> [is deleted].</param>
            <param name="vbiLines">VBI lines</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.UpdatePage(System.Int32,System.Byte[])">
            <summary>
            Updates the page.
            </summary>
            <param name="subPageNumber">The sub page number.</param>
            <param name="pageData">The page data.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.FreePage(System.Int32)">
            <summary>
            Frees the page.
            </summary>
            <param name="subPageNumber">The sub page number.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.AllocPage(System.Int32,System.Byte[])">
            <summary>
            Allocs the page.
            </summary>
            <param name="subPageNumber">The sub page number.</param>
            <param name="page">Page data</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.SubPageExists(System.Int32)">
            <summary>
            Subs the page exists.
            </summary>
            <param name="subPageNumber">The sub page number.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>  
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.PageNumber">
            <summary>
             Gets the page number
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.SubPageCount">
            <summary>
            Gets the sub page count.
            </summary>
            <value>The sub page count.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.RotationTime">
            <summary>
            Gets the rotation time.
            </summary>
            <value>The rotation time.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.LastTimeReceived">
            <summary>
            Gets the last time received.
            </summary>
            <value>The last time received.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPage.LastTimeRoulated">
            <summary>
            Gets the last time roulated.
            </summary>
            <value>The last time roulated.</value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsChannel">
            <summary>
            TsWriter channel name
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult">
             <summary>
              This class handles HResult codes returned by com class
             </summary>
             <remarks>
             A HResult code is a 32 bit value layed out as follows:
            
               3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
               1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
              +---+-+-+-----------------------+-------------------------------+
              |Sev|C|R|     Facility          |               Code            |
              +---+-+-+-----------------------+-------------------------------+
            
              where
            
                  Sev - is the severity code
            
                      00 - Success
                      01 - Informational
                      10 - Warning
                      11 - Error
            
                  C - is the Customer code flag
            
                  R - is a reserved bit
            
                  Facility - is the facility code
            
                  Code - is the facility's status code
             </remarks>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult"/> class.
            </summary>
            <param name="hresult">The hresult code.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Set(System.Int32)">
            <summary>
            Sets the specified hresult.
            </summary>
            <param name="hresult">The hresult.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.GetDXErrorString(System.Int32)">
            <summary>
            Static method which gets the DX error string.
            </summary>
            <param name="hresult">The hresult.</param>
            <returns>the DX error string</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.ToDXString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.op_Equality(Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult,System.Int32)">
            <summary>
            Operator ==s the specified a.
            </summary>
            <param name="a">A hresult</param>
            <param name="b">an int</param>
            <returns>bool</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.op_LessThan(Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult,System.Int32)">
            <summary>
            Overloaded lt operator
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns>true if a._hresult lt b</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.op_GreaterThan(Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult,System.Int32)">
            <summary>
            Overloaded gt operator
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns>true if a._hresult gt b</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.op_LessThanOrEqual(Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult,System.Int32)">
            <summary>
            Overloaded lte operator
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns>true if a._hresult lte b</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.op_GreaterThanOrEqual(Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult,System.Int32)">
            <summary>
            Overloaded gte operator
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns>true if a._hresult gte b</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.op_Inequality(Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult,System.Int32)">
            <summary>
            Operator !=s the specified a.
            </summary>
            <param name="a">A hresult</param>
            <param name="b">an int</param>
            <returns>bool</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.FacilityType">
            <summary>
            Gets the facility type.
            </summary>
            <value>The facility type.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.FacilityCode">
            <summary>
            Gets the facility code.
            </summary>
            <value>The facility code.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.ServerityLevel">
            <summary>
            Gets the serverity level.
            </summary>
            <value>The serverity level.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Code">
            <summary>
            Gets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.DXErrorString">
            <summary>
            Gets the DX error string.
            </summary>
            <value>The DX error string.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.DXErrorDescription">
            <summary>
            Gets the DX error description.
            </summary>
            <value>The DX error description.</value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Serverity">
            <summary>
            HResult serverity enum
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Serverity.Unknown">
            <summary>
            Unknown serverity
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Serverity.Success">
            <summary>
            Success serverity
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Serverity.Info">
            <summary>
            Info serverity
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Serverity.Warning">
            <summary>
            Warning serverity
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Serverity.Error">
            <summary>
            Errror serverity
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility">
            <summary>
            Facility code enum
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.Null">
            <summary>
            Null
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.RPC">
            <summary>
            RPC
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.Dispatch">
            <summary>
            Dispatch
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.Storage">
            <summary>
            Storage
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.ITF">
            <summary>
            ITF
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.Win32">
            <summary>
            Win32
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.Windows">
            <summary>
            Windows
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.Security">
            <summary>
            Security
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.Control">
            <summary>
            Control
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.Cert">
            <summary>
            Cert
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.Internet">
            <summary>
            Internet
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.MediaServer">
            <summary>
            MediaServer
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.MSMQ">
            <summary>
            MSMQ
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.SetupAPI">
            <summary>
            SetupAPI
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.SCard">
            <summary>
            SCard
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.ComPlus">
            <summary>
            ComPlus
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.AAF">
            <summary>
            AAF
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.ACS">
            <summary>
            ACS
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.DPlay">
            <summary>
            DPlay
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.UMI">
            <summary>
            UMI
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.SXS">
            <summary>
            SXS
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.WindowsCE">
            <summary>
            Windows CE
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.HTTP">
            <summary>
            HTTP
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.BackgroundCopy">
            <summary>
            BackgroundCopy
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.StateManagement">
            <summary>
            StateManagement
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.MetaDirectory">
            <summary>
            MetaDirectory
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.HResult.Facility.D3DX">
            <summary>
            D3DX
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FileAccessHelper">
            <summary>
             File Access Helper class
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.FileAccessHelper.GrantFullControll(System.String)">
            <summary>
            Grants full controll on the given file for everyone
            </summary>
            <param name="fileName">Filename</param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult">
            <summary>
            Return values of TT API
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.Success">
            <summary>
            operation finished successful
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.NotImplemented">
            <summary>
            operation is not implemented for the opened handle
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.NotSupported">
            <summary>
            operation is not supported for the opened handle
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.ErrorHandle">
            <summary>
            the given HANDLE seems not to be correct
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.NoDeviceHandle">
            <summary>
            the internal IOCTL subsystem has no device handle
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.Failed">
            <summary>
            the internal IOCTL failed
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.IRAlreadyOpen">
            <summary>
            the infrared interface is already initialised
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.IRNotOpened">
            <summary>
            the infrared interface is not initialised
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.TooManyBytes">
            <summary>
            length exceeds maximum in EEPROM-Userspace operation
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.CIHardwareError">
            <summary>
            common interface hardware error
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.CIAlreadyOpen">
            <summary>
            common interface already opened
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.TimeOut">
            <summary>
            operation finished with timeout
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.ReadPSIFailed">
            <summary>
            read psi failed
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.NotSet">
            <summary>
            not set
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.Error">
            <summary>
            operation finished with general error
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.BadPointer">
            <summary>
            operation finished with illegal pointer
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.IncorrectSize">
            <summary>
            the tunerequest structure did not have the expected size
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.TunerIFNotAvailable">
            <summary>
            the tuner interface was not available
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.UnknownDVBType">
            <summary>
            an unknown DVB type has been specified for the tune request
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiResult.BufferTooSmall">
            <summary>
            length of buffer is too small
            </summary> 
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiDeviceCat">
            <summary>
            API Device Catagory
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiDeviceCat.UNKNOWN">
            <summary> 
            not set
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiDeviceCat.BUDGET_2">
            <summary> 
            Budget 2
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiDeviceCat.BUDGET_3">
            <summary> 
            Budget 3 aka TT-budget T-3000
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiDeviceCat.USB_2">
            <summary> 
            USB 2.0
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiDeviceCat.USB_2_PINNACLE">
            <summary> 
            USB 2.0 Pinnacle
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiDeviceCat.USB_2_DSS">
            <summary> 
            USB 2.0 DSS
            </summary> 
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiDeviceCat.PREMIUM">
            <summary> 
            Premium
            </summary> 
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTCiSlotStatus">
            <summary>
            Status for CI Slot
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTCiSlotStatus.SlotEmpty">
            Common interface slot is empty.
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTCiSlotStatus.SlotModuleInserted">
            A CAM is inserted into the common interface.
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTCiSlotStatus.SlotModuleOk">
            CAM initialisation ready.
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTCiSlotStatus.SlotCaOk">
            CAM initialisation ready.
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTCiSlotStatus.SlotDbgMsg">
            CAM initialisation ready.
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTCiSlotStatus.SlotUnknownState">
            Slot state could not be determined.
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI">
            <summary>
            Technotrend BDA API wrapper and CI handler
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiOpenHWIdx(Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TTApiDeviceCat,System.UInt32)">
            <summary>
            Technotrend: Open hardware
            </summary>
            <param name="deviceType"></param>
            <param name="deviceIdentifier"></param>
            <returns>handle to opened device</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiOpenCIWithoutPointer(System.IntPtr)">
            <summary>
            Technotrend: Open CI
            </summary>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiOpenCISlim(System.IntPtr,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTSlimCallbackStruct)">
            <summary>
            Technotrend: Open CI
            </summary>
            <param name="device"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiOpenCI(System.IntPtr,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct)">
            <summary>
            Technotrend: Open CI
            </summary>
            <param name="device"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiClose(System.IntPtr)">
            <summary>
            Technotrend: Close API
            </summary>
            <param name="device"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiCloseCI(System.IntPtr)">
            <summary>
            Technotrend: Close CI
            </summary>
            <param name="device"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiCIGetSlotStatus(System.IntPtr,System.Byte)">
            <summary>
            Technotrend: Query slot status
            </summary>
            <param name="device"></param>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiGetDrvVersion(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Technotrend: get driver version
            </summary>
            <param name="device"></param>
            <param name="v1"></param>
            <param name="v2"></param>
            <param name="v3"></param>
            <param name="v4"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiCIMultiDecode(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Technotrend: decodes PMT
            </summary>
            <param name="device"></param>
            <param name="pNrs"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiSetDiSEqCMsg(System.IntPtr,System.IntPtr,System.Byte,System.Byte,System.Byte,System.Int32)">
            <summary>
            Technotrend: Diseqc
            </summary>
            <param name="device"></param>
            <param name="data"></param>
            <param name="length"></param>
            <param name="repeat"></param>
            <param name="toneburst"></param>
            <param name="polarity"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiSetDVBTAntPwr(System.IntPtr,System.Boolean)">
            <summary>
            Technotrend: set antenna power
            </summary>
            <param name="device"></param>
            <param name="bAntPwrOnOff"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiGetDVBTAntPwr(System.IntPtr,System.Int32@)">
            <summary>
            Technotrend: get antenna power
            </summary>
            <param name="device"></param>
            <param name="uiAntPwrOnOff"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiCIEnterModuleMenu(System.IntPtr,System.Byte)">
            <summary>
            Technotrend: Enter CI menu
            </summary>
            <param name="device"></param>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiCIMenuAnswer(System.IntPtr,System.Byte,System.Byte)">
            <summary>
            Technotrend: Select CI menu choice
            </summary>
            <param name="device"></param>
            <param name="slot"></param>
            <param name="selection"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.bdaapiCIAnswer(System.IntPtr,System.Byte,System.String,System.Byte)">
            <summary>
            Technotrend: Send CI menu answer
            </summary>
            <param name="device"></param>
            <param name="slot"></param>
            <param name="pKeyBuffer"></param>
            <param name="nLength"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
            constructor for enabling technotrend ci 
            </summary>
            <param name="tunerFilter">tunerfilter</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OpenCI">
            <summary>
            Opens the CI API
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.CloseCI">
            <summary>
            Closes the CI API
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.ResetCI">
            <summary>
            Reset the CI
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.GetCISlotStatus">
            <summary>
            Query slot status from card
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.GetDrvVersion">
            <summary>
            returns driver version number
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.GetDeviceID">
             <summary>
            **************************************************************************************************
            * GetDeviceID()
            * Finds the technotrend device Id for the tuner filter
            * returns true if device id is found otherwise false
            **************************************************************************************************
             </summary>
             <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.IsCamReady">
            <summary>
            Determines whether cam is ready.
            </summary>
            <returns>
            	<c>true</c> if [is cam ready]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.IsCamPresent">
            <summary>
            Determines whether cam is ready.
            </summary>
            <returns>
            	<c>true</c> if [is cam ready]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.DetectCardType">
            <summary>
            detects card type based on tunerfilter info
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.DescrambleMultiple(System.Collections.Generic.Dictionary{System.Int32,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccessContext})">
            <summary>
            decodes multiple programs
            </summary>
            <param name="subChannels">list of subchannels</param>
            <returns>true is successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.SendDiseqCommand(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            Sends the diseq command.
            </summary>
            <param name="channel">The channel.</param>
            <param name="parameters">The scanparameters.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.EnableAntenna(System.Boolean)">
            <summary>
            Here we turn on the USB DVB-T antennae
            </summary>
            <param name="onOff">true for on</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onSlotChange(System.IntPtr,System.Byte,System.Byte,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.SlotInfo*)">
            <summary>
            callback from driver for CI slot status
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
            <param name="nStatus"></param>
            <param name="csInfo"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onCaChange(System.IntPtr,System.Byte,System.Byte,System.Int16)">
            <summary>
            callback from driver for CA changes
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
            <param name="nReplyTag"></param>
            <param name="wStatus"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onDisplayString(System.IntPtr,System.Byte,System.IntPtr,System.Int16)">
            <summary>
            callback from driver
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
            <param name="pString"></param>
            <param name="wLength"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onDisplayMenuOrList(System.IntPtr,System.Byte,System.Int16,System.IntPtr,System.Int16)">
            <summary>
            callback from driver to display the CI menu
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
            <param name="wItems">Number of Items in the List</param>
            <param name="pStringArray">Contains all strings of the list.</param>
            <param name="wLength">Length of the string array.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onSwitchOsdOff(System.IntPtr,System.Byte)">
            <summary>
            callback from driver
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onInputRequest(System.IntPtr,System.Byte,System.Boolean,System.Byte,System.Int16)">
            <summary>
            callback from driver
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
            <param name="bBlindAnswer">True if hidden input (*)</param>
            <param name="nExpectedLength">Expected max. answer length</param>
            <param name="dwKeyMask">Key mask</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onLscSetDescriptor(System.IntPtr,System.Byte,System.IntPtr)">
            <summary>
            callback from driver
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
            <param name="pDescriptor">Descriptor</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onLscConnect(System.IntPtr,System.Byte)">
            <summary>
            callback from driver
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onLscDisconnect(System.IntPtr,System.Byte)">
            <summary>
            callback from driver
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onLscSetParams(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
            callback from driver
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
            <param name="BufferSize">Buffer size</param>
            <param name="Timeout10Ms">Timeout</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onLscEnquireStatus(System.IntPtr,System.Byte)">
            <summary>
            callback from driver
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onLscGetNextBuffer(System.IntPtr,System.Byte,System.Byte)">
            <summary>
            callback from driver
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
            <param name="PhaseID">Phase</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.onLscTransmitBuffer(System.IntPtr,System.Byte,System.Byte,System.IntPtr,System.Int16)">
            <summary>
            callback from driver
            </summary>
            <param name="Context">Can be used for a context pointer in the calling application. This parameter can be NULL.</param>
            <param name="nSlot">Is the Slot ID.</param>
            <param name="PhaseID">Phase</param>
            <param name="pData">Data</param>
            <param name="nLength">Length</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.Dispose">
            <summary>
            Disposes TT API
            </summary>   
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.SendDiSEqCCommand(System.Byte[])">
            <summary>
            Sends the DiSEqC command.
            </summary>
            <param name="diSEqC">The DiSEqC command.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.ReadDiSEqCCommand(System.Byte[]@)">
            <summary>
            gets the diseqc reply
            </summary>
            <param name="reply">The reply.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.SetCiMenuHandler(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.ICiMenuCallbacks)">
            <summary>
            Sets the callback handler
            </summary>
            <param name="ciMenuHandler"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.EnterCIMenu">
            <summary>
            Enters the CI menu
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.CloseCIMenu">
            <summary>
            Closes the CI menu
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.SelectMenu(System.Byte)">
            <summary>
            Selects a CI menu entry
            </summary>
            <param name="choice"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.SendMenuAnswer(System.Boolean,System.String)">
            <summary>
            Sends an answer after CI request
            </summary>
            <param name="Cancel"></param>
            <param name="Answer"></param>
            <returns></returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.IsTechnoTrend">
            <summary>
            Gets a value indicating whether this instance is TechnoTrend.
            </summary>
            <value>
            	<c>true</c> if this instance is TechnoTrend; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct">
            <summary>
            Technotrend: Callback structures
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p01Context">
            Context pointer for PCBFCN_CI_OnSlotStatus
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p02">
            PCBFCN_CI_OnCAStatus
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p02Context">
            Context pointer for PCBFCN_CI_OnCAStatus
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p03">
            PCBFCN_CI_OnDisplayString
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p03Context">
            Context pointer for PCBFCN_CI_OnDisplayString
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p04">
            PCBFCN_CI_OnDisplayMenu
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p04Context">
            Context pointer for PCBFCN_CI_OnDisplayMenu
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p05">
            PCBFCN_CI_OnDisplayList
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p05Context">
            Context pointer for PCBFCN_CI_OnDisplayList
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p06">
            PCBFCN_CI_OnSwitchOsdOff
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p06Context">
            Context pointer for PCBFCN_CI_OnSwitchOsdOff
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p07">
            PCBFCN_CI_OnInputRequest
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p07Context">
            Context pointer for PCBFCN_CI_OnInputRequest
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p08">
            PCBFCN_CI_OnLscSetDescriptor
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p08Context">
            Context pointer for PCBFCN_CI_OnLscSetDescriptor
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p09">
            PCBFCN_CI_OnLscConnect
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p09Context">
            Context pointer for PCBFCN_CI_OnLscConnect
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p10">
            PCBFCN_CI_OnLscDisconnect
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p10Context">
            Context pointer for PCBFCN_CI_OnLscDisconnect
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p11">
            PCBFCN_CI_OnLscSetParams
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p11Context">
            Context pointer for PCBFCN_CI_OnLscSetParams
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p12">
            PCBFCN_CI_OnLscEnquireStatus
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p12Context">
            Context pointer for PCBFCN_CI_OnLscEnquireStatus
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p13">
            PCBFCN_CI_OnLscGetNextBuffer
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p13Context">
            Context pointer for PCBFCN_CI_OnLscGetNextBuffer
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p14">
            PCBFCN_CI_OnLscTransmitBuffer
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTCallbackStruct.p14Context">
            Context pointer for PCBFCN_CI_OnLscTransmitBuffer
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.TTSlimCallbackStruct">
            <summary>
            Technotrend: Callback structures
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.SlotInfo">
            <summary>
            Technotrend: Slot info structure
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.SlotInfo.nStatus">
            CI status
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.SlotInfo.pMenuTitleString">
            menu title string
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.SlotInfo.pCaSystemIDs">
            cam system ID's
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.SlotInfo.wNoOfCaSystemIDs">
            number of cam system ID's
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnSlotStatusCallback">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
            <param name="nStatus"></param>
            <param name="csInfo"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnCaChangeCallback">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
            <param name="nReplyTag"></param>
            <param name="wStatus"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnDisplayString">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
            <param name="pString"></param>
            <param name="wLength"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnDisplayMenuAndLists">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
            <param name="wItems"></param>
            <param name="pStringArray"></param>
            <param name="wLength"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnSwitchOsdOff">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnInputRequest">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
            <param name="bBlindAnswer"></param>
            <param name="nExpectedLength"></param>
            <param name="dwKeyMask"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnLscSetDescriptor">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
            <param name="pDescriptor"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnLscConnect">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnLscDisconnect">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnLscSetParams">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
            <param name="BufferSize"></param>
            <param name="Timeout10Ms"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnLscEnquireStatus">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnLscGetNextBuffer">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
            <param name="PhaseID"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.TechnoTrend.TechnoTrendAPI.OnLscTransmitBuffer">
            <summary>
            Technotrend: Callbacks from CI
            </summary>
            <param name="Context"></param>
            <param name="nSlot"></param>
            <param name="PhaseID"></param>
            <param name="pData"></param>
            <param name="nLength"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.GenericATSC">
            <summary>
             Generic ATSC devices BDA calls
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.GenericATSC.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.GenericATSC"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.GenericATSC.IsCamPresent">
            <summary>
            Determines whether [is cam present].
            </summary>
            <returns>
            	<c>true</c> if [is cam present]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.GenericATSC.SetXPATSCQam(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.ATSCChannel)">
            <summary>
            sets the QAM modulation for ATSC cards under XP
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.GenericATSC.Dispose">
            <summary>
            Disposes COM task memory resources
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.GenericATSC.IsGenericATSC">
            <summary>
            Gets a value indicating whether this instance is generic qam.
            </summary>
            <value>
            	<c>true</c> if this instance is generic qam; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel">
            <summary>
            Implementation of <see cref="T:TvLibrary.Interfaces.ITVCard"/> which handles analog tv cards
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogVideoAudioObserver">
            <summary>
            MPFileWiter video/audio observer
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IAnalogVideoAudioObserver.OnNotify(Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.PidType)">
            <summary>
             Called when a pid is detected
            </summary>
            <param name="pidType">The pid type</param>
            <returns>Error code</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.#ctor(Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.TvCardAnalog,System.Int32,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio,System.Boolean,DirectShowLib.IBaseFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel"/> class.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnBeforeTune">
            <summary>
            Should be called before tuning to a new channel
            resets the state
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnAfterTune">
            <summary>
            Should be called when the graph is tuned to the new channel
            resets the state
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnGraphStart">
            <summary>
            Should be called when the graph is about to start
            Resets the state 
            If graph is already running, starts the pmt grabber to grab the
            pmt for the new channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnGraphStarted">
            <summary>
            Should be called when the graph has been started
            sets up the pmt grabber to grab the pmt of the channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnGraphStop">
            <summary>
            Should be called when graph is about to stop.
            stops any timeshifting/recording on this channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnGraphStopped">
            <summary>
            should be called when graph has been stopped
            Resets the graph state
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnStartTimeShifting(System.String)">
            <summary>
            sets the filename used for timeshifting
            </summary>
            <param name="fileName">timeshifting filename</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnStopTimeShifting">
            <summary>
            Stops timeshifting
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnStartRecording(System.String)">
            <summary>
            Starts recording
            </summary>
            <param name="fileName">filename to which to recording should be saved</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnStopRecording">
            <summary>
            Stop recording
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnGetTimeShiftFilePosition(System.Int64@,System.Int64@)">
            <summary>
            Returns the position in the current timeshift file and the id of the current timeshift file
            </summary>
            <param name="position">The position in the current timeshift buffer file</param>
            <param name="bufferId">The id of the current timeshift buffer file</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnGrabTeletext">
            <summary>
            A derrived class should activate or deactivate the teletext grabbing on the tv card.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.OnDecompose">
            <summary>
            Decomposes this subchannel
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.AvailableAudioStreams">
            <summary>
            returns the list of available audio streams
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.CurrentAudioStream">
            <summary>
            get/set the current selected audio stream
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.IsReceivingAudioVideo">
            <summary>
            Returns true when unscrambled audio/video is received otherwise false
            </summary>
            <returns>true of false</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Graphs.Analog.AnalogSubChannel.GetCurrentVideoStream">
            <summary>
            Retursn the video format (always returns MPEG2). 
            </summary>
            <value>The number of channels decrypting.</value>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._pinCapture">
            <summary>
            The capture pin = MPEG2 PS pin
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._videoEncoderDevice">
            <summary>
            The hw video encoder device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._audioEncoderDevice">
            <summary>
            The hw audio encoder device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._multiplexerDevice">
            <summary>
            The multiplexer device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._filterVideoEncoder">
            <summary>
            The hw video encoder filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._filterAudioEncoder">
            <summary>
            The hw audio encoder filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._filterMultiplexer">
            <summary>
            The hw/Sw multipler filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._filterMpeg2Demux">
            <summary>
            The MPEG2-Demux filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._filterAnalogMpegMuxer">
            <summary>
            The analog mpeg muxer filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._videoCompressorDevice">
            <summary>
            The sw video encoder device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._audioCompressorDevice">
            <summary>
            The sw audio encoder device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._filterAudioCompressor">
            <summary>
            The sw audio encoder filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._filterVideoCompressor">
            <summary>
            The sw video encoder filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._pinVideo">
            <summary>
            The video pin on the demux
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._pinAudio">
            <summary>
            The audio pin on the demux
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._pinLPCM">
            <summary>
            The lpcm pin on the demux
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._pinAnalogAudio">
            <summary>
            The analog audio pin
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._pinAnalogVideo">
            <summary>
            The analog video pin
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._isPlextorConvertX">
            <summary>
            Indicates, if it is a Plextore ConvertX card
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._filterMpegMuxer">
            <summary>
            The mpeg muxer
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder._pinVideoConnected">
            <summary>
            Indicates if the video pin is connected to the laster mpeg muxer
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.CreateFilterInstance(DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture)">
            <summary>
            Creates the encoder component
            </summary>
            <param name="_graphBuilder">The graph builder</param>
            <param name="_tuner">The tuner component</param>
            <param name="_tvAudio">The tvaudio component</param>
            <param name="_crossbar">The crossbar component</param>
            <param name="_capture">The capture component</param>
            <returns>true, if the building was successful; false otherwise</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.FindCapturePin(System.Guid,System.Guid,DirectShowLib.IBaseFilter)">
            <summary>
            Find a pin on the multiplexer, video encoder or capture filter
            which can supplies the mediatype and mediasubtype specified
            if found the pin is stored in _pinCapture
            When a multiplexer is present then this method will try to find the capture pin on the multiplexer filter
            If no multiplexer is present then this method will try to find the capture pin on the video encoder filter
            If no video encoder is present then this method will try to find the capture pin on the video capture filter
            </summary>
            <param name="mediaType">Type of the media.</param>
            <param name="mediaSubtype">The media subtype.</param>
            <param name="filter">The filter to check</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.ConnectEncoderFilter(DirectShowLib.IBaseFilter,System.Boolean,System.Boolean,System.Boolean,DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture)">
            <summary>
            This method tries to connect a encoder filter to the capture filter
            See the remarks in AddTvEncoderFilter() for the possible options
            </summary>
            <param name="filterEncoder">The filter encoder.</param>
            <param name="isVideo">if set to <c>true</c> the filterEncoder is used for video.</param>
            <param name="isAudio">if set to <c>true</c> the filterEncoder is used for audio.</param>
            <param name="matchPinNames">if set to <c>true</c> the pin names of the encoder filter should match the pin names of the capture filter.</param>
            <param name="_graphBuilder">GraphBuilder</param>
            <param name="_capture">Capture</param>
            <returns>
            true if encoder is connected correctly, otherwise false
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.ConnectMultiplexer(DirectShowLib.IBaseFilter,System.Boolean,DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture)">
            <summary>
            This method tries to connect a multiplexer filter to the encoder filters (or capture filter)
            See the remarks in AddTvMultiPlexer() for the possible options
            </summary>
            <param name="filterMultiPlexer">The multiplexer.</param>
            <param name="matchPinNames">if set to <c>true</c> the pin names of the multiplexer filter should match the pin names of the encoder filter.</param>
            <param name="_graphBuilder">GraphBuilder</param>
            <param name="_tuner">Tuner</param>
            <param name="_capture">Capture</param>
            <returns>true if multiplexer is connected correctly, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.AddTvMultiPlexer(System.Boolean,DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture)">
             <summary>
             Adds the multiplexer filter to the graph.
             several posibilities
              1. no tv multiplexer needed
              2. tv multiplexer filter which is connected to a single encoder filter
              3. tv multiplexer filter which is connected to two encoder filter (audio/video)
              4. tv multiplexer filter which is connected to the capture filter
             at the end this method the graph looks like this:
             
              option 2: single encoder filter
                [                ]----->[                ]      [             ]
                [ capture filter ]      [ encoder filter ]----->[ multiplexer ]
                [                ]----->[                ]      [             ]
            
            
              option 3: dual encoder filters
                [                ]----->[   video        ]    
                [ capture filter ]      [ encoder filter ]------>[             ]
                [                ]      [                ]       [             ]
                [                ]                               [ multiplexer ]
                [                ]----->[   audio        ]------>[             ]
                                        [ encoder filter ]      
                                        [                ]
            
              option 4: no encoder filter
                [                ]----->[             ]
                [ capture filter ]      [ multiplexer ]
                [                ]----->[             ]
             </summary>
             <param name="matchPinNames">if set to <c>true</c> the pin names of the multiplexer filter should match the pin names of the encoder filter.</param>
             <param name="_graphBuilder">GraphBuilder</param>
             <param name="_tuner">Tuner</param>
             <param name="_tvAudio">TvAudio</param>
             <param name="_crossbar">Crossbar</param>
             <param name="_capture">Capture</param>
             <returns>true if encoder filters are added, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.AddTvEncoderFilter(System.Boolean,System.Boolean,DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TvAudio,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Crossbar,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture)">
             <summary>
             Adds one or 2 encoder filters to the graph
              several posibilities
              1. no encoder filter needed
              2. single encoder filter with seperate audio/video inputs and 1 (mpeg-2) output
              3. single encoder filter with a mpeg2 program stream input (I2S)
              4. two encoder filters. one for audio and one for video
            
              At the end of this method the graph looks like:
            
              option 2: one encoder filter, with 2 inputs
                [                ]----->[                ]
                [ capture filter ]      [ encoder filter ]
                [                ]----->[                ]
            
            
              option 3: one encoder filter, with 1 input
                [                ]      [                ]
                [ capture filter ]----->[ encoder filter ]
                [                ]      [                ]
            
            
              option 4: 2 encoder filters one for audio and one for video
                [                ]----->[   video        ]
                [ capture filter ]      [ encoder filter ]
                [                ]      [                ]
                [                ]   
                [                ]----->[   audio        ]
                                        [ encoder filter ]
                                        [                ]
            
             </summary>
             <param name="matchPinNames">if set to <c>true</c> the pin names of the encoder filter should match the pin names of the capture filter.</param>
             <param name="mpeg2ProgramFilter">if set to <c>true</c> than only encoders with an mpeg2 program output pins are accepted</param>
             <param name="_graphBuilder">GraphBuilder</param>
             <param name="_tuner">Tuner</param>
             <param name="_tvAudio">TvAudio</param>
             <param name="_crossbar">Crossbar</param>
             <param name="_capture">Capture</param>
             <returns>true if encoder filters are added, otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.FindMediaPin(DirectShowLib.IBaseFilter,System.Guid,System.Guid)">
            <summary>
            Find a pin on the filter specified
            which can supplies the mediatype and mediasubtype specified
            if found the pin is returned
            </summary>
            <param name="filter">The filter to find the pin on.</param>
            <param name="mediaType">Type of the media.</param>
            <param name="mediaSubtype">The media subtype.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.FindAudioVideoPins(Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture)">
            <summary>
            Finds the analog audio/video output pins
            </summary>
            <param name="_capture">Capture</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.AddAudioCompressor(DirectShowLib.IFilterGraph2)">
            <summary>
            Adds the audio compressor.
            </summary>
            <param name="_graphBuilder">GraphBuilder</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.AddVideoCompressor(DirectShowLib.IFilterGraph2)">
            <summary>
            Adds the video compressor.
            </summary>
            <param name="_graphBuilder">GraphBuilder</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.AddAnalogMuxer(DirectShowLib.IFilterGraph2)">
            <summary>
            Adds the mpeg muxer
            </summary>
            <param name="_graphBuilder">GraphBuilder</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.AddInterVideoMuxer(DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture)">
            <summary>
            Adds the InterVideo muxer and connects the compressor to it.
            This is the preferred muxer for Plextor cards and others.
            It will be used if the InterVideo Audio Encoder is used also.
            </summary>
            <param name="_graphBuilder">GraphBuilder</param>
            <param name="_capture">Capture</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.AddMpeg2Demultiplexer(DirectShowLib.IFilterGraph2)">
            <summary>
            Adds a mpeg2 demultiplexer to the graph
            </summary>
            <param name="_graphBuilder">The graph builder</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.AddMpegMuxer(DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture)">
            <summary>
            Adds the MPEG muxer filter
            </summary>
            <param name="_graphBuilder">GraphBuilder</param>
            <param name="_capture">Capture</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.UpdatePinVideo(System.Boolean,DirectShowLib.IFilterGraph2)">
            <summary>
            Updates the video pin to guarantee, that for tv both streams are in the mux
            </summary>
            <param name="isTv">true, when tv is on; false for radio</param>
            <param name="graphBuilder">GraphBuilder</param>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.VideoEncoderFilter">
            <summary>
            Gets the hw video encoder filter
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.MultiplexerFilter">
            <summary>
            Gets the hw/sw multiplexer filter
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Encoder.VideoCompressorFilter">
            <summary>
            Gets the sw video encoder filter
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.TimeShiftingEPGGrabber.OnEpgCancelled">
            <summary>
            Gets called when epg has been cancelled
            Should be overriden by the class
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.TimeShiftingEPGGrabber.OnEpgReceived">
            <summary>
            Gets called when epg has been received
            Should be overriden by the class
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextDecoder">
            <summary>
            teletext decoder class
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextDecoder.#ctor(Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextPageCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextDecoder"/> class.
            </summary>
            <param name="cache">The cache.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextDecoder.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.TeletextDecoder.Decode(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decodes the specified row data.
            </summary>
            <param name="rowData">The row data.</param>
            <param name="startOff">The start off.</param>
            <param name="rows">The rows.</param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType">
            <summary>
            Tuning types enumeration
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType.NotSet">
            <summary>
            Not set
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType.AnalogTv">
            <summary>
            Analog Tv
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType.AnalogRadio">
            <summary>
            Analog Radio
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType.AnalogRfTuner">
            <summary>
            Analog RfTuner
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType.DvbT">
            <summary>
            DVB-T
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType.DvbS">
            <summary>
            DVB-S
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType.DvbC">
            <summary>
            DVB-C
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType.Atsc">
            <summary>
            ATSC
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType.DvbIp">
            <summary>
            DVB-IP
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType.DvbS2">
            <summary>
            DVB-S2
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType.IsdbT">
            <summary>
            ISDB-T
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.TuningType.IsdbS">
            <summary>
            ISDB-S
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.IDvbNetworkProvider">
            <summary>
             Channel scanning callback
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.SidHelper">
            <summary>
            SID Helper methods
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.SidHelper.GetSidPtr(System.String)">
            <summary>
             Gets the SID pointer
            </summary>
            <param name="name">Name</param>
            <returns>Pointer to the SID</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.SidHelper.GetSid(System.String)">
            <summary>
            Gets the SID
            </summary>
            <param name="name">Name</param>
            <returns>SID</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.SidHelper.GetName(System.String)">
            <summary>
            Gets the name to the given sid
            </summary>
            <param name="sid">The SID</param>
            <returns>Name to the SID</returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo">
            <summary>
            Structure holding all information about a single pid
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.stream_type">
            <summary>
            stream type
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.reserved_1">
            <summary>
            reserved
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.pid">
            <summary>
            pid
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.reserved_2">
            <summary>
            reserved
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.ES_info_length">
            <summary>
            es info length
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.language">
            <summary>
            audio language
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.isAC3Audio">
            <summary>
            true if pid contains ac3 audio
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.isEAC3Audio">
            <summary>
            true if pid contains e_ac3 audio
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.isAudio">
            <summary>
            true if pid contains mpeg1/2 or aac audio
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.isVideo">
            <summary>
            true if pid contains video
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.isTeletext">
            <summary>
            true if pid contains teletext
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.isDVBSubtitle">
            <summary>
            true if pid contains dvb subtitles
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.teletextLANG">
            <summary>
            teletext language
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.AudioPid(System.Int32,System.String)">
            <summary>
            Ctor for an audio pid
            </summary>
            <param name="audioPid">The audio pid.</param>
            <param name="audioLanguage">The audio language.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.AddDescriptorData(System.Byte[])">
            <summary>
            Set the content of the descriptor for this PID
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.HasDescriptorData">
            <summary>
            Checks if the descriptor data has been set
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.GetDescriptorData">
            <summary>
            Returns the descriptor data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.Ac3Pid(System.Int32,System.String)">
            <summary>
            Ctor for an ac3 pid
            </summary> 
            <param name="ac3Pid">The ac3 pid.</param>
            <param name="audioLanguage">The audio language.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.VideoPid(System.Int32,System.Int32)">
            <summary>
            Ctor for an video pid
            </summary>
            <param name="videoPid">The video pid.</param>
            <param name="streamType">the stream Type.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.TeletextPid(System.Int32)">
            <summary>
            ctor for a teletext pid
            </summary>
            <param name="teletextPid">The teletext pid.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.SubtitlePid(System.Int32)">
            <summary>
            ctor for a subtitle pid
            </summary>
            <param name="subtitlePid">The subtitle pid.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.IsMpeg1Audio">
            <summary>
            Determins if the pid is Mpeg-2 Layer 1 audio
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.IsMpeg2Audio">
            <summary>
            Determins if the pid is Mpeg-2 Layer 2 audio
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.IsMpeg1Video">
            <summary>
            Determins if the pid is Mpeg-1 video
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.IsMpeg2Video">
            <summary>
            Determins if the pid is Mpeg-2 video
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.IsMpeg4Video">
            <summary>
            Determins if the pid is Mpeg-4 video
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.IsH264Video">
            <summary>
            Determins if the pid is H,264 video
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.IsAACAudio">
            <summary>
            Determins if the pid is AAC audio
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.PidInfo.IsLATMAACAudio">
            <summary>
            Determins if the pid is LATM AAC audio
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2">
            <summary>
            Implementation of <see cref="T:TvLibrary.Interfaces.ITVCard"/> which handles the SkyStar 2 DVB-S card
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IEpgEvents,DirectShowLib.DsDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2"/> class.
            </summary>
            <param name="epgEvents">The EPG events interface.</param>
            <param name="device">The device.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.Scan(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The subchannel id</param>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.Tune(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Tunes the specified channel.
            </summary>
            <param name="subChannelId">The subchannel id</param>
            <param name="channel">The channel.</param>
            <returns>true if succeeded else false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.CanTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Method to check if card can tune to the channel specified
            </summary>
            <returns>true if card can tune to the channel otherwise false</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.LockInOnSignal">
            <summary>
             Checks if the tuner is locked in and a sginal is present
            </summary>
            <returns>true, when the tuner is locked and a signal is present</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.BuildGraph">
            <summary>
            Builds the graph.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.ConnectInfTeeToSS2(DirectShowLib.IBaseFilter@)">
            <summary>
            Connects the SS2 filter to the infTee
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.SendHwPids(System.Collections.Generic.List{System.UInt16})">
            <summary>
            Sends the HW pids.
            </summary>
            <param name="pids">The pids.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.UpdateSignalQuality(System.Boolean)">
            <summary>
            updates the signal quality/level and tuner locked statusses
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.UpdateSignalQuality">
            <summary>
            updates the signal quality/level and tuner locked statusses
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.Dispose">
            <summary>
            Disposes this instance.
            </summary>    
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.SendDiSEqCCommand(System.Byte[])">
            <summary>
            Send the DiSEqC Command to the tuner filter
            </summary>
            <param name="diSEqC">DiSEqC command</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.ReadDiSEqCCommand(System.Byte[]@)">
            <summary>
            Reads the DiSEqC Command from the tuner filter
            </summary>
            <param name="reply">gets the DiSEqC command</param>
            <returns></returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.ScanningInterface">
            <summary>
            returns the ITVScanning interface used for scanning channels
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.SS2.TvCardDvbSS2.DiSEqCMotor">
            <summary>
            Handles DiSEqC motor operations
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.DVBCScanning">
            <summary>
            Class which implements scanning for tv/radio channels for DVB-C BDA cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.DVBCScanning.#ctor(Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.DVBCScanning"/> class.
            </summary>
            <param name="card">The card.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBC.DVBCScanning.CreateNewChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo)">
            <summary>
            Creates the new channel.
            </summary>
            <param name="channel">The high level tuning detail.</param>
            <param name="info">The subchannel detail.</param>
            <returns>The new channel.</returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.OddParity">
            <summary>
            Odd Parity decoder/encoder
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.OddParity.Encode(System.Byte@)">
            <summary>
             Encodes the given data
            </summary>
            <param name="data">Data to encode</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.OddParity.IsCorrect(System.Byte)">
            <summary>
             Checks if the data is correct
            </summary>
            <param name="data">Data to check</param>
            <returns>true, if the data is correct</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.OddParity.Decode(System.Byte@,System.Int32@)">
            <summary>
             Decodes the given data
            </summary>
            <param name="data">Data to decode</param>
            <param name="decodingErrors">Number of decoding errors</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.OddParity.Encode(System.Byte[])">
            <summary>
            Encodes the given data
            </summary>
            <param name="data">Data to encode</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Teletext.Implementations.OddParity.Decode(System.Byte[],System.Int32@)">
            <summary>
             Decodes the given data
            </summary>
            <param name="data">Data to decode</param>
            <param name="decodingErrors">Number of decoding errors</param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs">
            <summary>
            base class for MDPlug Array
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs.AddSubChannel(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo,System.Boolean)">
            <summary>
            Adds the sub channel.
            </summary>
            <param name="id">The id.</param>
            <param name="channel">The channel</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs.FreeSubChannel(System.Int32)">
            <summary>
            Frees the sub channel.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs.Create(System.String,System.String)">
            <summary>
            MDPlugs public static Creator to test condition before create an instance
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs.#ctor(System.String,System.Int32)">
            <summary>
            private MDPlug Creator
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs.getPlugins">
            <summary>
            Lazy initializing plugins
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs.Finalize">
            <summary>
            private MDPlug Destructor
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs.Close">
            <summary>
            Method release all the mdapi filters in ordinary fashion
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs.Connectmdapifilter(DirectShowLib.IFilterGraph2,DirectShowLib.IBaseFilter@)">
            <summary>
            Connect all mdapifilters between [inftee main] and [TIF MPEG2 Demultiplexer]
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs.FreeChannel(System.String)">
            <summary>
            Frees the given channel
            </summary>
            <param name="channelName">Channel name to be freed</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs.FreeAllChannels">
            <summary>
            Frees all channels
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlugs.SetChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo,System.Boolean)">
            <summary>
            Sends the current channel to the mdapifilter
            </summary>    
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug">
            <summary>
            base class for Agarwal's mdapifilter interface
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.Create(System.String)">
            <summary>
            MDapi public static Creator to test condition before create an instance
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.#ctor(System.String)">
            <summary>
            private MDPlug Creator
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.Finalize">
            <summary>
            private MDPlug Creator
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.GetDecodingChannel">
            <summary>
            returns channel being decoded
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.IsDecodingChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            returns if given channel is decoding
            </summary>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.IsDecodingChannel(System.String)">
            <summary>
            returns if given channel is decoding
            </summary>
            <param name="channelName"></param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.FreeDecodingChannel">
            <summary>
            FreeDecodingChannel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.Close">
            <summary>
            Method release the mdapi filter in ordinary fashion
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.SetChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo)">
            <summary>
            Sends the current channel to the mdapi filter
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.IChangeChannel">
            <summary>
            IChangeChannel interface
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.IChangeChannel.ChangeChannel(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the file name of media file.
            </summary>
            <param name="frequency">Frequency</param>
            <param name="bandwidth">Bandwith</param>
            <param name="polarity">Polarity</param>
            <param name="videopid">Video PID</param>
            <param name="audiopid">Audio PID</param>
            <param name="ecmpid">ECM PID</param>
            <param name="caid">CAID</param>
            <param name="providerid">Provider ID</param>
            <returns></returns>
            <remarks>fn should point to a buffer allocated to at least the length of MAX_PATH (=260)</remarks>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.IChangeChannel.ChangeChannelTP82(System.IntPtr)">
            <summary>
            Get the file name of media file.
            </summary>
            <param name="tp82">The file name buffer.</param>
            <returns></returns>
            <remarks>fn should point to a buffer allocated to at least the length of MAX_PATH (=260)</remarks>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.IChangeChannel.SetPluginsDirectory(System.String)">
            <summary>
             Sets the plugin directory
            </summary>
            <param name="dir">Directory</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.IChangeChannel_Ex">
            <summary>
            IChangeChannel_Ex interface
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.IChangeChannel_Ex.ChangeChannelTP82_Ex(System.IntPtr,System.IntPtr)">
            <summary>
            Get the file name of media file.
            </summary>
            <param name="tp82">The file name buffer.</param>
            <param name="tPids2Dec">tPids2Dec</param>
            <returns></returns>
            <remarks>fn should point to a buffer allocated to at least the length of MAX_PATH (=260)</remarks>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.CA_System82">
            <summary>
            CY System 82 struct
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.CA_System82.CA_Typ">
            <summary>
            CY TYP
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.CA_System82.ECM">
            <summary>
            ECM
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.CA_System82.EMM">
            <summary>
            EMM
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.CA_System82.Provider_Id">
            <summary>
            Provider Id
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82">
            <summary>
            TProgram 82 struct
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Provider">
            <summary>
            Provider
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Freq">
            <summary>
            Frequence
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.PType">
            <summary>
            PType
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Voltage">
            <summary>
            Voltage
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Afc">
            <summary>
            AFC
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.DiSEqC">
            <summary>
            DiSEqC
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Symbolrate">
            <summary>
            Symbolrate
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Qam">
            <summary>
            QAM
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Fec">
            <summary>
            FEC
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Norm">
            <summary>
            Norm
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Tp_id">
            <summary>
            TP Id
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Video_pid">
            <summary>
            Video PID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Audio_pid">
            <summary>
            Audio PID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.TeleText_pid">
            <summary>
            Teletext PID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.PMT_pid">
            <summary>
            PMT PID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.PCR_pid">
            <summary>
            PCR PID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.ECM_PID">
            <summary>
            ECM PID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.SID_pid">
            <summary>
            SID PID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.AC3_pid">
            <summary>
            AC3 PID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.TVType">
            <summary>
            TV Type
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.ServiceTyp">
            <summary>
            Service type
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.CA_ID">
            <summary>
            CA ID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Temp_Audio">
            <summary>
            Temp Audio
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.FilterNr">
            <summary>
            Filter numbers
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Filters">
            <summary>
            Filters
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.CA_Nr">
            <summary>
            CA Number
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.CA_System82">
            <summary>
            CA System82
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.CA_Country">
            <summary>
            CA Country
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Marker">
            <summary>
            Marker
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Link_TP">
            <summary>
            Link TP
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Link_SID">
            <summary>
            Link SID
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.PDynamic">
            <summary>
            PDynamic
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TProgram82.Extern_Buffer">
            <summary>
            Extern Buffer
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TPids2Dec">
            <summary>
            TPids2Dec struct
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TPids2Dec.Pids">
            <summary>
            PIDs
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.MDPlug.TPids2Dec.nbPids">
            <summary>
            Number of pids
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIPBuiltIn">
            <summary>
            DVB IP class
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIPBuiltIn.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IEpgEvents,DirectShowLib.DsDevice,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="epgEvents"></param>
            <param name="device"></param>
            <param name="sequence"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIPBuiltIn.AddStreamSourceFilter(System.String)">
            <summary>
            AddStreamSourceFilter
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIPBuiltIn.RemoveStreamSourceFilter">
            <summary>
            RemoveStreamSourceFilter
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIPBuiltIn.RunGraph(System.Int32,System.String)">
            <summary>
            RunGraph
            </summary>
            <param name="subChannel"></param>
            <param name="url"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIPBuiltIn.MPIPTVSource">
            <summary>
            CLSID_MPIPTVSource
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.QualityControlFactory">
            <summary>
            Class to create the object that implements the IQuality interface for a card or channel
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.QualityControlFactory.createQualityControl(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.Configuration,DirectShowLib.IBaseFilter,DirectShowLib.IBaseFilter,DirectShowLib.IBaseFilter,DirectShowLib.IBaseFilter)">
            <summary>
            Creates the object that implements the IQuality interface
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TeletextComponent">
            <summary>
            The teletext component of the graph
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TeletextComponent._teeSink">
            <summary>
            The see sink filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TeletextComponent._filterWstDecoder">
            <summary>
            The teletext decoder filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TeletextComponent._pinWST_VBI">
            <summary>
            The teletext output pin
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TeletextComponent.Dispose">
            <summary>
            Disposes the teletext component
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TeletextComponent.CreateFilterInstance(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,DirectShowLib.IFilterGraph2,Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Capture)">
            <summary>
            Creates the teletext component in the graph. First we try to use the stored informations in the graph
            </summary>
            <param name="graph">The stored graph</param>
            <param name="graphBuilder">The graphbuilder</param>
            <param name="capture">The capture component</param>
            <returns>true, if the building was successful; false otherwise</returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.TeletextComponent.WST_VBI_Pin">
            <summary>
            Gets the teletext output pin
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStream">
            <summary>
            Class describing a single rtsp stream
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStream.#ctor(System.String,System.String,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.ITVCard,Mediaportal.TV.Server.TVDatabase.Entities.Enums.MediaTypeEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStream"/> class.
            </summary>
            <param name="streamName">Name of the stream.</param>
            <param name="fileName">Name of the file.</param>
            <param name="card">The card.</param>
            <param name="bool">True if the stream originates from a tv channel, false for a radio channel</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStream.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStream"/> class.
            </summary>
            <param name="streamName">Name of the stream.</param>
            <param name="fileName">Name of the file.</param>
            <param name="recording">The recording.</param>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStream.Name">
            <summary>
            Gets the stream name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStream.FileName">
            <summary>
            Gets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStream.Recording">
            <summary>
            Gets the recording.
            </summary>
            <value>The recording.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStream.Card">
            <summary>
            Gets the card.
            </summary>
            <value>The card.</value>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.PidType">
            <summary>
            Enumeration of pid's for the video/audio observer
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.PidType.Video">
            <summary>
            Video pid
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.PidType.Audio">
            <summary>
            Audio pid
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.PidType.Other">
            <summary>
            Other pid
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsRecorder">
            <summary>
            interface to the file recorder comobject
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsRecorder.SetRecordingFileNameW(System.String)">
            <summary>
            Sets the filename to record the stream to.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsRecorder.StartRecord">
            <summary>
            Starts recording.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsRecorder.StopRecord">
            <summary>
            Stops the recording.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsRecorder.SetPmtPid(System.Int16)">
            <summary>
            Sets the pmt pid
            </summary>
            <param name="pmtPid">The PMT pid</param>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess">
            <summary>
            Class which handles the conditional access modules for a tv card
            (CI and CAM)
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess._decryptLimit">
            <summary>
            CA decryption limit, 0 for disable CA
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.#ctor(DirectShowLib.IBaseFilter,DirectShowLib.IBaseFilter,DirectShowLib.IBaseFilter,Mediaportal.TV.Server.TVLibrary.Implementations.TvCardBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
            <param name="analyzerFilter">The capture filter.</param>
            <param name="winTvUsbCiFilter">The WinTV CI filter.</param>
            <param name="card">Determines the type of TV card</param>    
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.AddSubChannel(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel)">
            <summary>
            Adds the sub channel.
            </summary>
            <param name="id">The id.</param>
            <param name="channel">The channel</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.FreeSubChannel(System.Int32)">
            <summary>
            Frees the sub channel.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.IsCamReady">
            <summary>
            returns if cam is ready or not
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.ResetCAM">
            <summary>
            resets the CAM
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.OnRunGraph(System.Int32)">
            <summary>
             Called when the graph is started
            </summary>
            <param name="servicedId">The service id</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.OnStopGraph">
            <summary>
            Called when the graph is stopped
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.PatchPMT_AstonCrypt2(System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Patches the PMT to force standard AC3 header.
            </summary>
            <param name="PMT">byte array containing the PMT</param>
            <param name="pmtLength">length of the pmt array</param>
            <param name="newPmtLength">The new PMT length</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.SendPMT(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBBaseChannel,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends the PMT to the CI module
            </summary>
            <param name="subChannel">The sub channel.</param>
            <param name="channel">channel on which we are tuned</param>
            <param name="PMT">byte array containing the PMT</param>
            <param name="pmtLength">length of the pmt array</param>
            <param name="audioPid">pid of the current audio stream</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.SendDiseqcCommand(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            sends the diseqc command to the card
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="channel">The current tv/radio channel</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.SendPids(System.Int32,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBBaseChannel,System.Collections.Generic.List{System.UInt16})">
            <summary>
            Instructs the cam/ci module to use hardware filter and only send the pids listed in pids to the pc
            </summary>
            <param name="subChannel">The sub channel id</param>
            <param name="channel">The current tv/radio channel.</param>
            <param name="pids">The pids.</param>
            <remarks>when the pids array is empty, pid filtering is disabled and all pids are received</remarks>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.SetDVBS2Modulation(Mediaportal.TV.Server.TVLibrary.Interfaces.ScanParameters,Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.DVBSChannel)">
            <summary>
            Sets the DVB-S2 parameters such as modulation, roll-off, pilot etc.
            </summary>
            <param name="parameters">The LNB parameters.</param>
            <param name="channel">The channel to tune.</param>
            <returns>The channel with DVB-S2 parameters set.</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.CheckATSCQAM(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.ATSCChannel)">
            <summary>
            check if the card are ATSC QAM capable cards.
            If so sets the QAM modulation for those specific ATSC cards.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.CheckVIXSQAM(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.ATSCChannel)">
            <summary>
            gets the QAM modulation for ViXS ATSC cards under XP
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.Dispose">
            <summary>
            Disposing CI and API resources
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.CiMenu">
            <summary>
            Accessor for CI Menu handler
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.HWProvider">
            <summary>
            Accessor for hardware providers.
            Used only for non-standard methods (i.e. vendor APIs)
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.AllowedToStopGraph">
            <summary>
            Gets a value indicating whether we are allowed to stop the graph
            Some devices like the technotrend cards have a very long start up time
            Stopping/starting graphs would mean using these cards is not very userfriendly
            </summary>
            <value><c>true</c> if allowed to stop graph; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.DiSEqCMotor">
            <summary>
            Gets the interface for controlling the DiSeQC motor.
            </summary>
            <value>IDiSEqCMotor.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.UseCA">
            <summary>
            CA enabled or disabled ?
            </summary>
            <value>Is CA enabled or disabled</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.DecryptLimit">
            <summary>
            CA decryption limit, 0 for unlimited
            </summary>
            <value>The number of channels decrypting that are able to decrypt.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.NumberOfChannelsDecrypting">
            <summary>
            Gets the number of channels the card is currently decrypting.
            </summary>
            <value>The number of channels decrypting.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.ConditionalAccess.ConditionalAccess.CiMenuHandler">
            <summary>
            Property to set CI Menu Handler 
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.ViXSATSC.IsCamPresent">
            <summary>
            Gets a value indicating whether this instance is generic qam.
            </summary>
            <value>
            	<c>true</c> if this instance is generic qam; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.ViXSATSC.#ctor(DirectShowLib.IBaseFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.ViXSATSC"/> class.
            </summary>
            <param name="tunerFilter">The tuner filter.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.ViXSATSC.SetViXSQam(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.ATSCChannel)">
            <summary>
            sets the QAM modulation for ViXS ATSC cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.ViXSATSC.GetViXSQam(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.ATSCChannel)">
            <summary>
            gets the QAM modulation for ViXS ATSC cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.QAM.ViXSATSC.Dispose">
            <summary>
            Disposes COM task memory resources
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner">
            <summary>
            The tuner component of the graph
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._tunerDevice">
            <summary>
            The tuner device
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._filterTvTuner">
            <summary>
            The tuner filter
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._minChannel">
            <summary>
            The current minimum channel number
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._maxChannel">
            <summary>
            The current maximum channel number
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._supportsFMRadio">
            <summary>
            Indicates if the tuner supports FM radio
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._supportsAMRadio">
            <summary>
            Indicates if the tuner supports AM radio
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._currentChannel">
            <summary>
            The current analog channel
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._tuner">
            <summary>
            The tuner interface
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._videoFrequency">
            <summary>
            The current video frequency
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._audioFrequency">
            <summary>
            The current audio frequency
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._tunerLocked">
            <summary>
            Indicates if the tuner is locked
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._signalLevel">
            <summary>
            The current signal level
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._signalQuality">
            <summary>
            The current signal quality
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner._audioPin">
            <summary>
            The audio output pin
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.#ctor(DirectShowLib.DsDevice)">
            <summary>
            Constructor
            </summary>
            <param name="tunerDevice">The tuner device</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.Dispose">
            <summary>
            Diposes the tuner component
            </summary>  
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.CreateFilterInstance(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph,DirectShowLib.IFilterGraph2)">
            <summary>
            Creates the tuner filter instance
            </summary>
            <param name="graph">The stored graph</param>
            <param name="graphBuilder">The graphbuilder</param>
            <returns>true, if the graph building was successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.SetFrequencyOverride(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.AnalogChannel)">
            <summary>
            Stores a frequency override in the registry
            </summary>
            <param name="channel">Channel with frequency override</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.CheckCapabilities(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.GraphComponents.Graph)">
            <summary>
            Checks the capabilities of the tuner device
            </summary>
            <returns>true, if the checks were successful</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.UpdateMinMaxChannel">
            <summary>
            Updates the min and max channels
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.IsPlextorCard">
            <summary>
            Indicates if it is a special plextor card
            </summary>
            <returns>true, if it is a special plextor card</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.IsNvidiaCard">
            <summary>
            Indicates if it is a special Nvidia nvtv card
            </summary>
            <returns>true, if it is a special nvidia card</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.UpdateSignalQuality">
            <summary>
            Updates the signal quality
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.PerformTune(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Channels.AnalogChannel)">
            <summary>
            Performs a tuning to the given channel
            </summary>
            <param name="analogChannel">The channel to tune to</param>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.Filter">
            <summary>
            Gets the TvTuner filter
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.AudioPin">
            <summary>
            Gets the audio pin
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.TunerName">
            <summary>
            Gets the tuner device Name
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.TunerLocked">
            <summary>
            Gets if the tuner is locked
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.VideoFrequency">
            <summary>
            Gets the current video frequency
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.AudioFrequency">
            <summary>
            Gets the current audio frequency
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.SignalQuality">
            <summary>
            Gets the current signal quality
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.SignalLevel">
            <summary>
            Gets the current signal level
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.SupportsAMRadio">
            <summary>
            Gets if the tuner supports AM radio
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.SupportsFMRadio">
            <summary>
            Gets if the tuner supports FM radio
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.MaxChannel">
            <summary>
            Gets the current maximum channel number
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.Components.Tuner.MinChannel">
            <summary>
            Gets the current minimum channel number
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming">
            <summary>
            class which handles all RTSP related tasks
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming.DefaultPort">
            <summary>
            Default port number for RTSP
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming"/> class.
            </summary>
            <param name="hostName">ipadress to use for streaming.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming"/> class.
            </summary>
            <param name="hostName">ipadress to use for streaming.</param>
            <param name="port">port no to use for streaming</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming.Start">
            <summary>
            Starts RTSP Streaming.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming.Stop">
            <summary>
            Stops RTSP streaming.
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming.AddStream(Mediaportal.TV.Server.TVLibrary.Streaming.RtspStream)">
            <summary>
            Creates a new RTSP stream
            </summary>
            <param name="stream">The rtsp stream</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming.Remove(System.String)">
            <summary>
            Removes the specified stream .
            </summary>
            <param name="streamName">Name of the stream.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming.RemoveFile(System.String)">
            <summary>
            Stops streaming the file
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming.workerThread">
            <summary>
            worker thread which handles all streaming activity
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming.Clients">
            <summary>
            Gets the streaming clients.
            </summary>
            <value>The clients.</value>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming.Port">
            <summary>
            Returns the active streaming port 
            or 0 if not yet initialized
            </summary>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Streaming.RtspStreaming.ActiveStreams">
            <summary>
             Number of active rtsp streams
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsVideoAnalyzer">
            <summary>
            Interface to the video analyzer com object
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsVideoAnalyzer.SetVideoPid(System.Int16)">
            <summary>
            Sets the video pid.
            </summary>
            <param name="videoPid">The video pid.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsVideoAnalyzer.GetVideoPid(System.Int16@)">
            <summary>
            Gets the video pid.
            </summary>
            <param name="videoPid">The video pid.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsVideoAnalyzer.SetAudioPid(System.Int16)">
            <summary>
            Sets the audio pid.
            </summary>
            <param name="audioPid">The audio pid.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsVideoAnalyzer.GetAudioPid(System.Int16@)">
            <summary>
            Gets the audio pid.
            </summary>
            <param name="audioPid">The audio pid.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsVideoAnalyzer.IsVideoEncrypted(System.Int16@)">
            <summary>
            Determines whether video is encrypted
            </summary>
            <param name="yesNo">1 of encrypted, 0 if not encrypted.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsVideoAnalyzer.IsAudioEncrypted(System.Int16@)">
            <summary>
            Determines whether audio is encrypted
            </summary>
            <param name="yesNo">1 of encrypted, 0 if not encrypted.</param>
            <returns></returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Interfaces.Analyzer.ITsVideoAnalyzer.Reset">
            <summary>
            Resets video analyzer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.DVBTScanning">
            <summary>
            Class which implements scanning for tv/radio channels for DVB-T BDA cards
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.DVBTScanning.#ctor(Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.TvCardDvbBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.DVBTScanning"/> class.
            </summary>
            <param name="card">The card.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBT.DVBTScanning.CreateNewChannel(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IChannel,Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Structures.ChannelInfo)">
            <summary>
            Creates the new channel.
            </summary>
            <param name="channel">The high level tuning detail.</param>
            <param name="info">The subchannel detail.</param>
            <returns>The new channel.</returns>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.DevicesInUse">
            <summary>
            class which is used to remember which devices are currently in use
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.DevicesInUse.#ctor">
            <summary>
            ctor - private since this is a singleton class
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.DevicesInUse.Add(DirectShowLib.DsDevice)">
            <summary>
            use this method to indicate that the device specified is in use
            </summary>
            <param name="device">device</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.DevicesInUse.Remove(DirectShowLib.DsDevice)">
            <summary>
            use this method to indicate that the device specified no longer in use
            </summary>
            <param name="device">device</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.DevicesInUse.IsUsed(DirectShowLib.DsDevice)">
            <summary>
            returns true when the device specified is in use otherwise false
            </summary>
            <param name="device">device to check</param>
            <returns></returns>
        </member>
        <member name="P:Mediaportal.TV.Server.TVLibrary.Implementations.Helper.DevicesInUse.Instance">
            <summary>
            static method to access this class
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIPElecard">
            <summary>
            DVB IP class based on Elecard
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIPElecard.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Interfaces.IEpgEvents,DirectShowLib.DsDevice,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="epgEvents"></param>
            <param name="device"></param>
            <param name="sequence"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIPElecard.AddStreamSourceFilter(System.String)">
            <summary>
            AddStreamSourceFilter
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIPElecard.RemoveStreamSourceFilter">
            <summary>
            RemoveStreamSourceFilter
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIPElecard.RunGraph(System.Int32,System.String)">
            <summary>
            RunGraph
            </summary>
            <param name="subChannel"></param>
            <param name="url"></param>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.DVB.Graphs.DVBIP.TvCardDVBIPElecard.ElecardNWSourcePlus">
            <summary>
            CLSID_ElecardNWSourcePlus
            </summary>
        </member>
        <member name="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.CodecAPIControl">
            <summary>
            Class which implements control of quality trough the use of the ICodecAPI interface
            </summary>
        </member>
        <member name="F:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.CodecAPIControl._codecAPI">
            <summary>
            Instance of the encoder that supports the ICodecAPI
            </summary>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.CodecAPIControl.#ctor(Mediaportal.TV.Server.TVLibrary.Interfaces.Implementations.Analog.Configuration,DirectShowLib.ICodecAPI)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.CodecAPIControl"/> class.
            </summary>
            <param name="configuration">The encoder settings to use.</param>
            <param name="codecAPI">The ICodecAPI interface to the filter that must be used to control the quality.</param>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.CodecAPIControl.IsSupported(System.Guid)">
            <summary>
            Checks if the encoder supports the given GUID
            </summary>
            <param name="guid">GUID</param>
            <returns>HR return value</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.CodecAPIControl.SetValue(System.Guid,System.Object@)">
            <summary>
            Sets the value for the give GUID
            </summary>
            <param name="guid">GUID</param>
            <param name="newBitRateModeO">Bit Rate Mode object</param>
            <returns>HR result</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.CodecAPIControl.GetParameterRange(System.Guid,System.Object@,System.Object@,System.Object@)">
            <summary>
            Gets the parameter range for the given GUID
            </summary>
            <param name="guid">GUID</param>
            <param name="valueMin">minimum out value</param>
            <param name="valueMax">maximum out value</param>
            <param name="steppingDelta">stepping delta out value</param>
            <returns>HR result</returns>
        </member>
        <member name="M:Mediaportal.TV.Server.TVLibrary.Implementations.Analog.QualityControl.CodecAPIControl.GetDefaultValue(System.Guid,System.Object@)">
            <summary>
            Returns the Default value for the given GUID
            </summary>
            <param name="guid">GUID</param>
            <param name="qualityObject">Quality out value</param>
            <returns>HR result object</returns>
        </member>
    </members>
</doc>
